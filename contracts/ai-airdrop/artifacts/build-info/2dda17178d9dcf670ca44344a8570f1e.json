{
	"id": "2dda17178d9dcf670ca44344a8570f1e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"AIAirdrop.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\nimport {ILSP7DigitalAsset as ILSP7} from \"@lukso/lsp-smart-contracts/contracts/LSP7DigitalAsset/ILSP7DigitalAsset.sol\";\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\nimport \"./_event.sol\";\nimport \"./_error.sol\";\nimport \"./_pausable.sol\";\nimport \"./_ownable.sol\";\n\n/// @title Airdrop\n/// @author Aratta Labs\n/// @notice Airdroping LSP7 token by AI agent on LUKSO\n/// @dev You will find the deployed contract addresses in the repo\n/// @custom:emoji 🤖\n/// @custom:security-contact atenyun@gmail.com\ncontract AIAirdrop is Ownable(msg.sender), Pausable {\n    using Counters for Counters.Counter;\n    Counters.Counter public _claimCounter;\n    address public tokenToClaim;\n    uint256 public amountToClaim = 5_000 ether;\n\n    mapping(address => uint256) public claimed;\n\n    constructor(address _tokenToClaim) {\n        tokenToClaim = _tokenToClaim;\n        emit tokenToClaimUpdated(_tokenToClaim);\n    }\n\n    ///@notice Add wallet to the cliamed pool\n    function claim(address _wallet) public onlyOwner whenNotPaused returns (bool) {\n        if (claimed[_wallet] > 0)\n            revert ClaimedAlready(\n                claimed[_wallet],\n                ILSP7(tokenToClaim).balanceOf(_wallet)\n            );\n\n        ILSP7(tokenToClaim).transfer(\n            address(this),\n            _wallet,\n            amountToClaim,\n            true,\n            \"\"\n        );\n        _claimCounter.increment();\n        claimed[_wallet] = block.timestamp;\n\n        // Log\n        emit Claimed(_wallet, block.timestamp);\n\n        return true;\n    }\n\n    /// @notice Update token claim count\n    function updateAmountToClaim(uint256 _amount)\n        public\n        onlyOwner\n        returns (bool)\n    {\n        amountToClaim = _amount;\n        emit amountToClaimUpdated(_amount);\n        return true;\n    }\n\n    function updateTokenToClaim(address _token)\n        public\n        onlyOwner\n        returns (bool)\n    {\n        tokenToClaim = _token;\n        emit tokenToClaimUpdated(_token);\n        return true;\n    }\n\n    ///@notice Withdraw LSP7 token\n    function withdrawLSP7(\n        address _LSP7Token,\n        address _to,\n        uint256 _amount,\n        bool _force,\n        bytes memory _data\n    ) public onlyOwner {\n        ILSP7(_LSP7Token).transfer(address(this), _to, _amount, _force, _data);\n    }\n\n    ///@notice Withdraw the balance from this contract and transfer it to the owner's address\n    function withdraw() public onlyOwner {\n        uint256 amount = address(this).balance;\n        (bool success, ) = owner().call{value: amount}(\"\");\n        require(success, \"Failed\");\n    }\n\n    ///@notice Transfer balance from this contract to input address\n    function transferBalance(address payable _to, uint256 _amount)\n        public\n        onlyOwner\n    {\n        // Note that \"to\" is declared as payable\n        (bool success, ) = _to.call{value: _amount}(\"\");\n        require(success, \"Failed\");\n    }\n\n    /// @notice Return the balance of this contract\n    function getBalance() public view returns (uint256) {\n        return address(this).balance;\n    }\n\n    /// @notice Pause\n    function pause() public onlyOwner {\n        _pause();\n    }\n\n    /// @notice Unpause\n    function unpause() public onlyOwner {\n        _unpause();\n    }\n\n    function time() public view returns (uint256) {\n        return block.timestamp;\n    }\n}\n"
			},
			"_ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.24;\n\nimport {Context} from \"@openzeppelin/contracts/utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}"
			},
			"_pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"@openzeppelin/contracts/utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}"
			},
			"_error.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nerror Unauthorized();\r\nerror ClaimedAlready(uint256 lastTimeClaimed, uint256 userBalance);"
			},
			"_event.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.24;\r\n\r\nevent Log(string message);\r\nevent Claimed(address indexed addr, uint256 claimedTime);\r\nevent amountToClaimUpdated(uint256);\r\nevent tokenToClaimUpdated(address);"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guaratees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(buffer, add(0x20, offset)))\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @title Counters\r\n * @author Matt Condon (@shrugs)\r\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\r\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\r\n *\r\n * Include with `using Counters for Counters.Counter;`\r\n */\r\nlibrary Counters {\r\n    struct Counter {\r\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\r\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\r\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\r\n        uint256 _value; // default: 0\r\n    }\r\n\r\n    function current(Counter storage counter) internal view returns (uint256) {\r\n        return counter._value;\r\n    }\r\n\r\n    function increment(Counter storage counter) internal {\r\n        unchecked {\r\n            counter._value += 1;\r\n        }\r\n    }\r\n\r\n    function decrement(Counter storage counter) internal {\r\n        uint256 value = counter._value;\r\n        require(value > 0, \"Counter: decrement overflow\");\r\n        unchecked {\r\n            counter._value = value - 1;\r\n        }\r\n    }\r\n\r\n    function reset(Counter storage counter) internal {\r\n        counter._value = 0;\r\n    }\r\n}\r\n"
			},
			"@lukso/lsp-smart-contracts/contracts/LSP7DigitalAsset/ILSP7DigitalAsset.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\nimport \"@lukso/lsp7-contracts/contracts/ILSP7DigitalAsset.sol\";\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeCast.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n            // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2²⁵⁶ + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 exp;\n        unchecked {\n            exp = 128 * SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 64 * SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 32 * SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 16 * SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 8 * SafeCast.toUint(value > (1 << 8) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 4 * SafeCast.toUint(value > (1 << 4) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 2 * SafeCast.toUint(value > (1 << 2) - 1);\n            value >>= exp;\n            result += exp;\n\n            result += SafeCast.toUint(value > 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 isGt;\n        unchecked {\n            isGt = SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= isGt * 128;\n            result += isGt * 16;\n\n            isGt = SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= isGt * 64;\n            result += isGt * 8;\n\n            isGt = SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= isGt * 32;\n            result += isGt * 4;\n\n            isGt = SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= isGt * 16;\n            result += isGt * 2;\n\n            result += SafeCast.toUint(value > (1 << 8) - 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"@lukso/lsp7-contracts/contracts/ILSP7DigitalAsset.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\n\npragma solidity ^0.8.4;\n\n// interfaces\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport {\n    IERC725Y\n} from \"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\";\n\n/**\n * @title Interface of the LSP7 - Digital Asset standard, a fungible digital asset.\n */\ninterface ILSP7DigitalAsset is IERC165, IERC725Y {\n    // --- Events\n\n    /**\n     * @dev Emitted when the `from` transferred successfully `amount` of tokens to `to`.\n     * @param operator The address of the operator that executed the transfer.\n     * @param from The address which tokens were sent from (balance decreased by `-amount`).\n     * @param to The address that received the tokens (balance increased by `+amount`).\n     * @param amount The amount of tokens transferred.\n     * @param force if the transferred enforced the `to` recipient address to be a contract that implements the LSP1 standard or not.\n     * @param data Any additional data included by the caller during the transfer, and sent in the LSP1 hooks to the `from` and `to` addresses.\n     */\n    event Transfer(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256 amount,\n        bool force,\n        bytes data\n    );\n\n    /**\n     * @dev Emitted when `tokenOwner` enables `operator` for `amount` tokens.\n     * @param operator The address authorized as an operator\n     * @param tokenOwner The token owner\n     * @param amount The amount of tokens `operator` address has access to from `tokenOwner`\n     * @param operatorNotificationData The data to notify the operator about via LSP1.\n     */\n    event OperatorAuthorizationChanged(\n        address indexed operator,\n        address indexed tokenOwner,\n        uint256 indexed amount,\n        bytes operatorNotificationData\n    );\n\n    /**\n     * @dev Emitted when `tokenOwner` disables `operator` for `amount` tokens and set its {`authorizedAmountFor(...)`} to `0`.\n     * @param operator The address revoked from operating\n     * @param tokenOwner The token owner\n     * @param notified Bool indicating whether the operator has been notified or not\n     * @param operatorNotificationData The data to notify the operator about via LSP1.\n     */\n    event OperatorRevoked(\n        address indexed operator,\n        address indexed tokenOwner,\n        bool indexed notified,\n        bytes operatorNotificationData\n    );\n\n    // --- Token queries\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * If the asset contract has been set to be non-divisible via the `isNonDivisible_` parameter in\n     * the `constructor`, the decimals returned wiil be `0`. Otherwise `18` is the common value.\n     *\n     * @custom:notice This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {balanceOf} and {transfer}.\n     *\n     * @return the number of decimals. If `0` is returned, the asset is non-divisible.\n     */\n    function decimals() external view returns (uint8);\n\n    /**\n     * @dev Returns the number of existing tokens that have been minted in this contract.\n     * @return The number of existing tokens.\n     */\n    function totalSupply() external view returns (uint256);\n\n    // --- Token owner queries\n\n    /**\n     * @dev Get the number of tokens owned by `tokenOwner`.\n     * If the token is divisible (the {decimals} function returns `18`), the amount returned should be divided\n     * by 1e18 to get a better picture of the actual balance of the `tokenOwner`.\n     *\n     * _Example:_\n     *\n     * ```\n     * balanceOf(someAddress) -> 42_000_000_000_000_000_000 / 1e18 = 42 tokens\n     * ```\n     *\n     * @param tokenOwner The address of the token holder to query the balance for.\n     * @return The amount of tokens owned by `tokenOwner`.\n     */\n    function balanceOf(address tokenOwner) external view returns (uint256);\n\n    // --- Operator functionality\n\n    /**\n     * @dev Sets an `amount` of tokens that an `operator` has access from the caller's balance (allowance). See {authorizedAmountFor}.\n     * Notify the operator based on the LSP1-UniversalReceiver standard\n     *\n     * @param operator The address to authorize as an operator.\n     * @param amount The allowance amount of tokens operator has access to.\n     * @param operatorNotificationData The data to notify the operator about via LSP1.\n     *\n     * @custom:requirements\n     * - `operator` cannot be the zero address.\n     *\n     * @custom:events {OperatorAuthorizationChanged} when allowance is given to a new operator or\n     * an existing operator's allowance is updated.\n     */\n    function authorizeOperator(\n        address operator,\n        uint256 amount,\n        bytes memory operatorNotificationData\n    ) external;\n\n    /**\n     * @dev Enables `tokenOwner` to remove `operator` for its tokens, disallowing it to send any amount of tokens on its behalf.\n     * This function also allows the `operator` to remove itself if it is the caller of this function\n     *\n     * @param operator The address to revoke as an operator.\n     * @param tokenOwner The address of the token owner.\n     * @param notify Boolean indicating whether to notify the operator or not.\n     * @param operatorNotificationData The data to notify the operator about via LSP1.\n     *\n     * @custom:requirements\n     * - caller MUST be `operator` or `tokenOwner`\n     * - `operator` cannot be the zero address.\n     *\n     * @custom:events {OperatorRevoked} event with address of the operator being revoked for the caller (token holder).\n     */\n    function revokeOperator(\n        address operator,\n        address tokenOwner,\n        bool notify,\n        bytes memory operatorNotificationData\n    ) external;\n\n    /**\n     * @custom:info This function in the LSP7 contract can be used as a prevention mechanism\n     * against double spending allowance vulnerability.\n     *\n     * @notice Increase the allowance of `operator` by +`addedAmount`\n     *\n     * @dev Atomically increases the allowance granted to `operator` by the caller.\n     * This is an alternative approach to {authorizeOperator} that can be used as a mitigation\n     * for the double spending allowance problem.\n     * Notify the operator based on the LSP1-UniversalReceiver standard\n     *\n     * @param operator The operator to increase the allowance for `msg.sender`\n     * @param addedAmount The additional amount to add on top of the current operator's allowance\n     *\n     * @custom:requirements\n     *  - `operator` cannot be the same address as `msg.sender`\n     *  - `operator` cannot be the zero address.\n     *\n     * @custom:events {OperatorAuthorizationChanged} indicating the updated allowance\n     */\n    function increaseAllowance(\n        address operator,\n        uint256 addedAmount,\n        bytes memory operatorNotificationData\n    ) external;\n\n    /**\n     * @custom:info This function in the LSP7 contract can be used as a prevention mechanism\n     * against the double spending allowance vulnerability.\n     *\n     * @notice Decrease the allowance of `operator` by -`subtractedAmount`\n     *\n     * @dev Atomically decreases the allowance granted to `operator` by the caller.\n     * This is an alternative approach to {authorizeOperator} that can be used as a mitigation\n     * for the double spending allowance problem.\n     * Notify the operator based on the LSP1-UniversalReceiver standard\n     *\n     * @custom:events\n     *  - {OperatorAuthorizationChanged} event indicating the updated allowance after decreasing it.\n     *  - {OperatorRevoked} event if `subtractedAmount` is the full allowance,\n     *    indicating `operator` does not have any alauthorizedAmountForlowance left for `msg.sender`.\n     *\n     * @param operator The operator to decrease allowance for `msg.sender`\n     * @param tokenOwner The address of the token owner.\n     * @param subtractedAmount The amount to decrease by in the operator's allowance.\n     *\n     * @custom:requirements\n     *  - `operator` cannot be the zero address.\n     *  - `operator` must have allowance for the caller of at least `subtractedAmount`.\n     */\n    function decreaseAllowance(\n        address operator,\n        address tokenOwner,\n        uint256 subtractedAmount,\n        bytes memory operatorNotificationData\n    ) external;\n\n    /**\n     * @dev Get the amount of tokens `operator` address has access to from `tokenOwner`.\n     * Operators can send and burn tokens on behalf of their owners.\n     *\n     * @param operator The operator's address to query the authorized amount for.\n     * @param tokenOwner The token owner that `operator` has allowance on.\n     *\n     * @return The amount of tokens the `operator`'s address has access on the `tokenOwner`'s balance.\n     *\n     * @custom:info If this function is called with the same address for `operator` and `tokenOwner`, it will simply read the `tokenOwner`'s balance\n     * (since a tokenOwner is its own operator).\n     */\n    function authorizedAmountFor(\n        address operator,\n        address tokenOwner\n    ) external view returns (uint256);\n\n    /**\n     * @dev Returns all `operator` addresses that are allowed to transfer or burn on behalf of `tokenOwner`.\n     *\n     * @param tokenOwner The token owner to get the operators for.\n     * @return An array of operators allowed to transfer or burn tokens on behalf of `tokenOwner`.\n     */\n    function getOperatorsOf(\n        address tokenOwner\n    ) external view returns (address[] memory);\n\n    // --- Transfer functionality\n\n    /**\n     * @dev Transfers an `amount` of tokens from the `from` address to the `to` address and notify both sender and recipients via the LSP1 {`universalReceiver(...)`} function.\n     * If the tokens are transferred by an operator on behalf of a token holder, the allowance for the operator will be decreased by `amount` once the token transfer\n     * has been completed (See {authorizedAmountFor}).\n     *\n     * @param from The sender address.\n     * @param to The recipient address.\n     * @param amount The amount of tokens to transfer.\n     * @param force When set to `true`, the `to` address CAN be any address. When set to `false`, the `to` address MUST be a contract that supports the LSP1 UniversalReceiver standard.\n     * @param data Any additional data the caller wants included in the emitted event, and sent in the hooks of the `from` and `to` addresses.\n     *\n     * @custom:requirements\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` and `to` cannot be the same address (`from` cannot send tokens to itself).\n     * - `from` MUST have a balance of at least `amount` tokens.\n     * - If the caller is not `from`, it must be an operator for `from` with an allowance of at least `amount` of tokens.\n     *\n     * @custom:events\n     * - {Transfer} event when tokens get successfully transferred.\n     * - if the transfer is triggered by an operator, either the {OperatorAuthorizationChanged} event will be emitted with the updated allowance or the {OperatorRevoked}\n     * event will be emitted if the operator has no more allowance left.\n     *\n     * @custom:hint The `force` parameter **MUST be set to `true`** to transfer tokens to Externally Owned Accounts (EOAs)\n     * or contracts that do not implement the LSP1 Universal Receiver Standard. Otherwise the function will revert making the transfer fail.\n     *\n     * @custom:info if the `to` address is a contract that implements LSP1, it will always be notified via its `universalReceiver(...)` function, regardless if `force` is set to `true` or `false`.\n     *\n     * @custom:warning Be aware that when either the sender or the recipient can have logic that revert in their `universalReceiver(...)` function when being notified.\n     * This even if the `force` was set to `true`.\n     */\n    function transfer(\n        address from,\n        address to,\n        uint256 amount,\n        bool force,\n        bytes memory data\n    ) external;\n\n    /**\n     * @dev Same as {`transfer(...)`} but transfer multiple tokens based on the arrays of `from`, `to`, `amount`.\n     *\n     * @custom:info If any transfer in the batch fail or revert, the whole call will revert.\n     *\n     * @param from An array of sending addresses.\n     * @param to An array of receiving addresses.\n     * @param amount An array of amount of tokens to transfer for each `from -> to` transfer.\n     * @param force For each transfer, when set to `true`, the `to` address CAN be any address. When set to `false`, the `to` address MUST be a contract that supports the LSP1 UniversalReceiver standard.\n     * @param data An array of additional data the caller wants included in the emitted event, and sent in the hooks to `from` and `to` addresses.\n     *\n     * @custom:requirements\n     * - `from`, `to`, `amount` lists MUST be of the same length.\n     * - no values in `from` can be the zero address.\n     * - no values in `to` can be the zero address.\n     * - each `amount` tokens MUST be owned by `from`.\n     * - for each transfer, if the caller is not `from`, it MUST be an operator for `from` with access to at least `amount` tokens.\n     *\n     * @custom:events {Transfer} event **for each token transfer**.\n     */\n    function transferBatch(\n        address[] memory from,\n        address[] memory to,\n        uint256[] memory amount,\n        bool[] memory force,\n        bytes[] memory data\n    ) external;\n\n    /**\n     * @notice Executing the following batch of abi-encoded function calls on the contract: `data`.\n     *\n     * @dev Allows a caller to batch different function calls in one call. Perform a `delegatecall` on self, to call different functions with preserving the context.\n     * @param data An array of ABI encoded function calls to be called on the contract.\n     * @return results An array of abi-encoded data returned by the functions executed.\n     */\n    function batchCalls(\n        bytes[] calldata data\n    ) external returns (bytes[] memory results);\n}\n"
			},
			"@openzeppelin/contracts/utils/Panic.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"
			},
			"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol": {
				"content": "// SPDX-License-Identifier: CC0-1.0\npragma solidity ^0.8.0;\n\n// interfaces\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\n\n/**\n * @title The interface for ERC725Y sub-standard, a generic data key/value store.\n * @dev ERC725Y provides the ability to set arbitrary data key/value pairs that can be changed over time.\n * It is intended to standardise certain data key/value pairs to allow automated read and writes from/to the contract storage.\n */\ninterface IERC725Y is IERC165 {\n    /**\n     * @notice The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`.\n     * @dev Emitted when data at a specific `dataKey` was changed to a new value `dataValue`.\n     * @param dataKey The data key for which a bytes value is set.\n     * @param dataValue The value to set for the given data key.\n     */\n    event DataChanged(bytes32 indexed dataKey, bytes dataValue);\n\n    /**\n     * @notice Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`.\n     * @dev Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.\n     * @param dataKey The data key for which to retrieve the value.\n     * @return dataValue The bytes value stored under the specified data key.\n     */\n    function getData(\n        bytes32 dataKey\n    ) external view returns (bytes memory dataValue);\n\n    /**\n     * @notice Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`.\n     * @dev Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.\n     * @param dataKeys The array of keys which values to retrieve\n     * @return dataValues The array of data stored at multiple keys\n     */\n    function getDataBatch(\n        bytes32[] memory dataKeys\n    ) external view returns (bytes[] memory dataValues);\n\n    /**\n     * @notice Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`.\n     *\n     * @dev Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`.\n     * The function is marked as payable to enable flexibility on child contracts. For instance to implement\n     * a fee mechanism for setting specific data.\n     *\n     * @param dataKey The data key for which to set a new value.\n     * @param dataValue The new bytes value to set.\n     */\n    function setData(bytes32 dataKey, bytes memory dataValue) external payable;\n\n    /**\n     * @notice Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`.\n     *\n     * @dev Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.\n     *\n     * @param dataKeys An array of data keys to set bytes values for.\n     * @param dataValues An array of bytes values to set for each `dataKeys`.\n     */\n    function setDataBatch(\n        bytes32[] memory dataKeys,\n        bytes[] memory dataValues\n    ) external payable;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol": {
				"IERC725Y": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "dataKey",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "dataValue",
									"type": "bytes"
								}
							],
							"name": "DataChanged",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "dataKey",
									"type": "bytes32"
								}
							],
							"name": "getData",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "dataValue",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32[]",
									"name": "dataKeys",
									"type": "bytes32[]"
								}
							],
							"name": "getDataBatch",
							"outputs": [
								{
									"internalType": "bytes[]",
									"name": "dataValues",
									"type": "bytes[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "dataKey",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "dataValue",
									"type": "bytes"
								}
							],
							"name": "setData",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32[]",
									"name": "dataKeys",
									"type": "bytes32[]"
								},
								{
									"internalType": "bytes[]",
									"name": "dataValues",
									"type": "bytes[]"
								}
							],
							"name": "setDataBatch",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC725Y provides the ability to set arbitrary data key/value pairs that can be changed over time. It is intended to standardise certain data key/value pairs to allow automated read and writes from/to the contract storage.",
						"events": {
							"DataChanged(bytes32,bytes)": {
								"details": "Emitted when data at a specific `dataKey` was changed to a new value `dataValue`.",
								"params": {
									"dataKey": "The data key for which a bytes value is set.",
									"dataValue": "The value to set for the given data key."
								}
							}
						},
						"kind": "dev",
						"methods": {
							"getData(bytes32)": {
								"details": "Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.",
								"params": {
									"dataKey": "The data key for which to retrieve the value."
								},
								"returns": {
									"dataValue": "The bytes value stored under the specified data key."
								}
							},
							"getDataBatch(bytes32[])": {
								"details": "Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.",
								"params": {
									"dataKeys": "The array of keys which values to retrieve"
								},
								"returns": {
									"dataValues": "The array of data stored at multiple keys"
								}
							},
							"setData(bytes32,bytes)": {
								"details": "Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`. The function is marked as payable to enable flexibility on child contracts. For instance to implement a fee mechanism for setting specific data.",
								"params": {
									"dataKey": "The data key for which to set a new value.",
									"dataValue": "The new bytes value to set."
								}
							},
							"setDataBatch(bytes32[],bytes[])": {
								"details": "Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.",
								"params": {
									"dataKeys": "An array of data keys to set bytes values for.",
									"dataValues": "An array of bytes values to set for each `dataKeys`."
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"title": "The interface for ERC725Y sub-standard, a generic data key/value store.",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getData(bytes32)": "54f6127f",
							"getDataBatch(bytes32[])": "dedff9c6",
							"setData(bytes32,bytes)": "7f23690c",
							"setDataBatch(bytes32[],bytes[])": "97902421",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"DataChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getDataBatch\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setDataBatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC725Y provides the ability to set arbitrary data key/value pairs that can be changed over time. It is intended to standardise certain data key/value pairs to allow automated read and writes from/to the contract storage.\",\"events\":{\"DataChanged(bytes32,bytes)\":{\"details\":\"Emitted when data at a specific `dataKey` was changed to a new value `dataValue`.\",\"params\":{\"dataKey\":\"The data key for which a bytes value is set.\",\"dataValue\":\"The value to set for the given data key.\"}}},\"kind\":\"dev\",\"methods\":{\"getData(bytes32)\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.\",\"params\":{\"dataKey\":\"The data key for which to retrieve the value.\"},\"returns\":{\"dataValue\":\"The bytes value stored under the specified data key.\"}},\"getDataBatch(bytes32[])\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.\",\"params\":{\"dataKeys\":\"The array of keys which values to retrieve\"},\"returns\":{\"dataValues\":\"The array of data stored at multiple keys\"}},\"setData(bytes32,bytes)\":{\"details\":\"Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`. The function is marked as payable to enable flexibility on child contracts. For instance to implement a fee mechanism for setting specific data.\",\"params\":{\"dataKey\":\"The data key for which to set a new value.\",\"dataValue\":\"The new bytes value to set.\"}},\"setDataBatch(bytes32[],bytes[])\":{\"details\":\"Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.\",\"params\":{\"dataKeys\":\"An array of data keys to set bytes values for.\",\"dataValues\":\"An array of bytes values to set for each `dataKeys`.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"title\":\"The interface for ERC725Y sub-standard, a generic data key/value store.\",\"version\":1},\"userdoc\":{\"events\":{\"DataChanged(bytes32,bytes)\":{\"notice\":\"The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`.\"}},\"kind\":\"user\",\"methods\":{\"getData(bytes32)\":{\"notice\":\"Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`.\"},\"getDataBatch(bytes32[])\":{\"notice\":\"Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`.\"},\"setData(bytes32,bytes)\":{\"notice\":\"Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`.\"},\"setDataBatch(bytes32[],bytes[])\":{\"notice\":\"Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":\"IERC725Y\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0xa47c9e3eba0c733a1685b9fa309f753540c89ad2dca73236a2c953e7f5680e7b\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://59076395f660838919a2068cb7792c0fa70533642bbc5b4e3cc3cbb2c9ec7b50\",\"dweb:/ipfs/QmQqew3mDuyHCBdd4v1JiwRiKEbzk3LeHchzTHSdyhYg5b\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"DataChanged(bytes32,bytes)": {
								"notice": "The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`."
							}
						},
						"kind": "user",
						"methods": {
							"getData(bytes32)": {
								"notice": "Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`."
							},
							"getDataBatch(bytes32[])": {
								"notice": "Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`."
							},
							"setData(bytes32,bytes)": {
								"notice": "Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`."
							},
							"setDataBatch(bytes32[],bytes[])": {
								"notice": "Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`."
							}
						},
						"version": 1
					}
				}
			},
			"@lukso/lsp7-contracts/contracts/ILSP7DigitalAsset.sol": {
				"ILSP7DigitalAsset": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "dataKey",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "dataValue",
									"type": "bytes"
								}
							],
							"name": "DataChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "operatorNotificationData",
									"type": "bytes"
								}
							],
							"name": "OperatorAuthorizationChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "bool",
									"name": "notified",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "operatorNotificationData",
									"type": "bytes"
								}
							],
							"name": "OperatorRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "force",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "operatorNotificationData",
									"type": "bytes"
								}
							],
							"name": "authorizeOperator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenOwner",
									"type": "address"
								}
							],
							"name": "authorizedAmountFor",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenOwner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes[]",
									"name": "data",
									"type": "bytes[]"
								}
							],
							"name": "batchCalls",
							"outputs": [
								{
									"internalType": "bytes[]",
									"name": "results",
									"type": "bytes[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenOwner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedAmount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "operatorNotificationData",
									"type": "bytes"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "dataKey",
									"type": "bytes32"
								}
							],
							"name": "getData",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "dataValue",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32[]",
									"name": "dataKeys",
									"type": "bytes32[]"
								}
							],
							"name": "getDataBatch",
							"outputs": [
								{
									"internalType": "bytes[]",
									"name": "dataValues",
									"type": "bytes[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenOwner",
									"type": "address"
								}
							],
							"name": "getOperatorsOf",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedAmount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "operatorNotificationData",
									"type": "bytes"
								}
							],
							"name": "increaseAllowance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenOwner",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "notify",
									"type": "bool"
								},
								{
									"internalType": "bytes",
									"name": "operatorNotificationData",
									"type": "bytes"
								}
							],
							"name": "revokeOperator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "dataKey",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "dataValue",
									"type": "bytes"
								}
							],
							"name": "setData",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32[]",
									"name": "dataKeys",
									"type": "bytes32[]"
								},
								{
									"internalType": "bytes[]",
									"name": "dataValues",
									"type": "bytes[]"
								}
							],
							"name": "setDataBatch",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "force",
									"type": "bool"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "from",
									"type": "address[]"
								},
								{
									"internalType": "address[]",
									"name": "to",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amount",
									"type": "uint256[]"
								},
								{
									"internalType": "bool[]",
									"name": "force",
									"type": "bool[]"
								},
								{
									"internalType": "bytes[]",
									"name": "data",
									"type": "bytes[]"
								}
							],
							"name": "transferBatch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"DataChanged(bytes32,bytes)": {
								"details": "Emitted when data at a specific `dataKey` was changed to a new value `dataValue`.",
								"params": {
									"dataKey": "The data key for which a bytes value is set.",
									"dataValue": "The value to set for the given data key."
								}
							},
							"OperatorAuthorizationChanged(address,address,uint256,bytes)": {
								"details": "Emitted when `tokenOwner` enables `operator` for `amount` tokens.",
								"params": {
									"amount": "The amount of tokens `operator` address has access to from `tokenOwner`",
									"operator": "The address authorized as an operator",
									"operatorNotificationData": "The data to notify the operator about via LSP1.",
									"tokenOwner": "The token owner"
								}
							},
							"OperatorRevoked(address,address,bool,bytes)": {
								"details": "Emitted when `tokenOwner` disables `operator` for `amount` tokens and set its {`authorizedAmountFor(...)`} to `0`.",
								"params": {
									"notified": "Bool indicating whether the operator has been notified or not",
									"operator": "The address revoked from operating",
									"operatorNotificationData": "The data to notify the operator about via LSP1.",
									"tokenOwner": "The token owner"
								}
							},
							"Transfer(address,address,address,uint256,bool,bytes)": {
								"details": "Emitted when the `from` transferred successfully `amount` of tokens to `to`.",
								"params": {
									"amount": "The amount of tokens transferred.",
									"data": "Any additional data included by the caller during the transfer, and sent in the LSP1 hooks to the `from` and `to` addresses.",
									"force": "if the transferred enforced the `to` recipient address to be a contract that implements the LSP1 standard or not.",
									"from": "The address which tokens were sent from (balance decreased by `-amount`).",
									"operator": "The address of the operator that executed the transfer.",
									"to": "The address that received the tokens (balance increased by `+amount`)."
								}
							}
						},
						"kind": "dev",
						"methods": {
							"authorizeOperator(address,uint256,bytes)": {
								"custom:events": "{OperatorAuthorizationChanged} when allowance is given to a new operator or an existing operator's allowance is updated.",
								"custom:requirements": "- `operator` cannot be the zero address.",
								"details": "Sets an `amount` of tokens that an `operator` has access from the caller's balance (allowance). See {authorizedAmountFor}. Notify the operator based on the LSP1-UniversalReceiver standard",
								"params": {
									"amount": "The allowance amount of tokens operator has access to.",
									"operator": "The address to authorize as an operator.",
									"operatorNotificationData": "The data to notify the operator about via LSP1."
								}
							},
							"authorizedAmountFor(address,address)": {
								"custom:info": "If this function is called with the same address for `operator` and `tokenOwner`, it will simply read the `tokenOwner`'s balance (since a tokenOwner is its own operator).",
								"details": "Get the amount of tokens `operator` address has access to from `tokenOwner`. Operators can send and burn tokens on behalf of their owners.",
								"params": {
									"operator": "The operator's address to query the authorized amount for.",
									"tokenOwner": "The token owner that `operator` has allowance on."
								},
								"returns": {
									"_0": "The amount of tokens the `operator`'s address has access on the `tokenOwner`'s balance."
								}
							},
							"balanceOf(address)": {
								"details": "Get the number of tokens owned by `tokenOwner`. If the token is divisible (the {decimals} function returns `18`), the amount returned should be divided by 1e18 to get a better picture of the actual balance of the `tokenOwner`. _Example:_ ``` balanceOf(someAddress) -> 42_000_000_000_000_000_000 / 1e18 = 42 tokens ```",
								"params": {
									"tokenOwner": "The address of the token holder to query the balance for."
								},
								"returns": {
									"_0": "The amount of tokens owned by `tokenOwner`."
								}
							},
							"batchCalls(bytes[])": {
								"details": "Allows a caller to batch different function calls in one call. Perform a `delegatecall` on self, to call different functions with preserving the context.",
								"params": {
									"data": "An array of ABI encoded function calls to be called on the contract."
								},
								"returns": {
									"results": "An array of abi-encoded data returned by the functions executed."
								}
							},
							"decimals()": {
								"custom:notice": "This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {balanceOf} and {transfer}.",
								"details": "Returns the number of decimals used to get its user representation. If the asset contract has been set to be non-divisible via the `isNonDivisible_` parameter in the `constructor`, the decimals returned wiil be `0`. Otherwise `18` is the common value.",
								"returns": {
									"_0": "the number of decimals. If `0` is returned, the asset is non-divisible."
								}
							},
							"decreaseAllowance(address,address,uint256,bytes)": {
								"custom:events": "- {OperatorAuthorizationChanged} event indicating the updated allowance after decreasing it.  - {OperatorRevoked} event if `subtractedAmount` is the full allowance,    indicating `operator` does not have any alauthorizedAmountForlowance left for `msg.sender`.",
								"custom:info": "This function in the LSP7 contract can be used as a prevention mechanism against the double spending allowance vulnerability.",
								"custom:requirements": "- `operator` cannot be the zero address.  - `operator` must have allowance for the caller of at least `subtractedAmount`.",
								"details": "Atomically decreases the allowance granted to `operator` by the caller. This is an alternative approach to {authorizeOperator} that can be used as a mitigation for the double spending allowance problem. Notify the operator based on the LSP1-UniversalReceiver standard",
								"params": {
									"operator": "The operator to decrease allowance for `msg.sender`",
									"subtractedAmount": "The amount to decrease by in the operator's allowance.",
									"tokenOwner": "The address of the token owner."
								}
							},
							"getData(bytes32)": {
								"details": "Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.",
								"params": {
									"dataKey": "The data key for which to retrieve the value."
								},
								"returns": {
									"dataValue": "The bytes value stored under the specified data key."
								}
							},
							"getDataBatch(bytes32[])": {
								"details": "Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.",
								"params": {
									"dataKeys": "The array of keys which values to retrieve"
								},
								"returns": {
									"dataValues": "The array of data stored at multiple keys"
								}
							},
							"getOperatorsOf(address)": {
								"details": "Returns all `operator` addresses that are allowed to transfer or burn on behalf of `tokenOwner`.",
								"params": {
									"tokenOwner": "The token owner to get the operators for."
								},
								"returns": {
									"_0": "An array of operators allowed to transfer or burn tokens on behalf of `tokenOwner`."
								}
							},
							"increaseAllowance(address,uint256,bytes)": {
								"custom:events": "{OperatorAuthorizationChanged} indicating the updated allowance",
								"custom:info": "This function in the LSP7 contract can be used as a prevention mechanism against double spending allowance vulnerability.",
								"custom:requirements": "- `operator` cannot be the same address as `msg.sender`  - `operator` cannot be the zero address.",
								"details": "Atomically increases the allowance granted to `operator` by the caller. This is an alternative approach to {authorizeOperator} that can be used as a mitigation for the double spending allowance problem. Notify the operator based on the LSP1-UniversalReceiver standard",
								"params": {
									"addedAmount": "The additional amount to add on top of the current operator's allowance",
									"operator": "The operator to increase the allowance for `msg.sender`"
								}
							},
							"revokeOperator(address,address,bool,bytes)": {
								"custom:events": "{OperatorRevoked} event with address of the operator being revoked for the caller (token holder).",
								"custom:requirements": "- caller MUST be `operator` or `tokenOwner` - `operator` cannot be the zero address.",
								"details": "Enables `tokenOwner` to remove `operator` for its tokens, disallowing it to send any amount of tokens on its behalf. This function also allows the `operator` to remove itself if it is the caller of this function",
								"params": {
									"notify": "Boolean indicating whether to notify the operator or not.",
									"operator": "The address to revoke as an operator.",
									"operatorNotificationData": "The data to notify the operator about via LSP1.",
									"tokenOwner": "The address of the token owner."
								}
							},
							"setData(bytes32,bytes)": {
								"details": "Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`. The function is marked as payable to enable flexibility on child contracts. For instance to implement a fee mechanism for setting specific data.",
								"params": {
									"dataKey": "The data key for which to set a new value.",
									"dataValue": "The new bytes value to set."
								}
							},
							"setDataBatch(bytes32[],bytes[])": {
								"details": "Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.",
								"params": {
									"dataKeys": "An array of data keys to set bytes values for.",
									"dataValues": "An array of bytes values to set for each `dataKeys`."
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the number of existing tokens that have been minted in this contract.",
								"returns": {
									"_0": "The number of existing tokens."
								}
							},
							"transfer(address,address,uint256,bool,bytes)": {
								"custom:events": "- {Transfer} event when tokens get successfully transferred. - if the transfer is triggered by an operator, either the {OperatorAuthorizationChanged} event will be emitted with the updated allowance or the {OperatorRevoked} event will be emitted if the operator has no more allowance left.",
								"custom:hint": "The `force` parameter **MUST be set to `true`** to transfer tokens to Externally Owned Accounts (EOAs) or contracts that do not implement the LSP1 Universal Receiver Standard. Otherwise the function will revert making the transfer fail.",
								"custom:info": "if the `to` address is a contract that implements LSP1, it will always be notified via its `universalReceiver(...)` function, regardless if `force` is set to `true` or `false`.",
								"custom:requirements": "- `from` cannot be the zero address. - `to` cannot be the zero address. - `from` and `to` cannot be the same address (`from` cannot send tokens to itself). - `from` MUST have a balance of at least `amount` tokens. - If the caller is not `from`, it must be an operator for `from` with an allowance of at least `amount` of tokens.",
								"custom:warning": "Be aware that when either the sender or the recipient can have logic that revert in their `universalReceiver(...)` function when being notified. This even if the `force` was set to `true`.",
								"details": "Transfers an `amount` of tokens from the `from` address to the `to` address and notify both sender and recipients via the LSP1 {`universalReceiver(...)`} function. If the tokens are transferred by an operator on behalf of a token holder, the allowance for the operator will be decreased by `amount` once the token transfer has been completed (See {authorizedAmountFor}).",
								"params": {
									"amount": "The amount of tokens to transfer.",
									"data": "Any additional data the caller wants included in the emitted event, and sent in the hooks of the `from` and `to` addresses.",
									"force": "When set to `true`, the `to` address CAN be any address. When set to `false`, the `to` address MUST be a contract that supports the LSP1 UniversalReceiver standard.",
									"from": "The sender address.",
									"to": "The recipient address."
								}
							},
							"transferBatch(address[],address[],uint256[],bool[],bytes[])": {
								"custom:events": "{Transfer} event **for each token transfer**.",
								"custom:info": "If any transfer in the batch fail or revert, the whole call will revert.",
								"custom:requirements": "- `from`, `to`, `amount` lists MUST be of the same length. - no values in `from` can be the zero address. - no values in `to` can be the zero address. - each `amount` tokens MUST be owned by `from`. - for each transfer, if the caller is not `from`, it MUST be an operator for `from` with access to at least `amount` tokens.",
								"details": "Same as {`transfer(...)`} but transfer multiple tokens based on the arrays of `from`, `to`, `amount`.",
								"params": {
									"amount": "An array of amount of tokens to transfer for each `from -> to` transfer.",
									"data": "An array of additional data the caller wants included in the emitted event, and sent in the hooks to `from` and `to` addresses.",
									"force": "For each transfer, when set to `true`, the `to` address CAN be any address. When set to `false`, the `to` address MUST be a contract that supports the LSP1 UniversalReceiver standard.",
									"from": "An array of sending addresses.",
									"to": "An array of receiving addresses."
								}
							}
						},
						"title": "Interface of the LSP7 - Digital Asset standard, a fungible digital asset.",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"authorizeOperator(address,uint256,bytes)": "b49506fd",
							"authorizedAmountFor(address,address)": "65aeaa95",
							"balanceOf(address)": "70a08231",
							"batchCalls(bytes[])": "6963d438",
							"decimals()": "313ce567",
							"decreaseAllowance(address,address,uint256,bytes)": "78381670",
							"getData(bytes32)": "54f6127f",
							"getDataBatch(bytes32[])": "dedff9c6",
							"getOperatorsOf(address)": "d72fc29a",
							"increaseAllowance(address,uint256,bytes)": "2bc1da82",
							"revokeOperator(address,address,bool,bytes)": "30d0dc37",
							"setData(bytes32,bytes)": "7f23690c",
							"setDataBatch(bytes32[],bytes[])": "97902421",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,address,uint256,bool,bytes)": "760d9bba",
							"transferBatch(address[],address[],uint256[],bool[],bytes[])": "2d7667c9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"DataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"OperatorAuthorizationChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"notified\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"OperatorRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"authorizeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"authorizedAmountFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"batchCalls\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"decreaseAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getDataBatch\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"getOperatorsOf\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"increaseAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"notify\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"revokeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setDataBatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"from\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"to\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amount\",\"type\":\"uint256[]\"},{\"internalType\":\"bool[]\",\"name\":\"force\",\"type\":\"bool[]\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"transferBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"DataChanged(bytes32,bytes)\":{\"details\":\"Emitted when data at a specific `dataKey` was changed to a new value `dataValue`.\",\"params\":{\"dataKey\":\"The data key for which a bytes value is set.\",\"dataValue\":\"The value to set for the given data key.\"}},\"OperatorAuthorizationChanged(address,address,uint256,bytes)\":{\"details\":\"Emitted when `tokenOwner` enables `operator` for `amount` tokens.\",\"params\":{\"amount\":\"The amount of tokens `operator` address has access to from `tokenOwner`\",\"operator\":\"The address authorized as an operator\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenOwner\":\"The token owner\"}},\"OperatorRevoked(address,address,bool,bytes)\":{\"details\":\"Emitted when `tokenOwner` disables `operator` for `amount` tokens and set its {`authorizedAmountFor(...)`} to `0`.\",\"params\":{\"notified\":\"Bool indicating whether the operator has been notified or not\",\"operator\":\"The address revoked from operating\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenOwner\":\"The token owner\"}},\"Transfer(address,address,address,uint256,bool,bytes)\":{\"details\":\"Emitted when the `from` transferred successfully `amount` of tokens to `to`.\",\"params\":{\"amount\":\"The amount of tokens transferred.\",\"data\":\"Any additional data included by the caller during the transfer, and sent in the LSP1 hooks to the `from` and `to` addresses.\",\"force\":\"if the transferred enforced the `to` recipient address to be a contract that implements the LSP1 standard or not.\",\"from\":\"The address which tokens were sent from (balance decreased by `-amount`).\",\"operator\":\"The address of the operator that executed the transfer.\",\"to\":\"The address that received the tokens (balance increased by `+amount`).\"}}},\"kind\":\"dev\",\"methods\":{\"authorizeOperator(address,uint256,bytes)\":{\"custom:events\":\"{OperatorAuthorizationChanged} when allowance is given to a new operator or an existing operator's allowance is updated.\",\"custom:requirements\":\"- `operator` cannot be the zero address.\",\"details\":\"Sets an `amount` of tokens that an `operator` has access from the caller's balance (allowance). See {authorizedAmountFor}. Notify the operator based on the LSP1-UniversalReceiver standard\",\"params\":{\"amount\":\"The allowance amount of tokens operator has access to.\",\"operator\":\"The address to authorize as an operator.\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\"}},\"authorizedAmountFor(address,address)\":{\"custom:info\":\"If this function is called with the same address for `operator` and `tokenOwner`, it will simply read the `tokenOwner`'s balance (since a tokenOwner is its own operator).\",\"details\":\"Get the amount of tokens `operator` address has access to from `tokenOwner`. Operators can send and burn tokens on behalf of their owners.\",\"params\":{\"operator\":\"The operator's address to query the authorized amount for.\",\"tokenOwner\":\"The token owner that `operator` has allowance on.\"},\"returns\":{\"_0\":\"The amount of tokens the `operator`'s address has access on the `tokenOwner`'s balance.\"}},\"balanceOf(address)\":{\"details\":\"Get the number of tokens owned by `tokenOwner`. If the token is divisible (the {decimals} function returns `18`), the amount returned should be divided by 1e18 to get a better picture of the actual balance of the `tokenOwner`. _Example:_ ``` balanceOf(someAddress) -> 42_000_000_000_000_000_000 / 1e18 = 42 tokens ```\",\"params\":{\"tokenOwner\":\"The address of the token holder to query the balance for.\"},\"returns\":{\"_0\":\"The amount of tokens owned by `tokenOwner`.\"}},\"batchCalls(bytes[])\":{\"details\":\"Allows a caller to batch different function calls in one call. Perform a `delegatecall` on self, to call different functions with preserving the context.\",\"params\":{\"data\":\"An array of ABI encoded function calls to be called on the contract.\"},\"returns\":{\"results\":\"An array of abi-encoded data returned by the functions executed.\"}},\"decimals()\":{\"custom:notice\":\"This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {balanceOf} and {transfer}.\",\"details\":\"Returns the number of decimals used to get its user representation. If the asset contract has been set to be non-divisible via the `isNonDivisible_` parameter in the `constructor`, the decimals returned wiil be `0`. Otherwise `18` is the common value.\",\"returns\":{\"_0\":\"the number of decimals. If `0` is returned, the asset is non-divisible.\"}},\"decreaseAllowance(address,address,uint256,bytes)\":{\"custom:events\":\"- {OperatorAuthorizationChanged} event indicating the updated allowance after decreasing it.  - {OperatorRevoked} event if `subtractedAmount` is the full allowance,    indicating `operator` does not have any alauthorizedAmountForlowance left for `msg.sender`.\",\"custom:info\":\"This function in the LSP7 contract can be used as a prevention mechanism against the double spending allowance vulnerability.\",\"custom:requirements\":\"- `operator` cannot be the zero address.  - `operator` must have allowance for the caller of at least `subtractedAmount`.\",\"details\":\"Atomically decreases the allowance granted to `operator` by the caller. This is an alternative approach to {authorizeOperator} that can be used as a mitigation for the double spending allowance problem. Notify the operator based on the LSP1-UniversalReceiver standard\",\"params\":{\"operator\":\"The operator to decrease allowance for `msg.sender`\",\"subtractedAmount\":\"The amount to decrease by in the operator's allowance.\",\"tokenOwner\":\"The address of the token owner.\"}},\"getData(bytes32)\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.\",\"params\":{\"dataKey\":\"The data key for which to retrieve the value.\"},\"returns\":{\"dataValue\":\"The bytes value stored under the specified data key.\"}},\"getDataBatch(bytes32[])\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.\",\"params\":{\"dataKeys\":\"The array of keys which values to retrieve\"},\"returns\":{\"dataValues\":\"The array of data stored at multiple keys\"}},\"getOperatorsOf(address)\":{\"details\":\"Returns all `operator` addresses that are allowed to transfer or burn on behalf of `tokenOwner`.\",\"params\":{\"tokenOwner\":\"The token owner to get the operators for.\"},\"returns\":{\"_0\":\"An array of operators allowed to transfer or burn tokens on behalf of `tokenOwner`.\"}},\"increaseAllowance(address,uint256,bytes)\":{\"custom:events\":\"{OperatorAuthorizationChanged} indicating the updated allowance\",\"custom:info\":\"This function in the LSP7 contract can be used as a prevention mechanism against double spending allowance vulnerability.\",\"custom:requirements\":\"- `operator` cannot be the same address as `msg.sender`  - `operator` cannot be the zero address.\",\"details\":\"Atomically increases the allowance granted to `operator` by the caller. This is an alternative approach to {authorizeOperator} that can be used as a mitigation for the double spending allowance problem. Notify the operator based on the LSP1-UniversalReceiver standard\",\"params\":{\"addedAmount\":\"The additional amount to add on top of the current operator's allowance\",\"operator\":\"The operator to increase the allowance for `msg.sender`\"}},\"revokeOperator(address,address,bool,bytes)\":{\"custom:events\":\"{OperatorRevoked} event with address of the operator being revoked for the caller (token holder).\",\"custom:requirements\":\"- caller MUST be `operator` or `tokenOwner` - `operator` cannot be the zero address.\",\"details\":\"Enables `tokenOwner` to remove `operator` for its tokens, disallowing it to send any amount of tokens on its behalf. This function also allows the `operator` to remove itself if it is the caller of this function\",\"params\":{\"notify\":\"Boolean indicating whether to notify the operator or not.\",\"operator\":\"The address to revoke as an operator.\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenOwner\":\"The address of the token owner.\"}},\"setData(bytes32,bytes)\":{\"details\":\"Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`. The function is marked as payable to enable flexibility on child contracts. For instance to implement a fee mechanism for setting specific data.\",\"params\":{\"dataKey\":\"The data key for which to set a new value.\",\"dataValue\":\"The new bytes value to set.\"}},\"setDataBatch(bytes32[],bytes[])\":{\"details\":\"Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.\",\"params\":{\"dataKeys\":\"An array of data keys to set bytes values for.\",\"dataValues\":\"An array of bytes values to set for each `dataKeys`.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the number of existing tokens that have been minted in this contract.\",\"returns\":{\"_0\":\"The number of existing tokens.\"}},\"transfer(address,address,uint256,bool,bytes)\":{\"custom:events\":\"- {Transfer} event when tokens get successfully transferred. - if the transfer is triggered by an operator, either the {OperatorAuthorizationChanged} event will be emitted with the updated allowance or the {OperatorRevoked} event will be emitted if the operator has no more allowance left.\",\"custom:hint\":\"The `force` parameter **MUST be set to `true`** to transfer tokens to Externally Owned Accounts (EOAs) or contracts that do not implement the LSP1 Universal Receiver Standard. Otherwise the function will revert making the transfer fail.\",\"custom:info\":\"if the `to` address is a contract that implements LSP1, it will always be notified via its `universalReceiver(...)` function, regardless if `force` is set to `true` or `false`.\",\"custom:requirements\":\"- `from` cannot be the zero address. - `to` cannot be the zero address. - `from` and `to` cannot be the same address (`from` cannot send tokens to itself). - `from` MUST have a balance of at least `amount` tokens. - If the caller is not `from`, it must be an operator for `from` with an allowance of at least `amount` of tokens.\",\"custom:warning\":\"Be aware that when either the sender or the recipient can have logic that revert in their `universalReceiver(...)` function when being notified. This even if the `force` was set to `true`.\",\"details\":\"Transfers an `amount` of tokens from the `from` address to the `to` address and notify both sender and recipients via the LSP1 {`universalReceiver(...)`} function. If the tokens are transferred by an operator on behalf of a token holder, the allowance for the operator will be decreased by `amount` once the token transfer has been completed (See {authorizedAmountFor}).\",\"params\":{\"amount\":\"The amount of tokens to transfer.\",\"data\":\"Any additional data the caller wants included in the emitted event, and sent in the hooks of the `from` and `to` addresses.\",\"force\":\"When set to `true`, the `to` address CAN be any address. When set to `false`, the `to` address MUST be a contract that supports the LSP1 UniversalReceiver standard.\",\"from\":\"The sender address.\",\"to\":\"The recipient address.\"}},\"transferBatch(address[],address[],uint256[],bool[],bytes[])\":{\"custom:events\":\"{Transfer} event **for each token transfer**.\",\"custom:info\":\"If any transfer in the batch fail or revert, the whole call will revert.\",\"custom:requirements\":\"- `from`, `to`, `amount` lists MUST be of the same length. - no values in `from` can be the zero address. - no values in `to` can be the zero address. - each `amount` tokens MUST be owned by `from`. - for each transfer, if the caller is not `from`, it MUST be an operator for `from` with access to at least `amount` tokens.\",\"details\":\"Same as {`transfer(...)`} but transfer multiple tokens based on the arrays of `from`, `to`, `amount`.\",\"params\":{\"amount\":\"An array of amount of tokens to transfer for each `from -> to` transfer.\",\"data\":\"An array of additional data the caller wants included in the emitted event, and sent in the hooks to `from` and `to` addresses.\",\"force\":\"For each transfer, when set to `true`, the `to` address CAN be any address. When set to `false`, the `to` address MUST be a contract that supports the LSP1 UniversalReceiver standard.\",\"from\":\"An array of sending addresses.\",\"to\":\"An array of receiving addresses.\"}}},\"title\":\"Interface of the LSP7 - Digital Asset standard, a fungible digital asset.\",\"version\":1},\"userdoc\":{\"events\":{\"DataChanged(bytes32,bytes)\":{\"notice\":\"The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`.\"}},\"kind\":\"user\",\"methods\":{\"batchCalls(bytes[])\":{\"notice\":\"Executing the following batch of abi-encoded function calls on the contract: `data`.\"},\"decreaseAllowance(address,address,uint256,bytes)\":{\"notice\":\"Decrease the allowance of `operator` by -`subtractedAmount`\"},\"getData(bytes32)\":{\"notice\":\"Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`.\"},\"getDataBatch(bytes32[])\":{\"notice\":\"Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`.\"},\"increaseAllowance(address,uint256,bytes)\":{\"notice\":\"Increase the allowance of `operator` by +`addedAmount`\"},\"setData(bytes32,bytes)\":{\"notice\":\"Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`.\"},\"setDataBatch(bytes32[],bytes[])\":{\"notice\":\"Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@lukso/lsp7-contracts/contracts/ILSP7DigitalAsset.sol\":\"ILSP7DigitalAsset\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0xa47c9e3eba0c733a1685b9fa309f753540c89ad2dca73236a2c953e7f5680e7b\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://59076395f660838919a2068cb7792c0fa70533642bbc5b4e3cc3cbb2c9ec7b50\",\"dweb:/ipfs/QmQqew3mDuyHCBdd4v1JiwRiKEbzk3LeHchzTHSdyhYg5b\"]},\"@lukso/lsp7-contracts/contracts/ILSP7DigitalAsset.sol\":{\"keccak256\":\"0xe809a376f430ba79bf7554b3274617103f1d0434546b2d4fe68019e3079a53d0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f955f4d89c5a99f791af4a3fc7201ba0299627fca221d97a66a562eeb4860c04\",\"dweb:/ipfs/QmcAqBHYFwk6VXevUeSjefFag6EhndrXQP1D4tGjxtgUMT\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"DataChanged(bytes32,bytes)": {
								"notice": "The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`."
							}
						},
						"kind": "user",
						"methods": {
							"batchCalls(bytes[])": {
								"notice": "Executing the following batch of abi-encoded function calls on the contract: `data`."
							},
							"decreaseAllowance(address,address,uint256,bytes)": {
								"notice": "Decrease the allowance of `operator` by -`subtractedAmount`"
							},
							"getData(bytes32)": {
								"notice": "Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`."
							},
							"getDataBatch(bytes32[])": {
								"notice": "Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`."
							},
							"increaseAllowance(address,uint256,bytes)": {
								"notice": "Increase the allowance of `operator` by +`addedAmount`"
							},
							"setData(bytes32,bytes)": {
								"notice": "Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`."
							},
							"setDataBatch(bytes32[],bytes[])": {
								"notice": "Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`."
							}
						},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"Counters": {
					"abi": [],
					"devdoc": {
						"author": "Matt Condon (@shrugs)",
						"details": "Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`",
						"kind": "dev",
						"methods": {},
						"title": "Counters",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Counters.sol\":437:1437  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":437:1437  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220febab9b587bc702fd900861f92845155b202229503360b49ca5f307e8feafd6264736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220febab9b587bc702fd900861f92845155b202229503360b49ca5f307e8feafd6264736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID 0xBA 0xB9 0xB5 DUP8 0xBC PUSH17 0x2FD900861F92845155B202229503360B49 0xCA PUSH0 ADDRESS PUSH31 0x8FEAFD6264736F6C634300081C003300000000000000000000000000000000 ",
							"sourceMap": "437:1000:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220febab9b587bc702fd900861f92845155b202229503360b49ca5f307e8feafd6264736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID 0xBA 0xB9 0xB5 DUP8 0xBC PUSH17 0x2FD900861F92845155B202229503360B49 0xCA PUSH0 ADDRESS PUSH31 0x8FEAFD6264736F6C634300081C003300000000000000000000000000000000 ",
							"sourceMap": "437:1000:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite",
								"reset(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 437,
									"end": 1437,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 437,
									"end": 1437,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 437,
									"end": 1437,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 437,
									"end": 1437,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 437,
									"end": 1437,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 437,
									"end": 1437,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 437,
									"end": 1437,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 437,
									"end": 1437,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 437,
									"end": 1437,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 437,
									"end": 1437,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 437,
									"end": 1437,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 437,
									"end": 1437,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 437,
									"end": 1437,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 437,
									"end": 1437,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 437,
									"end": 1437,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 437,
									"end": 1437,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 437,
									"end": 1437,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 437,
									"end": 1437,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 437,
									"end": 1437,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 437,
									"end": 1437,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 437,
									"end": 1437,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 437,
									"end": 1437,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 437,
									"end": 1437,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 437,
									"end": 1437,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 437,
									"end": 1437,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 437,
									"end": 1437,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 437,
									"end": 1437,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 437,
									"end": 1437,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 437,
									"end": 1437,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 437,
									"end": 1437,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 437,
									"end": 1437,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 437,
									"end": 1437,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 437,
									"end": 1437,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 437,
									"end": 1437,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 437,
									"end": 1437,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220febab9b587bc702fd900861f92845155b202229503360b49ca5f307e8feafd6264736f6c634300081c0033",
									".code": [
										{
											"begin": 437,
											"end": 1437,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 437,
											"end": 1437,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 437,
											"end": 1437,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 437,
											"end": 1437,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 437,
											"end": 1437,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 437,
											"end": 1437,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 437,
											"end": 1437,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 437,
											"end": 1437,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 437,
											"end": 1437,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol",
								"@lukso/lsp-smart-contracts/contracts/LSP7DigitalAsset/ILSP7DigitalAsset.sol",
								"@lukso/lsp7-contracts/contracts/ILSP7DigitalAsset.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"AIAirdrop.sol",
								"_error.sol",
								"_event.sol",
								"_ownable.sol",
								"_pausable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0x45f2d503ebecf25ea4b038d02a7ed96898bd197bec585d0ba3560bfb4b509a82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c87b73d7c9c7773c8d2b06e3f38d88a3980c04016bb44967ecacfa5ac45bc62b\",\"dweb:/ipfs/QmbQVT9fpAxMQ492735rZzUK2e73ayqdZz2fGPgey8jCVR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Panic.sol": {
				"Panic": {
					"abi": [],
					"devdoc": {
						"details": "Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"ARRAY_OUT_OF_BOUNDS": {
								"details": "array out of bounds access"
							},
							"ASSERT": {
								"details": "used by the assert() builtin"
							},
							"DIVISION_BY_ZERO": {
								"details": "division or modulo by zero"
							},
							"EMPTY_ARRAY_POP": {
								"details": "empty array pop"
							},
							"ENUM_CONVERSION_ERROR": {
								"details": "enum conversion error"
							},
							"GENERIC": {
								"details": "generic / unspecified error"
							},
							"INVALID_INTERNAL_FUNCTION": {
								"details": "calling invalid internal function"
							},
							"RESOURCE_ERROR": {
								"details": "resource error (too large allocation or too large array)"
							},
							"STORAGE_ENCODING_ERROR": {
								"details": "invalid encoding in storage"
							},
							"UNDER_OVERFLOW": {
								"details": "arithmetic underflow or overflow"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Panic.sol\":657:1972  library Panic {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Panic.sol\":657:1972  library Panic {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220eb8deaba934a873bf92f061f946d2d811c9567eef219271e25586b82cf4f090e64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220eb8deaba934a873bf92f061f946d2d811c9567eef219271e25586b82cf4f090e64736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEB DUP14 0xEA 0xBA SWAP4 BLOBBASEFEE DUP8 EXTCODESIZE 0xF9 0x2F MOD 0x1F SWAP5 PUSH14 0x2D811C9567EEF219271E25586B82 0xCF 0x4F MULMOD 0xE PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "657:1315:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220eb8deaba934a873bf92f061f946d2d811c9567eef219271e25586b82cf4f090e64736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEB DUP14 0xEA 0xBA SWAP4 BLOBBASEFEE DUP8 EXTCODESIZE 0xF9 0x2F MOD 0x1F SWAP5 PUSH14 0x2D811C9567EEF219271E25586B82 0xCF 0x4F MULMOD 0xE PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "657:1315:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"panic(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220eb8deaba934a873bf92f061f946d2d811c9567eef219271e25586b82cf4f090e64736f6c634300081c0033",
									".code": [
										{
											"begin": 657,
											"end": 1972,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol",
								"@lukso/lsp-smart-contracts/contracts/LSP7DigitalAsset/ILSP7DigitalAsset.sol",
								"@lukso/lsp7-contracts/contracts/ILSP7DigitalAsset.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"AIAirdrop.sol",
								"_error.sol",
								"_event.sol",
								"_ownable.sol",
								"_pausable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "StringsInvalidAddressFormat",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "StringsInvalidChar",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							],
							"StringsInvalidAddressFormat()": [
								{
									"details": "The string being parsed is not a properly formatted address."
								}
							],
							"StringsInvalidChar()": [
								{
									"details": "The string being parsed contains characters that are not in scope of the given base."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":297:16838  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":297:16838  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa264697066735822122042f0984ee5646ce24f6a8f6fa66e6f032be6c5c3cd04feef349fd3e720e2d1e764736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122042f0984ee5646ce24f6a8f6fa66e6f032be6c5c3cd04feef349fd3e720e2d1e764736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP CREATE SWAP9 0x4E 0xE5 PUSH5 0x6CE24F6A8F PUSH16 0xA66E6F032BE6C5C3CD04FEEF349FD3E7 KECCAK256 0xE2 0xD1 0xE7 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "297:16541:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122042f0984ee5646ce24f6a8f6fa66e6f032be6c5c3cd04feef349fd3e720e2d1e764736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP CREATE SWAP9 0x4E 0xE5 PUSH5 0x6CE24F6A8F PUSH16 0xA66E6F032BE6C5C3CD04FEEF349FD3E7 KECCAK256 0xE2 0xD1 0xE7 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "297:16541:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_tryParseChr(bytes1)": "infinite",
								"_tryParseHexUintUncheckedBounds(string memory,uint256,uint256)": "infinite",
								"_tryParseIntUncheckedBounds(string memory,uint256,uint256)": "infinite",
								"_tryParseUintUncheckedBounds(string memory,uint256,uint256)": "infinite",
								"_unsafeReadBytesOffset(bytes memory,uint256)": "infinite",
								"equal(string memory,string memory)": "infinite",
								"parseAddress(string memory)": "infinite",
								"parseAddress(string memory,uint256,uint256)": "infinite",
								"parseHexUint(string memory)": "infinite",
								"parseHexUint(string memory,uint256,uint256)": "infinite",
								"parseInt(string memory)": "infinite",
								"parseInt(string memory,uint256,uint256)": "infinite",
								"parseUint(string memory)": "infinite",
								"parseUint(string memory,uint256,uint256)": "infinite",
								"toChecksumHexString(address)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite",
								"tryParseAddress(string memory)": "infinite",
								"tryParseAddress(string memory,uint256,uint256)": "infinite",
								"tryParseHexUint(string memory)": "infinite",
								"tryParseHexUint(string memory,uint256,uint256)": "infinite",
								"tryParseInt(string memory)": "infinite",
								"tryParseInt(string memory,uint256,uint256)": "infinite",
								"tryParseUint(string memory)": "infinite",
								"tryParseUint(string memory,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 297,
									"end": 16838,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 297,
									"end": 16838,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 297,
									"end": 16838,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 297,
									"end": 16838,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 297,
									"end": 16838,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 297,
									"end": 16838,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 297,
									"end": 16838,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 297,
									"end": 16838,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 297,
									"end": 16838,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 297,
									"end": 16838,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 297,
									"end": 16838,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 297,
									"end": 16838,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 297,
									"end": 16838,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 297,
									"end": 16838,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 297,
									"end": 16838,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 297,
									"end": 16838,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 297,
									"end": 16838,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 297,
									"end": 16838,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 297,
									"end": 16838,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 297,
									"end": 16838,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 297,
									"end": 16838,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 297,
									"end": 16838,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 297,
									"end": 16838,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 297,
									"end": 16838,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 297,
									"end": 16838,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 297,
									"end": 16838,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 297,
									"end": 16838,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 297,
									"end": 16838,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 297,
									"end": 16838,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 297,
									"end": 16838,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 297,
									"end": 16838,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 297,
									"end": 16838,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 297,
									"end": 16838,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 297,
									"end": 16838,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 297,
									"end": 16838,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122042f0984ee5646ce24f6a8f6fa66e6f032be6c5c3cd04feef349fd3e720e2d1e764736f6c634300081c0033",
									".code": [
										{
											"begin": 297,
											"end": 16838,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 297,
											"end": 16838,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 297,
											"end": 16838,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 297,
											"end": 16838,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 297,
											"end": 16838,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 297,
											"end": 16838,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 297,
											"end": 16838,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 297,
											"end": 16838,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 297,
											"end": 16838,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol",
								"@lukso/lsp-smart-contracts/contracts/LSP7DigitalAsset/ILSP7DigitalAsset.sol",
								"@lukso/lsp7-contracts/contracts/ILSP7DigitalAsset.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"AIAirdrop.sol",
								"_error.sol",
								"_event.sol",
								"_ownable.sol",
								"_pausable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":281:28307  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":281:28307  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220525f0dec2adf37452fe3428b740755b34c0f567b83377ecd5ab1e1c5b9c1692264736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220525f0dec2adf37452fe3428b740755b34c0f567b83377ecd5ab1e1c5b9c1692264736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE PUSH0 0xD 0xEC 0x2A 0xDF CALLDATACOPY GASLIMIT 0x2F 0xE3 TIMESTAMP DUP12 PUSH21 0x755B34C0F567B83377ECD5AB1E1C5B9C169226473 PUSH16 0x6C634300081C00330000000000000000 ",
							"sourceMap": "281:28026:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220525f0dec2adf37452fe3428b740755b34c0f567b83377ecd5ab1e1c5b9c1692264736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE PUSH0 0xD 0xEC 0x2A 0xDF CALLDATACOPY GASLIMIT 0x2F 0xE3 TIMESTAMP DUP12 PUSH21 0x755B34C0F567B83377ECD5AB1E1C5B9C169226473 PUSH16 0x6C634300081C00330000000000000000 ",
							"sourceMap": "281:28026:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_zeroBytes(bytes memory)": "infinite",
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"invMod(uint256,uint256)": "infinite",
								"invModPrime(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"modExp(bytes memory,bytes memory,bytes memory)": "infinite",
								"modExp(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"ternary(bool,uint256,uint256)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryModExp(bytes memory,bytes memory,bytes memory)": "infinite",
								"tryModExp(uint256,uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220525f0dec2adf37452fe3428b740755b34c0f567b83377ecd5ab1e1c5b9c1692264736f6c634300081c0033",
									".code": [
										{
											"begin": 281,
											"end": 28307,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol",
								"@lukso/lsp-smart-contracts/contracts/LSP7DigitalAsset/ILSP7DigitalAsset.sol",
								"@lukso/lsp7-contracts/contracts/ILSP7DigitalAsset.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"AIAirdrop.sol",
								"_error.sol",
								"_event.sol",
								"_ownable.sol",
								"_pausable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeCast.sol": {
				"SafeCast": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "bits",
									"type": "uint8"
								},
								{
									"internalType": "int256",
									"name": "value",
									"type": "int256"
								}
							],
							"name": "SafeCastOverflowedIntDowncast",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "value",
									"type": "int256"
								}
							],
							"name": "SafeCastOverflowedIntToUint",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "bits",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "SafeCastOverflowedUintDowncast",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "SafeCastOverflowedUintToInt",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"errors": {
							"SafeCastOverflowedIntDowncast(uint8,int256)": [
								{
									"details": "Value doesn't fit in an int of `bits` size."
								}
							],
							"SafeCastOverflowedIntToUint(int256)": [
								{
									"details": "An int value doesn't fit in an uint of `bits` size."
								}
							],
							"SafeCastOverflowedUintDowncast(uint8,uint256)": [
								{
									"details": "Value doesn't fit in an uint of `bits` size."
								}
							],
							"SafeCastOverflowedUintToInt(uint256)": [
								{
									"details": "An uint value doesn't fit in an int of `bits` size."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":769:34942  library SafeCast {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":769:34942  library SafeCast {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212202cc7b669eb9957609caa47a87338e8ec635afc197cba6d8af481f1b6d4daf79c64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212202cc7b669eb9957609caa47a87338e8ec635afc197cba6d8af481f1b6d4daf79c64736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0xC7 0xB6 PUSH10 0xEB9957609CAA47A87338 0xE8 0xEC PUSH4 0x5AFC197C 0xBA PUSH14 0x8AF481F1B6D4DAF79C64736F6C63 NUMBER STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "769:34173:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212202cc7b669eb9957609caa47a87338e8ec635afc197cba6d8af481f1b6d4daf79c64736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0xC7 0xB6 PUSH10 0xEB9957609CAA47A87338 0xE8 0xEC PUSH4 0x5AFC197C 0xBA PUSH14 0x8AF481F1B6D4DAF79C64736F6C63 NUMBER STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "769:34173:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"toInt104(int256)": "infinite",
								"toInt112(int256)": "infinite",
								"toInt120(int256)": "infinite",
								"toInt128(int256)": "infinite",
								"toInt136(int256)": "infinite",
								"toInt144(int256)": "infinite",
								"toInt152(int256)": "infinite",
								"toInt16(int256)": "infinite",
								"toInt160(int256)": "infinite",
								"toInt168(int256)": "infinite",
								"toInt176(int256)": "infinite",
								"toInt184(int256)": "infinite",
								"toInt192(int256)": "infinite",
								"toInt200(int256)": "infinite",
								"toInt208(int256)": "infinite",
								"toInt216(int256)": "infinite",
								"toInt224(int256)": "infinite",
								"toInt232(int256)": "infinite",
								"toInt24(int256)": "infinite",
								"toInt240(int256)": "infinite",
								"toInt248(int256)": "infinite",
								"toInt256(uint256)": "infinite",
								"toInt32(int256)": "infinite",
								"toInt40(int256)": "infinite",
								"toInt48(int256)": "infinite",
								"toInt56(int256)": "infinite",
								"toInt64(int256)": "infinite",
								"toInt72(int256)": "infinite",
								"toInt8(int256)": "infinite",
								"toInt80(int256)": "infinite",
								"toInt88(int256)": "infinite",
								"toInt96(int256)": "infinite",
								"toUint(bool)": "infinite",
								"toUint104(uint256)": "infinite",
								"toUint112(uint256)": "infinite",
								"toUint120(uint256)": "infinite",
								"toUint128(uint256)": "infinite",
								"toUint136(uint256)": "infinite",
								"toUint144(uint256)": "infinite",
								"toUint152(uint256)": "infinite",
								"toUint16(uint256)": "infinite",
								"toUint160(uint256)": "infinite",
								"toUint168(uint256)": "infinite",
								"toUint176(uint256)": "infinite",
								"toUint184(uint256)": "infinite",
								"toUint192(uint256)": "infinite",
								"toUint200(uint256)": "infinite",
								"toUint208(uint256)": "infinite",
								"toUint216(uint256)": "infinite",
								"toUint224(uint256)": "infinite",
								"toUint232(uint256)": "infinite",
								"toUint24(uint256)": "infinite",
								"toUint240(uint256)": "infinite",
								"toUint248(uint256)": "infinite",
								"toUint256(int256)": "infinite",
								"toUint32(uint256)": "infinite",
								"toUint40(uint256)": "infinite",
								"toUint48(uint256)": "infinite",
								"toUint56(uint256)": "infinite",
								"toUint64(uint256)": "infinite",
								"toUint72(uint256)": "infinite",
								"toUint8(uint256)": "infinite",
								"toUint80(uint256)": "infinite",
								"toUint88(uint256)": "infinite",
								"toUint96(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202cc7b669eb9957609caa47a87338e8ec635afc197cba6d8af481f1b6d4daf79c64736f6c634300081c0033",
									".code": [
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol",
								"@lukso/lsp-smart-contracts/contracts/LSP7DigitalAsset/ILSP7DigitalAsset.sol",
								"@lukso/lsp7-contracts/contracts/ILSP7DigitalAsset.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"AIAirdrop.sol",
								"_error.sol",
								"_event.sol",
								"_ownable.sol",
								"_pausable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":258:2612  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":258:2612  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220b4fd557ab4fe6b2037d830fa8666d39660f694d31c42db2662924136316e751964736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220b4fd557ab4fe6b2037d830fa8666d39660f694d31c42db2662924136316e751964736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 REVERT SSTORE PUSH27 0xB4FE6B2037D830FA8666D39660F694D31C42DB2662924136316E75 NOT PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "258:2354:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220b4fd557ab4fe6b2037d830fa8666d39660f694d31c42db2662924136316e751964736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 REVERT SSTORE PUSH27 0xB4FE6B2037D830FA8666D39660F694D31C42DB2662924136316E75 NOT PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "258:2354:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite",
								"ternary(bool,int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b4fd557ab4fe6b2037d830fa8666d39660f694d31c42db2662924136316e751964736f6c634300081c0033",
									".code": [
										{
											"begin": 258,
											"end": 2612,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 258,
											"end": 2612,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 258,
											"end": 2612,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 258,
											"end": 2612,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 258,
											"end": 2612,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 258,
											"end": 2612,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 258,
											"end": 2612,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 258,
											"end": 2612,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 258,
											"end": 2612,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol",
								"@lukso/lsp-smart-contracts/contracts/LSP7DigitalAsset/ILSP7DigitalAsset.sol",
								"@lukso/lsp7-contracts/contracts/ILSP7DigitalAsset.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"AIAirdrop.sol",
								"_error.sol",
								"_event.sol",
								"_ownable.sol",
								"_pausable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"AIAirdrop.sol": {
				"AIAirdrop": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenToClaim",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "lastTimeClaimed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "userBalance",
									"type": "uint256"
								}
							],
							"name": "ClaimedAlready",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "addr",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "claimedTime",
									"type": "uint256"
								}
							],
							"name": "Claimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "amountToClaimUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "tokenToClaimUpdated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "_claimCounter",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "amountToClaim",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_wallet",
									"type": "address"
								}
							],
							"name": "claim",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "claimed",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "time",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenToClaim",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "transferBalance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "updateAmountToClaim",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"name": "updateTokenToClaim",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_LSP7Token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_force",
									"type": "bool"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "withdrawLSP7",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Aratta Labs",
						"custom:emoji": "🤖",
						"custom:security-contact": "atenyun@gmail.com",
						"details": "You will find the deployed contract addresses in the repo",
						"errors": {
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"title": "Airdrop",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"AIAirdrop.sol\":616:3455  contract AIAirdrop is Ownable(msg.sender), Pausable {... */\n  mstore(0x40, 0x80)\n    /* \"AIAirdrop.sol\":822:833  5_000 ether */\n  0x010f0cf064dd59200000\n    /* \"AIAirdrop.sol\":791:833  uint256 public amountToClaim = 5_000 ether */\n  0x03\n  sstore\n    /* \"AIAirdrop.sol\":889:1018  constructor(address _tokenToClaim) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"AIAirdrop.sol\":646:656  msg.sender */\n  caller\n    /* \"_ownable.sol\":1318:1319  0 */\n  0x00\n    /* \"_ownable.sol\":1294:1320  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"_ownable.sol\":1294:1306  initialOwner */\n  dup2\n    /* \"_ownable.sol\":1294:1320  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"_ownable.sol\":1290:1385  if (initialOwner == address(0)) {... */\n  tag_8\n  jumpi\n    /* \"_ownable.sol\":1371:1372  0 */\n  0x00\n    /* \"_ownable.sol\":1343:1374  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"_ownable.sol\":1290:1385  if (initialOwner == address(0)) {... */\ntag_8:\n    /* \"_ownable.sol\":1394:1426  _transferOwnership(initialOwner) */\n  tag_11\n    /* \"_ownable.sol\":1413:1425  initialOwner */\n  dup2\n    /* \"_ownable.sol\":1394:1412  _transferOwnership */\n  shl(0x20, tag_12)\n    /* \"_ownable.sol\":1394:1426  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"_ownable.sol\":1246:1433  constructor(address initialOwner) {... */\n  pop\n    /* \"_pausable.sol\":1262:1267  false */\n  0x00\n    /* \"_pausable.sol\":1252:1259  _paused */\n  0x00\n  0x14\n    /* \"_pausable.sol\":1252:1267  _paused = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"AIAirdrop.sol\":949:962  _tokenToClaim */\n  dup1\n    /* \"AIAirdrop.sol\":934:946  tokenToClaim */\n  0x02\n  0x00\n    /* \"AIAirdrop.sol\":934:962  tokenToClaim = _tokenToClaim */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"AIAirdrop.sol\":977:1011  tokenToClaimUpdated(_tokenToClaim) */\n  0xf9563f2ff8321c25ec4ee92f781a8d3ebc72f854daa4bf9177f3886b6ca1f7e1\n    /* \"AIAirdrop.sol\":997:1010  _tokenToClaim */\n  dup2\n    /* \"AIAirdrop.sol\":977:1011  tokenToClaimUpdated(_tokenToClaim) */\n  mload(0x40)\n  tag_15\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_15:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"AIAirdrop.sol\":889:1018  constructor(address _tokenToClaim) {... */\n  pop\n    /* \"AIAirdrop.sol\":616:3455  contract AIAirdrop is Ownable(msg.sender), Pausable {... */\n  jump(tag_16)\n    /* \"_ownable.sol\":2933:3120  function _transferOwnership(address newOwner) internal virtual {... */\ntag_12:\n    /* \"_ownable.sol\":3006:3022  address oldOwner */\n  0x00\n    /* \"_ownable.sol\":3025:3031  _owner */\n  0x00\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"_ownable.sol\":3006:3031  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"_ownable.sol\":3050:3058  newOwner */\n  dup2\n    /* \"_ownable.sol\":3041:3047  _owner */\n  0x00\n  0x00\n    /* \"_ownable.sol\":3041:3058  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"_ownable.sol\":3104:3112  newOwner */\n  dup2\n    /* \"_ownable.sol\":3073:3113  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"_ownable.sol\":3094:3102  oldOwner */\n  dup2\n    /* \"_ownable.sol\":3073:3113  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"_ownable.sol\":2996:3120  {... */\n  pop\n    /* \"_ownable.sol\":2933:3120  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_19:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_21:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_22:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_32\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_21\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_23:\n    /* \"#utility.yul\":641:665   */\n  tag_34\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_22\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_35:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_24:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_37\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_23\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_40\n  tag_19\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":932:1051   */\ntag_39:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_41\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_24\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1320   */\ntag_25:\n    /* \"#utility.yul\":1289:1313   */\n  tag_43\n    /* \"#utility.yul\":1307:1312   */\n  dup2\n    /* \"#utility.yul\":1289:1313   */\n  tag_22\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1284:1287   */\n  dup3\n    /* \"#utility.yul\":1277:1314   */\n  mstore\n    /* \"#utility.yul\":1202:1320   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1326:1548   */\ntag_10:\n    /* \"#utility.yul\":1419:1423   */\n  0x00\n    /* \"#utility.yul\":1457:1459   */\n  0x20\n    /* \"#utility.yul\":1446:1455   */\n  dup3\n    /* \"#utility.yul\":1442:1460   */\n  add\n    /* \"#utility.yul\":1434:1460   */\n  swap1\n  pop\n    /* \"#utility.yul\":1470:1541   */\n  tag_45\n    /* \"#utility.yul\":1538:1539   */\n  0x00\n    /* \"#utility.yul\":1527:1536   */\n  dup4\n    /* \"#utility.yul\":1523:1540   */\n  add\n    /* \"#utility.yul\":1514:1520   */\n  dup5\n    /* \"#utility.yul\":1470:1541   */\n  tag_25\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1326:1548   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"AIAirdrop.sol\":616:3455  contract AIAirdrop is Ownable(msg.sender), Pausable {... */\ntag_16:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"AIAirdrop.sol\":616:3455  contract AIAirdrop is Ownable(msg.sender), Pausable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x5c975abb\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xaf66ef65\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xaf66ef65\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xb8de4343\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xc884ef83\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xfb2228fe\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x5c975abb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x3ccfd60b\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x3ccfd60b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x4875590a\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x53a4cff4\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x56a6d9ef\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x12065fe0\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x16ada547\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1e83409a\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x205306b4\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"AIAirdrop.sol\":3085:3182  function getBalance() public view returns (uint256) {... */\n    tag_3:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"AIAirdrop.sol\":3368:3453  function time() public view returns (uint256) {... */\n    tag_4:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"AIAirdrop.sol\":1070:1651  function claim(address _wallet) public onlyOwner whenNotPaused returns (bool) {... */\n    tag_5:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"AIAirdrop.sol\":791:833  uint256 public amountToClaim = 5_000 ether */\n    tag_6:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"AIAirdrop.sol\":2516:2704  function withdraw() public onlyOwner {... */\n    tag_7:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      stop\n        /* \"AIAirdrop.sol\":3299:3362  function unpause() public onlyOwner {... */\n    tag_8:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      stop\n        /* \"AIAirdrop.sol\":758:785  address public tokenToClaim */\n    tag_9:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"AIAirdrop.sol\":1698:1909  function updateAmountToClaim(uint256 _amount)... */\n    tag_10:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"AIAirdrop.sol\":2778:3027  function transferBalance(address payable _to, uint256 _amount)... */\n    tag_11:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n    tag_53:\n      stop\n        /* \"_pausable.sol\":1871:1955  function paused() public view virtual returns (bool) {... */\n    tag_12:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"_ownable.sol\":2314:2415  function renounceOwnership() public virtual onlyOwner {... */\n    tag_13:\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      stop\n        /* \"AIAirdrop.sol\":3210:3269  function pause() public onlyOwner {... */\n    tag_14:\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      stop\n        /* \"_ownable.sol\":1659:1744  function owner() public view virtual returns (address) {... */\n    tag_15:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"AIAirdrop.sol\":1915:2120  function updateTokenToClaim(address _token)... */\n    tag_16:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"AIAirdrop.sol\":2161:2416  function withdrawLSP7(... */\n    tag_17:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      tag_74\n      jump\t// in\n    tag_71:\n      stop\n        /* \"AIAirdrop.sol\":840:882  mapping(address => uint256) public claimed */\n    tag_18:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"_ownable.sol\":2564:2779  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_19:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n    tag_79:\n      stop\n        /* \"AIAirdrop.sol\":715:752  Counters.Counter public _claimCounter */\n    tag_20:\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"AIAirdrop.sol\":3085:3182  function getBalance() public view returns (uint256) {... */\n    tag_25:\n        /* \"AIAirdrop.sol\":3128:3135  uint256 */\n      0x00\n        /* \"AIAirdrop.sol\":3154:3175  address(this).balance */\n      selfbalance\n        /* \"AIAirdrop.sol\":3147:3175  return address(this).balance */\n      swap1\n      pop\n        /* \"AIAirdrop.sol\":3085:3182  function getBalance() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"AIAirdrop.sol\":3368:3453  function time() public view returns (uint256) {... */\n    tag_29:\n        /* \"AIAirdrop.sol\":3405:3412  uint256 */\n      0x00\n        /* \"AIAirdrop.sol\":3431:3446  block.timestamp */\n      timestamp\n        /* \"AIAirdrop.sol\":3424:3446  return block.timestamp */\n      swap1\n      pop\n        /* \"AIAirdrop.sol\":3368:3453  function time() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"AIAirdrop.sol\":1070:1651  function claim(address _wallet) public onlyOwner whenNotPaused returns (bool) {... */\n    tag_34:\n        /* \"AIAirdrop.sol\":1142:1146  bool */\n      0x00\n        /* \"_ownable.sol\":1552:1565  _checkOwner() */\n      tag_88\n        /* \"_ownable.sol\":1552:1563  _checkOwner */\n      tag_89\n        /* \"_ownable.sol\":1552:1565  _checkOwner() */\n      jump\t// in\n    tag_88:\n        /* \"_pausable.sol\":1495:1514  _requireNotPaused() */\n      tag_91\n        /* \"_pausable.sol\":1495:1512  _requireNotPaused */\n      tag_92\n        /* \"_pausable.sol\":1495:1514  _requireNotPaused() */\n      jump\t// in\n    tag_91:\n        /* \"AIAirdrop.sol\":1181:1182  0 */\n      0x00\n        /* \"AIAirdrop.sol\":1162:1169  claimed */\n      0x04\n        /* \"AIAirdrop.sol\":1162:1178  claimed[_wallet] */\n      0x00\n        /* \"AIAirdrop.sol\":1170:1177  _wallet */\n      dup5\n        /* \"AIAirdrop.sol\":1162:1178  claimed[_wallet] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"AIAirdrop.sol\":1162:1182  claimed[_wallet] > 0 */\n      gt\n        /* \"AIAirdrop.sol\":1158:1321  if (claimed[_wallet] > 0)... */\n      iszero\n      tag_94\n      jumpi\n        /* \"AIAirdrop.sol\":1235:1242  claimed */\n      0x04\n        /* \"AIAirdrop.sol\":1235:1251  claimed[_wallet] */\n      0x00\n        /* \"AIAirdrop.sol\":1243:1250  _wallet */\n      dup4\n        /* \"AIAirdrop.sol\":1235:1251  claimed[_wallet] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"AIAirdrop.sol\":1275:1287  tokenToClaim */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"AIAirdrop.sol\":1269:1298  ILSP7(tokenToClaim).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"AIAirdrop.sol\":1299:1306  _wallet */\n      dup5\n        /* \"AIAirdrop.sol\":1269:1307  ILSP7(tokenToClaim).balanceOf(_wallet) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_95\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_95:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_97\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_97:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_98\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n        /* \"AIAirdrop.sol\":1203:1321  ClaimedAlready(... */\n      mload(0x40)\n      0xbbae19e600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap3\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"AIAirdrop.sol\":1158:1321  if (claimed[_wallet] > 0)... */\n    tag_94:\n        /* \"AIAirdrop.sol\":1338:1350  tokenToClaim */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"AIAirdrop.sol\":1332:1360  ILSP7(tokenToClaim).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x760d9bba\n        /* \"AIAirdrop.sol\":1382:1386  this */\n      address\n        /* \"AIAirdrop.sol\":1401:1408  _wallet */\n      dup5\n        /* \"AIAirdrop.sol\":1422:1435  amountToClaim */\n      sload(0x03)\n        /* \"AIAirdrop.sol\":1449:1453  true */\n      0x01\n        /* \"AIAirdrop.sol\":1332:1479  ILSP7(tokenToClaim).transfer(... */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_104\n      jumpi\n      revert(0x00, 0x00)\n    tag_104:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_106\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_106:\n      pop\n      pop\n      pop\n      pop\n        /* \"AIAirdrop.sol\":1489:1514  _claimCounter.increment() */\n      tag_107\n        /* \"AIAirdrop.sol\":1489:1502  _claimCounter */\n      0x01\n        /* \"AIAirdrop.sol\":1489:1512  _claimCounter.increment */\n      tag_108\n        /* \"AIAirdrop.sol\":1489:1514  _claimCounter.increment() */\n      jump\t// in\n    tag_107:\n        /* \"AIAirdrop.sol\":1543:1558  block.timestamp */\n      timestamp\n        /* \"AIAirdrop.sol\":1524:1531  claimed */\n      0x04\n        /* \"AIAirdrop.sol\":1524:1540  claimed[_wallet] */\n      0x00\n        /* \"AIAirdrop.sol\":1532:1539  _wallet */\n      dup5\n        /* \"AIAirdrop.sol\":1524:1540  claimed[_wallet] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"AIAirdrop.sol\":1524:1558  claimed[_wallet] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"AIAirdrop.sol\":1597:1604  _wallet */\n      dup2\n        /* \"AIAirdrop.sol\":1589:1622  Claimed(_wallet, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a\n        /* \"AIAirdrop.sol\":1606:1621  block.timestamp */\n      timestamp\n        /* \"AIAirdrop.sol\":1589:1622  Claimed(_wallet, block.timestamp) */\n      mload(0x40)\n      tag_109\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"AIAirdrop.sol\":1640:1644  true */\n      0x01\n        /* \"AIAirdrop.sol\":1633:1644  return true */\n      swap1\n      pop\n        /* \"AIAirdrop.sol\":1070:1651  function claim(address _wallet) public onlyOwner whenNotPaused returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"AIAirdrop.sol\":791:833  uint256 public amountToClaim = 5_000 ether */\n    tag_38:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"AIAirdrop.sol\":2516:2704  function withdraw() public onlyOwner {... */\n    tag_41:\n        /* \"_ownable.sol\":1552:1565  _checkOwner() */\n      tag_111\n        /* \"_ownable.sol\":1552:1563  _checkOwner */\n      tag_89\n        /* \"_ownable.sol\":1552:1565  _checkOwner() */\n      jump\t// in\n    tag_111:\n        /* \"AIAirdrop.sol\":2563:2577  uint256 amount */\n      0x00\n        /* \"AIAirdrop.sol\":2580:2601  address(this).balance */\n      selfbalance\n        /* \"AIAirdrop.sol\":2563:2601  uint256 amount = address(this).balance */\n      swap1\n      pop\n        /* \"AIAirdrop.sol\":2612:2624  bool success */\n      0x00\n        /* \"AIAirdrop.sol\":2630:2637  owner() */\n      tag_113\n        /* \"AIAirdrop.sol\":2630:2635  owner */\n      tag_65\n        /* \"AIAirdrop.sol\":2630:2637  owner() */\n      jump\t// in\n    tag_113:\n        /* \"AIAirdrop.sol\":2630:2642  owner().call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"AIAirdrop.sol\":2650:2656  amount */\n      dup3\n        /* \"AIAirdrop.sol\":2630:2661  owner().call{value: amount}(\"\") */\n      mload(0x40)\n      tag_114\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_118\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_117)\n    tag_118:\n      0x60\n      swap2\n      pop\n    tag_117:\n      pop\n        /* \"AIAirdrop.sol\":2611:2661  (bool success, ) = owner().call{value: amount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"AIAirdrop.sol\":2679:2686  success */\n      dup1\n        /* \"AIAirdrop.sol\":2671:2697  require(success, \"Failed\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_119:\n        /* \"AIAirdrop.sol\":2553:2704  {... */\n      pop\n      pop\n        /* \"AIAirdrop.sol\":2516:2704  function withdraw() public onlyOwner {... */\n      jump\t// out\n        /* \"AIAirdrop.sol\":3299:3362  function unpause() public onlyOwner {... */\n    tag_43:\n        /* \"_ownable.sol\":1552:1565  _checkOwner() */\n      tag_123\n        /* \"_ownable.sol\":1552:1563  _checkOwner */\n      tag_89\n        /* \"_ownable.sol\":1552:1565  _checkOwner() */\n      jump\t// in\n    tag_123:\n        /* \"AIAirdrop.sol\":3345:3355  _unpause() */\n      tag_125\n        /* \"AIAirdrop.sol\":3345:3353  _unpause */\n      tag_126\n        /* \"AIAirdrop.sol\":3345:3355  _unpause() */\n      jump\t// in\n    tag_125:\n        /* \"AIAirdrop.sol\":3299:3362  function unpause() public onlyOwner {... */\n      jump\t// out\n        /* \"AIAirdrop.sol\":758:785  address public tokenToClaim */\n    tag_45:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"AIAirdrop.sol\":1698:1909  function updateAmountToClaim(uint256 _amount)... */\n    tag_51:\n        /* \"AIAirdrop.sol\":1794:1798  bool */\n      0x00\n        /* \"_ownable.sol\":1552:1565  _checkOwner() */\n      tag_128\n        /* \"_ownable.sol\":1552:1563  _checkOwner */\n      tag_89\n        /* \"_ownable.sol\":1552:1565  _checkOwner() */\n      jump\t// in\n    tag_128:\n        /* \"AIAirdrop.sol\":1830:1837  _amount */\n      dup2\n        /* \"AIAirdrop.sol\":1814:1827  amountToClaim */\n      0x03\n        /* \"AIAirdrop.sol\":1814:1837  amountToClaim = _amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"AIAirdrop.sol\":1852:1881  amountToClaimUpdated(_amount) */\n      0xccc2dc361dc3b02936a3d99c4cd064de1bbbb59a03aaad640d302e18f7aacdfb\n        /* \"AIAirdrop.sol\":1873:1880  _amount */\n      dup3\n        /* \"AIAirdrop.sol\":1852:1881  amountToClaimUpdated(_amount) */\n      mload(0x40)\n      tag_130\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"AIAirdrop.sol\":1898:1902  true */\n      0x01\n        /* \"AIAirdrop.sol\":1891:1902  return true */\n      swap1\n      pop\n        /* \"AIAirdrop.sol\":1698:1909  function updateAmountToClaim(uint256 _amount)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"AIAirdrop.sol\":2778:3027  function transferBalance(address payable _to, uint256 _amount)... */\n    tag_56:\n        /* \"_ownable.sol\":1552:1565  _checkOwner() */\n      tag_132\n        /* \"_ownable.sol\":1552:1563  _checkOwner */\n      tag_89\n        /* \"_ownable.sol\":1552:1565  _checkOwner() */\n      jump\t// in\n    tag_132:\n        /* \"AIAirdrop.sol\":2938:2950  bool success */\n      0x00\n        /* \"AIAirdrop.sol\":2956:2959  _to */\n      dup3\n        /* \"AIAirdrop.sol\":2956:2964  _to.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"AIAirdrop.sol\":2972:2979  _amount */\n      dup3\n        /* \"AIAirdrop.sol\":2956:2984  _to.call{value: _amount}(\"\") */\n      mload(0x40)\n      tag_134\n      swap1\n      tag_115\n      jump\t// in\n    tag_134:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_137\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_136)\n    tag_137:\n      0x60\n      swap2\n      pop\n    tag_136:\n      pop\n        /* \"AIAirdrop.sol\":2937:2984  (bool success, ) = _to.call{value: _amount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"AIAirdrop.sol\":3002:3009  success */\n      dup1\n        /* \"AIAirdrop.sol\":2994:3020  require(success, \"Failed\") */\n      tag_138\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap1\n      tag_121\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_138:\n        /* \"AIAirdrop.sol\":2878:3027  {... */\n      pop\n        /* \"AIAirdrop.sol\":2778:3027  function transferBalance(address payable _to, uint256 _amount)... */\n      pop\n      pop\n      jump\t// out\n        /* \"_pausable.sol\":1871:1955  function paused() public view virtual returns (bool) {... */\n    tag_58:\n        /* \"_pausable.sol\":1918:1922  bool */\n      0x00\n        /* \"_pausable.sol\":1941:1948  _paused */\n      0x00\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"_pausable.sol\":1934:1948  return _paused */\n      swap1\n      pop\n        /* \"_pausable.sol\":1871:1955  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"_ownable.sol\":2314:2415  function renounceOwnership() public virtual onlyOwner {... */\n    tag_61:\n        /* \"_ownable.sol\":1552:1565  _checkOwner() */\n      tag_142\n        /* \"_ownable.sol\":1552:1563  _checkOwner */\n      tag_89\n        /* \"_ownable.sol\":1552:1565  _checkOwner() */\n      jump\t// in\n    tag_142:\n        /* \"_ownable.sol\":2378:2408  _transferOwnership(address(0)) */\n      tag_144\n        /* \"_ownable.sol\":2405:2406  0 */\n      0x00\n        /* \"_ownable.sol\":2378:2396  _transferOwnership */\n      tag_145\n        /* \"_ownable.sol\":2378:2408  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_144:\n        /* \"_ownable.sol\":2314:2415  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"AIAirdrop.sol\":3210:3269  function pause() public onlyOwner {... */\n    tag_63:\n        /* \"_ownable.sol\":1552:1565  _checkOwner() */\n      tag_147\n        /* \"_ownable.sol\":1552:1563  _checkOwner */\n      tag_89\n        /* \"_ownable.sol\":1552:1565  _checkOwner() */\n      jump\t// in\n    tag_147:\n        /* \"AIAirdrop.sol\":3254:3262  _pause() */\n      tag_149\n        /* \"AIAirdrop.sol\":3254:3260  _pause */\n      tag_150\n        /* \"AIAirdrop.sol\":3254:3262  _pause() */\n      jump\t// in\n    tag_149:\n        /* \"AIAirdrop.sol\":3210:3269  function pause() public onlyOwner {... */\n      jump\t// out\n        /* \"_ownable.sol\":1659:1744  function owner() public view virtual returns (address) {... */\n    tag_65:\n        /* \"_ownable.sol\":1705:1712  address */\n      0x00\n        /* \"_ownable.sol\":1731:1737  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"_ownable.sol\":1724:1737  return _owner */\n      swap1\n      pop\n        /* \"_ownable.sol\":1659:1744  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"AIAirdrop.sol\":1915:2120  function updateTokenToClaim(address _token)... */\n    tag_69:\n        /* \"AIAirdrop.sol\":2009:2013  bool */\n      0x00\n        /* \"_ownable.sol\":1552:1565  _checkOwner() */\n      tag_153\n        /* \"_ownable.sol\":1552:1563  _checkOwner */\n      tag_89\n        /* \"_ownable.sol\":1552:1565  _checkOwner() */\n      jump\t// in\n    tag_153:\n        /* \"AIAirdrop.sol\":2044:2050  _token */\n      dup2\n        /* \"AIAirdrop.sol\":2029:2041  tokenToClaim */\n      0x02\n      0x00\n        /* \"AIAirdrop.sol\":2029:2050  tokenToClaim = _token */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"AIAirdrop.sol\":2065:2092  tokenToClaimUpdated(_token) */\n      0xf9563f2ff8321c25ec4ee92f781a8d3ebc72f854daa4bf9177f3886b6ca1f7e1\n        /* \"AIAirdrop.sol\":2085:2091  _token */\n      dup3\n        /* \"AIAirdrop.sol\":2065:2092  tokenToClaimUpdated(_token) */\n      mload(0x40)\n      tag_155\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"AIAirdrop.sol\":2109:2113  true */\n      0x01\n        /* \"AIAirdrop.sol\":2102:2113  return true */\n      swap1\n      pop\n        /* \"AIAirdrop.sol\":1915:2120  function updateTokenToClaim(address _token)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"AIAirdrop.sol\":2161:2416  function withdrawLSP7(... */\n    tag_74:\n        /* \"_ownable.sol\":1552:1565  _checkOwner() */\n      tag_157\n        /* \"_ownable.sol\":1552:1563  _checkOwner */\n      tag_89\n        /* \"_ownable.sol\":1552:1565  _checkOwner() */\n      jump\t// in\n    tag_157:\n        /* \"AIAirdrop.sol\":2345:2355  _LSP7Token */\n      dup5\n        /* \"AIAirdrop.sol\":2339:2365  ILSP7(_LSP7Token).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x760d9bba\n        /* \"AIAirdrop.sol\":2374:2378  this */\n      address\n        /* \"AIAirdrop.sol\":2381:2384  _to */\n      dup7\n        /* \"AIAirdrop.sol\":2386:2393  _amount */\n      dup7\n        /* \"AIAirdrop.sol\":2395:2401  _force */\n      dup7\n        /* \"AIAirdrop.sol\":2403:2408  _data */\n      dup7\n        /* \"AIAirdrop.sol\":2339:2409  ILSP7(_LSP7Token).transfer(address(this), _to, _amount, _force, _data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_159\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_159:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_161\n      jumpi\n      revert(0x00, 0x00)\n    tag_161:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_163\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_163:\n      pop\n      pop\n      pop\n      pop\n        /* \"AIAirdrop.sol\":2161:2416  function withdrawLSP7(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"AIAirdrop.sol\":840:882  mapping(address => uint256) public claimed */\n    tag_77:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"_ownable.sol\":2564:2779  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_81:\n        /* \"_ownable.sol\":1552:1565  _checkOwner() */\n      tag_165\n        /* \"_ownable.sol\":1552:1563  _checkOwner */\n      tag_89\n        /* \"_ownable.sol\":1552:1565  _checkOwner() */\n      jump\t// in\n    tag_165:\n        /* \"_ownable.sol\":2668:2669  0 */\n      0x00\n        /* \"_ownable.sol\":2648:2670  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"_ownable.sol\":2648:2656  newOwner */\n      dup2\n        /* \"_ownable.sol\":2648:2670  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"_ownable.sol\":2644:2735  if (newOwner == address(0)) {... */\n      tag_167\n      jumpi\n        /* \"_ownable.sol\":2721:2722  0 */\n      0x00\n        /* \"_ownable.sol\":2693:2724  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"_ownable.sol\":2644:2735  if (newOwner == address(0)) {... */\n    tag_167:\n        /* \"_ownable.sol\":2744:2772  _transferOwnership(newOwner) */\n      tag_169\n        /* \"_ownable.sol\":2763:2771  newOwner */\n      dup2\n        /* \"_ownable.sol\":2744:2762  _transferOwnership */\n      tag_145\n        /* \"_ownable.sol\":2744:2772  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_169:\n        /* \"_ownable.sol\":2564:2779  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"AIAirdrop.sol\":715:752  Counters.Counter public _claimCounter */\n    tag_83:\n      0x01\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"_ownable.sol\":1817:1979  function _checkOwner() internal view virtual {... */\n    tag_89:\n        /* \"_ownable.sol\":1887:1899  _msgSender() */\n      tag_171\n        /* \"_ownable.sol\":1887:1897  _msgSender */\n      tag_172\n        /* \"_ownable.sol\":1887:1899  _msgSender() */\n      jump\t// in\n    tag_171:\n        /* \"_ownable.sol\":1876:1899  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"_ownable.sol\":1876:1883  owner() */\n      tag_173\n        /* \"_ownable.sol\":1876:1881  owner */\n      tag_65\n        /* \"_ownable.sol\":1876:1883  owner() */\n      jump\t// in\n    tag_173:\n        /* \"_ownable.sol\":1876:1899  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"_ownable.sol\":1872:1973  if (owner() != _msgSender()) {... */\n      tag_174\n      jumpi\n        /* \"_ownable.sol\":1949:1961  _msgSender() */\n      tag_175\n        /* \"_ownable.sol\":1949:1959  _msgSender */\n      tag_172\n        /* \"_ownable.sol\":1949:1961  _msgSender() */\n      jump\t// in\n    tag_175:\n        /* \"_ownable.sol\":1922:1962  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_176\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"_ownable.sol\":1872:1973  if (owner() != _msgSender()) {... */\n    tag_174:\n        /* \"_ownable.sol\":1817:1979  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"_pausable.sol\":2023:2151  function _requireNotPaused() internal view virtual {... */\n    tag_92:\n        /* \"_pausable.sol\":2088:2096  paused() */\n      tag_178\n        /* \"_pausable.sol\":2088:2094  paused */\n      tag_58\n        /* \"_pausable.sol\":2088:2096  paused() */\n      jump\t// in\n    tag_178:\n        /* \"_pausable.sol\":2084:2145  if (paused()) {... */\n      iszero\n      tag_179\n      jumpi\n        /* \"_pausable.sol\":2119:2134  EnforcedPause() */\n      mload(0x40)\n      0xd93c066500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"_pausable.sol\":2084:2145  if (paused()) {... */\n    tag_179:\n        /* \"_pausable.sol\":2023:2151  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":970:1097  function increment(Counter storage counter) internal {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1077:1078  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1059:1066  counter */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1059:1073  counter._value */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1059:1078  counter._value += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":970:1097  function increment(Counter storage counter) internal {... */\n      pop\n      jump\t// out\n        /* \"_pausable.sol\":2731:2848  function _unpause() internal virtual whenPaused {... */\n    tag_126:\n        /* \"_pausable.sol\":1742:1758  _requirePaused() */\n      tag_182\n        /* \"_pausable.sol\":1742:1756  _requirePaused */\n      tag_183\n        /* \"_pausable.sol\":1742:1758  _requirePaused() */\n      jump\t// in\n    tag_182:\n        /* \"_pausable.sol\":2799:2804  false */\n      0x00\n        /* \"_pausable.sol\":2789:2796  _paused */\n      0x00\n      0x14\n        /* \"_pausable.sol\":2789:2804  _paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"_pausable.sol\":2819:2841  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"_pausable.sol\":2828:2840  _msgSender() */\n      tag_185\n        /* \"_pausable.sol\":2828:2838  _msgSender */\n      tag_172\n        /* \"_pausable.sol\":2828:2840  _msgSender() */\n      jump\t// in\n    tag_185:\n        /* \"_pausable.sol\":2819:2841  Unpaused(_msgSender()) */\n      mload(0x40)\n      tag_186\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_186:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"_pausable.sol\":2731:2848  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"_ownable.sol\":2933:3120  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_145:\n        /* \"_ownable.sol\":3006:3022  address oldOwner */\n      0x00\n        /* \"_ownable.sol\":3025:3031  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"_ownable.sol\":3006:3031  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"_ownable.sol\":3050:3058  newOwner */\n      dup2\n        /* \"_ownable.sol\":3041:3047  _owner */\n      0x00\n      0x00\n        /* \"_ownable.sol\":3041:3058  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"_ownable.sol\":3104:3112  newOwner */\n      dup2\n        /* \"_ownable.sol\":3073:3113  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"_ownable.sol\":3094:3102  oldOwner */\n      dup2\n        /* \"_ownable.sol\":3073:3113  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"_ownable.sol\":2996:3120  {... */\n      pop\n        /* \"_ownable.sol\":2933:3120  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"_pausable.sol\":2484:2599  function _pause() internal virtual whenNotPaused {... */\n    tag_150:\n        /* \"_pausable.sol\":1495:1514  _requireNotPaused() */\n      tag_189\n        /* \"_pausable.sol\":1495:1512  _requireNotPaused */\n      tag_92\n        /* \"_pausable.sol\":1495:1514  _requireNotPaused() */\n      jump\t// in\n    tag_189:\n        /* \"_pausable.sol\":2553:2557  true */\n      0x01\n        /* \"_pausable.sol\":2543:2550  _paused */\n      0x00\n      0x14\n        /* \"_pausable.sol\":2543:2557  _paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"_pausable.sol\":2572:2592  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"_pausable.sol\":2579:2591  _msgSender() */\n      tag_191\n        /* \"_pausable.sol\":2579:2589  _msgSender */\n      tag_172\n        /* \"_pausable.sol\":2579:2591  _msgSender() */\n      jump\t// in\n    tag_191:\n        /* \"_pausable.sol\":2572:2592  Paused(_msgSender()) */\n      mload(0x40)\n      tag_192\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"_pausable.sol\":2484:2599  function _pause() internal virtual whenNotPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_172:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"_pausable.sol\":2223:2349  function _requirePaused() internal view virtual {... */\n    tag_183:\n        /* \"_pausable.sol\":2286:2294  paused() */\n      tag_195\n        /* \"_pausable.sol\":2286:2292  paused */\n      tag_58\n        /* \"_pausable.sol\":2286:2294  paused() */\n      jump\t// in\n    tag_195:\n        /* \"_pausable.sol\":2281:2343  if (!paused()) {... */\n      tag_196\n      jumpi\n        /* \"_pausable.sol\":2317:2332  ExpectedPause() */\n      mload(0x40)\n      0x8dfc202b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"_pausable.sol\":2281:2343  if (!paused()) {... */\n    tag_196:\n        /* \"_pausable.sol\":2223:2349  function _requirePaused() internal view virtual {... */\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_197:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_198:\n        /* \"#utility.yul\":177:201   */\n      tag_241\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_197\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_27:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_243\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_198\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:517   */\n    tag_199:\n        /* \"#utility.yul\":475:481   */\n      0x00\n        /* \"#utility.yul\":508:510   */\n      0x40\n        /* \"#utility.yul\":502:511   */\n      mload\n        /* \"#utility.yul\":492:511   */\n      swap1\n      pop\n        /* \"#utility.yul\":442:517   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":523:640   */\n    tag_200:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":629:630   */\n      0x00\n        /* \"#utility.yul\":622:634   */\n      revert\n        /* \"#utility.yul\":646:763   */\n    tag_201:\n        /* \"#utility.yul\":755:756   */\n      0x00\n        /* \"#utility.yul\":752:753   */\n      0x00\n        /* \"#utility.yul\":745:757   */\n      revert\n        /* \"#utility.yul\":769:895   */\n    tag_202:\n        /* \"#utility.yul\":806:813   */\n      0x00\n        /* \"#utility.yul\":846:888   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":839:844   */\n      dup3\n        /* \"#utility.yul\":835:889   */\n      and\n        /* \"#utility.yul\":824:889   */\n      swap1\n      pop\n        /* \"#utility.yul\":769:895   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":901:997   */\n    tag_203:\n        /* \"#utility.yul\":938:945   */\n      0x00\n        /* \"#utility.yul\":967:991   */\n      tag_249\n        /* \"#utility.yul\":985:990   */\n      dup3\n        /* \"#utility.yul\":967:991   */\n      tag_202\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":956:991   */\n      swap1\n      pop\n        /* \"#utility.yul\":901:997   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1003:1125   */\n    tag_204:\n        /* \"#utility.yul\":1076:1100   */\n      tag_251\n        /* \"#utility.yul\":1094:1099   */\n      dup2\n        /* \"#utility.yul\":1076:1100   */\n      tag_203\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":1069:1074   */\n      dup2\n        /* \"#utility.yul\":1066:1101   */\n      eq\n        /* \"#utility.yul\":1056:1119   */\n      tag_252\n      jumpi\n        /* \"#utility.yul\":1115:1116   */\n      0x00\n        /* \"#utility.yul\":1112:1113   */\n      0x00\n        /* \"#utility.yul\":1105:1117   */\n      revert\n        /* \"#utility.yul\":1056:1119   */\n    tag_252:\n        /* \"#utility.yul\":1003:1125   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1131:1270   */\n    tag_205:\n        /* \"#utility.yul\":1177:1182   */\n      0x00\n        /* \"#utility.yul\":1215:1221   */\n      dup2\n        /* \"#utility.yul\":1202:1222   */\n      calldataload\n        /* \"#utility.yul\":1193:1222   */\n      swap1\n      pop\n        /* \"#utility.yul\":1231:1264   */\n      tag_254\n        /* \"#utility.yul\":1258:1263   */\n      dup2\n        /* \"#utility.yul\":1231:1264   */\n      tag_204\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":1131:1270   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1276:1605   */\n    tag_33:\n        /* \"#utility.yul\":1335:1341   */\n      0x00\n        /* \"#utility.yul\":1384:1386   */\n      0x20\n        /* \"#utility.yul\":1372:1381   */\n      dup3\n        /* \"#utility.yul\":1363:1370   */\n      dup5\n        /* \"#utility.yul\":1359:1382   */\n      sub\n        /* \"#utility.yul\":1355:1387   */\n      slt\n        /* \"#utility.yul\":1352:1471   */\n      iszero\n      tag_256\n      jumpi\n        /* \"#utility.yul\":1390:1469   */\n      tag_257\n      tag_200\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":1352:1471   */\n    tag_256:\n        /* \"#utility.yul\":1510:1511   */\n      0x00\n        /* \"#utility.yul\":1535:1588   */\n      tag_258\n        /* \"#utility.yul\":1580:1587   */\n      dup5\n        /* \"#utility.yul\":1571:1577   */\n      dup3\n        /* \"#utility.yul\":1560:1569   */\n      dup6\n        /* \"#utility.yul\":1556:1578   */\n      add\n        /* \"#utility.yul\":1535:1588   */\n      tag_205\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":1525:1588   */\n      swap2\n      pop\n        /* \"#utility.yul\":1481:1598   */\n      pop\n        /* \"#utility.yul\":1276:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1701   */\n    tag_206:\n        /* \"#utility.yul\":1645:1652   */\n      0x00\n        /* \"#utility.yul\":1688:1693   */\n      dup2\n        /* \"#utility.yul\":1681:1694   */\n      iszero\n        /* \"#utility.yul\":1674:1695   */\n      iszero\n        /* \"#utility.yul\":1663:1695   */\n      swap1\n      pop\n        /* \"#utility.yul\":1611:1701   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1707:1816   */\n    tag_207:\n        /* \"#utility.yul\":1788:1809   */\n      tag_261\n        /* \"#utility.yul\":1803:1808   */\n      dup2\n        /* \"#utility.yul\":1788:1809   */\n      tag_206\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":1783:1786   */\n      dup3\n        /* \"#utility.yul\":1776:1810   */\n      mstore\n        /* \"#utility.yul\":1707:1816   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1822:2032   */\n    tag_36:\n        /* \"#utility.yul\":1909:1913   */\n      0x00\n        /* \"#utility.yul\":1947:1949   */\n      0x20\n        /* \"#utility.yul\":1936:1945   */\n      dup3\n        /* \"#utility.yul\":1932:1950   */\n      add\n        /* \"#utility.yul\":1924:1950   */\n      swap1\n      pop\n        /* \"#utility.yul\":1960:2025   */\n      tag_263\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2011:2020   */\n      dup4\n        /* \"#utility.yul\":2007:2024   */\n      add\n        /* \"#utility.yul\":1998:2004   */\n      dup5\n        /* \"#utility.yul\":1960:2025   */\n      tag_207\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":1822:2032   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2156   */\n    tag_208:\n        /* \"#utility.yul\":2125:2149   */\n      tag_265\n        /* \"#utility.yul\":2143:2148   */\n      dup2\n        /* \"#utility.yul\":2125:2149   */\n      tag_203\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":2120:2123   */\n      dup3\n        /* \"#utility.yul\":2113:2150   */\n      mstore\n        /* \"#utility.yul\":2038:2156   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2162:2384   */\n    tag_47:\n        /* \"#utility.yul\":2255:2259   */\n      0x00\n        /* \"#utility.yul\":2293:2295   */\n      0x20\n        /* \"#utility.yul\":2282:2291   */\n      dup3\n        /* \"#utility.yul\":2278:2296   */\n      add\n        /* \"#utility.yul\":2270:2296   */\n      swap1\n      pop\n        /* \"#utility.yul\":2306:2377   */\n      tag_267\n        /* \"#utility.yul\":2374:2375   */\n      0x00\n        /* \"#utility.yul\":2363:2372   */\n      dup4\n        /* \"#utility.yul\":2359:2376   */\n      add\n        /* \"#utility.yul\":2350:2356   */\n      dup5\n        /* \"#utility.yul\":2306:2377   */\n      tag_208\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":2162:2384   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2390:2512   */\n    tag_209:\n        /* \"#utility.yul\":2463:2487   */\n      tag_269\n        /* \"#utility.yul\":2481:2486   */\n      dup2\n        /* \"#utility.yul\":2463:2487   */\n      tag_197\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":2456:2461   */\n      dup2\n        /* \"#utility.yul\":2453:2488   */\n      eq\n        /* \"#utility.yul\":2443:2506   */\n      tag_270\n      jumpi\n        /* \"#utility.yul\":2502:2503   */\n      0x00\n        /* \"#utility.yul\":2499:2500   */\n      0x00\n        /* \"#utility.yul\":2492:2504   */\n      revert\n        /* \"#utility.yul\":2443:2506   */\n    tag_270:\n        /* \"#utility.yul\":2390:2512   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2518:2657   */\n    tag_210:\n        /* \"#utility.yul\":2564:2569   */\n      0x00\n        /* \"#utility.yul\":2602:2608   */\n      dup2\n        /* \"#utility.yul\":2589:2609   */\n      calldataload\n        /* \"#utility.yul\":2580:2609   */\n      swap1\n      pop\n        /* \"#utility.yul\":2618:2651   */\n      tag_272\n        /* \"#utility.yul\":2645:2650   */\n      dup2\n        /* \"#utility.yul\":2618:2651   */\n      tag_209\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":2518:2657   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2663:2992   */\n    tag_50:\n        /* \"#utility.yul\":2722:2728   */\n      0x00\n        /* \"#utility.yul\":2771:2773   */\n      0x20\n        /* \"#utility.yul\":2759:2768   */\n      dup3\n        /* \"#utility.yul\":2750:2757   */\n      dup5\n        /* \"#utility.yul\":2746:2769   */\n      sub\n        /* \"#utility.yul\":2742:2774   */\n      slt\n        /* \"#utility.yul\":2739:2858   */\n      iszero\n      tag_274\n      jumpi\n        /* \"#utility.yul\":2777:2856   */\n      tag_275\n      tag_200\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":2739:2858   */\n    tag_274:\n        /* \"#utility.yul\":2897:2898   */\n      0x00\n        /* \"#utility.yul\":2922:2975   */\n      tag_276\n        /* \"#utility.yul\":2967:2974   */\n      dup5\n        /* \"#utility.yul\":2958:2964   */\n      dup3\n        /* \"#utility.yul\":2947:2956   */\n      dup6\n        /* \"#utility.yul\":2943:2965   */\n      add\n        /* \"#utility.yul\":2922:2975   */\n      tag_210\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":2912:2975   */\n      swap2\n      pop\n        /* \"#utility.yul\":2868:2985   */\n      pop\n        /* \"#utility.yul\":2663:2992   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2998:3102   */\n    tag_211:\n        /* \"#utility.yul\":3043:3050   */\n      0x00\n        /* \"#utility.yul\":3072:3096   */\n      tag_278\n        /* \"#utility.yul\":3090:3095   */\n      dup3\n        /* \"#utility.yul\":3072:3096   */\n      tag_202\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":3061:3096   */\n      swap1\n      pop\n        /* \"#utility.yul\":2998:3102   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3108:3246   */\n    tag_212:\n        /* \"#utility.yul\":3189:3221   */\n      tag_280\n        /* \"#utility.yul\":3215:3220   */\n      dup2\n        /* \"#utility.yul\":3189:3221   */\n      tag_211\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":3182:3187   */\n      dup2\n        /* \"#utility.yul\":3179:3222   */\n      eq\n        /* \"#utility.yul\":3169:3240   */\n      tag_281\n      jumpi\n        /* \"#utility.yul\":3236:3237   */\n      0x00\n        /* \"#utility.yul\":3233:3234   */\n      0x00\n        /* \"#utility.yul\":3226:3238   */\n      revert\n        /* \"#utility.yul\":3169:3240   */\n    tag_281:\n        /* \"#utility.yul\":3108:3246   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3252:3407   */\n    tag_213:\n        /* \"#utility.yul\":3306:3311   */\n      0x00\n        /* \"#utility.yul\":3344:3350   */\n      dup2\n        /* \"#utility.yul\":3331:3351   */\n      calldataload\n        /* \"#utility.yul\":3322:3351   */\n      swap1\n      pop\n        /* \"#utility.yul\":3360:3401   */\n      tag_283\n        /* \"#utility.yul\":3395:3400   */\n      dup2\n        /* \"#utility.yul\":3360:3401   */\n      tag_212\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":3252:3407   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3413:3903   */\n    tag_55:\n        /* \"#utility.yul\":3489:3495   */\n      0x00\n        /* \"#utility.yul\":3497:3503   */\n      0x00\n        /* \"#utility.yul\":3546:3548   */\n      0x40\n        /* \"#utility.yul\":3534:3543   */\n      dup4\n        /* \"#utility.yul\":3525:3532   */\n      dup6\n        /* \"#utility.yul\":3521:3544   */\n      sub\n        /* \"#utility.yul\":3517:3549   */\n      slt\n        /* \"#utility.yul\":3514:3633   */\n      iszero\n      tag_285\n      jumpi\n        /* \"#utility.yul\":3552:3631   */\n      tag_286\n      tag_200\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":3514:3633   */\n    tag_285:\n        /* \"#utility.yul\":3672:3673   */\n      0x00\n        /* \"#utility.yul\":3697:3758   */\n      tag_287\n        /* \"#utility.yul\":3750:3757   */\n      dup6\n        /* \"#utility.yul\":3741:3747   */\n      dup3\n        /* \"#utility.yul\":3730:3739   */\n      dup7\n        /* \"#utility.yul\":3726:3748   */\n      add\n        /* \"#utility.yul\":3697:3758   */\n      tag_213\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":3687:3758   */\n      swap3\n      pop\n        /* \"#utility.yul\":3643:3768   */\n      pop\n        /* \"#utility.yul\":3807:3809   */\n      0x20\n        /* \"#utility.yul\":3833:3886   */\n      tag_288\n        /* \"#utility.yul\":3878:3885   */\n      dup6\n        /* \"#utility.yul\":3869:3875   */\n      dup3\n        /* \"#utility.yul\":3858:3867   */\n      dup7\n        /* \"#utility.yul\":3854:3876   */\n      add\n        /* \"#utility.yul\":3833:3886   */\n      tag_210\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":3823:3886   */\n      swap2\n      pop\n        /* \"#utility.yul\":3778:3896   */\n      pop\n        /* \"#utility.yul\":3413:3903   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3909:4025   */\n    tag_214:\n        /* \"#utility.yul\":3979:4000   */\n      tag_290\n        /* \"#utility.yul\":3994:3999   */\n      dup2\n        /* \"#utility.yul\":3979:4000   */\n      tag_206\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":3972:3977   */\n      dup2\n        /* \"#utility.yul\":3969:4001   */\n      eq\n        /* \"#utility.yul\":3959:4019   */\n      tag_291\n      jumpi\n        /* \"#utility.yul\":4015:4016   */\n      0x00\n        /* \"#utility.yul\":4012:4013   */\n      0x00\n        /* \"#utility.yul\":4005:4017   */\n      revert\n        /* \"#utility.yul\":3959:4019   */\n    tag_291:\n        /* \"#utility.yul\":3909:4025   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4031:4164   */\n    tag_215:\n        /* \"#utility.yul\":4074:4079   */\n      0x00\n        /* \"#utility.yul\":4112:4118   */\n      dup2\n        /* \"#utility.yul\":4099:4119   */\n      calldataload\n        /* \"#utility.yul\":4090:4119   */\n      swap1\n      pop\n        /* \"#utility.yul\":4128:4158   */\n      tag_293\n        /* \"#utility.yul\":4152:4157   */\n      dup2\n        /* \"#utility.yul\":4128:4158   */\n      tag_214\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":4031:4164   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4170:4287   */\n    tag_216:\n        /* \"#utility.yul\":4279:4280   */\n      0x00\n        /* \"#utility.yul\":4276:4277   */\n      0x00\n        /* \"#utility.yul\":4269:4281   */\n      revert\n        /* \"#utility.yul\":4293:4410   */\n    tag_217:\n        /* \"#utility.yul\":4402:4403   */\n      0x00\n        /* \"#utility.yul\":4399:4400   */\n      0x00\n        /* \"#utility.yul\":4392:4404   */\n      revert\n        /* \"#utility.yul\":4416:4518   */\n    tag_218:\n        /* \"#utility.yul\":4457:4463   */\n      0x00\n        /* \"#utility.yul\":4508:4510   */\n      0x1f\n        /* \"#utility.yul\":4504:4511   */\n      not\n        /* \"#utility.yul\":4499:4501   */\n      0x1f\n        /* \"#utility.yul\":4492:4497   */\n      dup4\n        /* \"#utility.yul\":4488:4502   */\n      add\n        /* \"#utility.yul\":4484:4512   */\n      and\n        /* \"#utility.yul\":4474:4512   */\n      swap1\n      pop\n        /* \"#utility.yul\":4416:4518   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4524:4704   */\n    tag_219:\n        /* \"#utility.yul\":4572:4649   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4569:4570   */\n      0x00\n        /* \"#utility.yul\":4562:4650   */\n      mstore\n        /* \"#utility.yul\":4669:4673   */\n      0x41\n        /* \"#utility.yul\":4666:4667   */\n      0x04\n        /* \"#utility.yul\":4659:4674   */\n      mstore\n        /* \"#utility.yul\":4693:4697   */\n      0x24\n        /* \"#utility.yul\":4690:4691   */\n      0x00\n        /* \"#utility.yul\":4683:4698   */\n      revert\n        /* \"#utility.yul\":4710:4991   */\n    tag_220:\n        /* \"#utility.yul\":4793:4820   */\n      tag_299\n        /* \"#utility.yul\":4815:4819   */\n      dup3\n        /* \"#utility.yul\":4793:4820   */\n      tag_218\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":4785:4791   */\n      dup2\n        /* \"#utility.yul\":4781:4821   */\n      add\n        /* \"#utility.yul\":4923:4929   */\n      dup2\n        /* \"#utility.yul\":4911:4921   */\n      dup2\n        /* \"#utility.yul\":4908:4930   */\n      lt\n        /* \"#utility.yul\":4887:4905   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4875:4885   */\n      dup3\n        /* \"#utility.yul\":4872:4906   */\n      gt\n        /* \"#utility.yul\":4869:4931   */\n      or\n        /* \"#utility.yul\":4866:4954   */\n      iszero\n      tag_300\n      jumpi\n        /* \"#utility.yul\":4934:4952   */\n      tag_301\n      tag_219\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":4866:4954   */\n    tag_300:\n        /* \"#utility.yul\":4974:4984   */\n      dup1\n        /* \"#utility.yul\":4970:4972   */\n      0x40\n        /* \"#utility.yul\":4963:4985   */\n      mstore\n        /* \"#utility.yul\":4753:4991   */\n      pop\n        /* \"#utility.yul\":4710:4991   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4997:5126   */\n    tag_221:\n        /* \"#utility.yul\":5031:5037   */\n      0x00\n        /* \"#utility.yul\":5058:5078   */\n      tag_303\n      tag_199\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":5048:5078   */\n      swap1\n      pop\n        /* \"#utility.yul\":5087:5120   */\n      tag_304\n        /* \"#utility.yul\":5115:5119   */\n      dup3\n        /* \"#utility.yul\":5107:5113   */\n      dup3\n        /* \"#utility.yul\":5087:5120   */\n      tag_220\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":4997:5126   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5132:5439   */\n    tag_222:\n        /* \"#utility.yul\":5193:5197   */\n      0x00\n        /* \"#utility.yul\":5283:5301   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5275:5281   */\n      dup3\n        /* \"#utility.yul\":5272:5302   */\n      gt\n        /* \"#utility.yul\":5269:5325   */\n      iszero\n      tag_306\n      jumpi\n        /* \"#utility.yul\":5305:5323   */\n      tag_307\n      tag_219\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":5269:5325   */\n    tag_306:\n        /* \"#utility.yul\":5343:5372   */\n      tag_308\n        /* \"#utility.yul\":5365:5371   */\n      dup3\n        /* \"#utility.yul\":5343:5372   */\n      tag_218\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":5335:5372   */\n      swap1\n      pop\n        /* \"#utility.yul\":5427:5431   */\n      0x20\n        /* \"#utility.yul\":5421:5425   */\n      dup2\n        /* \"#utility.yul\":5417:5432   */\n      add\n        /* \"#utility.yul\":5409:5432   */\n      swap1\n      pop\n        /* \"#utility.yul\":5132:5439   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5445:5593   */\n    tag_223:\n        /* \"#utility.yul\":5543:5549   */\n      dup3\n        /* \"#utility.yul\":5538:5541   */\n      dup2\n        /* \"#utility.yul\":5533:5536   */\n      dup4\n        /* \"#utility.yul\":5520:5550   */\n      calldatacopy\n        /* \"#utility.yul\":5584:5585   */\n      0x00\n        /* \"#utility.yul\":5575:5581   */\n      dup4\n        /* \"#utility.yul\":5570:5573   */\n      dup4\n        /* \"#utility.yul\":5566:5582   */\n      add\n        /* \"#utility.yul\":5559:5586   */\n      mstore\n        /* \"#utility.yul\":5445:5593   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5599:6022   */\n    tag_224:\n        /* \"#utility.yul\":5676:5681   */\n      0x00\n        /* \"#utility.yul\":5701:5766   */\n      tag_311\n        /* \"#utility.yul\":5717:5765   */\n      tag_312\n        /* \"#utility.yul\":5758:5764   */\n      dup5\n        /* \"#utility.yul\":5717:5765   */\n      tag_222\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":5701:5766   */\n      tag_221\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":5692:5766   */\n      swap1\n      pop\n        /* \"#utility.yul\":5789:5795   */\n      dup3\n        /* \"#utility.yul\":5782:5787   */\n      dup2\n        /* \"#utility.yul\":5775:5796   */\n      mstore\n        /* \"#utility.yul\":5827:5831   */\n      0x20\n        /* \"#utility.yul\":5820:5825   */\n      dup2\n        /* \"#utility.yul\":5816:5832   */\n      add\n        /* \"#utility.yul\":5865:5868   */\n      dup5\n        /* \"#utility.yul\":5856:5862   */\n      dup5\n        /* \"#utility.yul\":5851:5854   */\n      dup5\n        /* \"#utility.yul\":5847:5863   */\n      add\n        /* \"#utility.yul\":5844:5869   */\n      gt\n        /* \"#utility.yul\":5841:5953   */\n      iszero\n      tag_313\n      jumpi\n        /* \"#utility.yul\":5872:5951   */\n      tag_314\n      tag_217\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":5841:5953   */\n    tag_313:\n        /* \"#utility.yul\":5962:6016   */\n      tag_315\n        /* \"#utility.yul\":6009:6015   */\n      dup5\n        /* \"#utility.yul\":6004:6007   */\n      dup3\n        /* \"#utility.yul\":5999:6002   */\n      dup6\n        /* \"#utility.yul\":5962:6016   */\n      tag_223\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":5682:6022   */\n      pop\n        /* \"#utility.yul\":5599:6022   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6041:6379   */\n    tag_225:\n        /* \"#utility.yul\":6096:6101   */\n      0x00\n        /* \"#utility.yul\":6145:6148   */\n      dup3\n        /* \"#utility.yul\":6138:6142   */\n      0x1f\n        /* \"#utility.yul\":6130:6136   */\n      dup4\n        /* \"#utility.yul\":6126:6143   */\n      add\n        /* \"#utility.yul\":6122:6149   */\n      slt\n        /* \"#utility.yul\":6112:6234   */\n      tag_317\n      jumpi\n        /* \"#utility.yul\":6153:6232   */\n      tag_318\n      tag_216\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":6112:6234   */\n    tag_317:\n        /* \"#utility.yul\":6270:6276   */\n      dup2\n        /* \"#utility.yul\":6257:6277   */\n      calldataload\n        /* \"#utility.yul\":6295:6373   */\n      tag_319\n        /* \"#utility.yul\":6369:6372   */\n      dup5\n        /* \"#utility.yul\":6361:6367   */\n      dup3\n        /* \"#utility.yul\":6354:6358   */\n      0x20\n        /* \"#utility.yul\":6346:6352   */\n      dup7\n        /* \"#utility.yul\":6342:6359   */\n      add\n        /* \"#utility.yul\":6295:6373   */\n      tag_224\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":6286:6373   */\n      swap2\n      pop\n        /* \"#utility.yul\":6102:6379   */\n      pop\n        /* \"#utility.yul\":6041:6379   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6385:7468   */\n    tag_73:\n        /* \"#utility.yul\":6486:6492   */\n      0x00\n        /* \"#utility.yul\":6494:6500   */\n      0x00\n        /* \"#utility.yul\":6502:6508   */\n      0x00\n        /* \"#utility.yul\":6510:6516   */\n      0x00\n        /* \"#utility.yul\":6518:6524   */\n      0x00\n        /* \"#utility.yul\":6567:6570   */\n      0xa0\n        /* \"#utility.yul\":6555:6564   */\n      dup7\n        /* \"#utility.yul\":6546:6553   */\n      dup9\n        /* \"#utility.yul\":6542:6565   */\n      sub\n        /* \"#utility.yul\":6538:6571   */\n      slt\n        /* \"#utility.yul\":6535:6655   */\n      iszero\n      tag_321\n      jumpi\n        /* \"#utility.yul\":6574:6653   */\n      tag_322\n      tag_200\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":6535:6655   */\n    tag_321:\n        /* \"#utility.yul\":6694:6695   */\n      0x00\n        /* \"#utility.yul\":6719:6772   */\n      tag_323\n        /* \"#utility.yul\":6764:6771   */\n      dup9\n        /* \"#utility.yul\":6755:6761   */\n      dup3\n        /* \"#utility.yul\":6744:6753   */\n      dup10\n        /* \"#utility.yul\":6740:6762   */\n      add\n        /* \"#utility.yul\":6719:6772   */\n      tag_205\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":6709:6772   */\n      swap6\n      pop\n        /* \"#utility.yul\":6665:6782   */\n      pop\n        /* \"#utility.yul\":6821:6823   */\n      0x20\n        /* \"#utility.yul\":6847:6900   */\n      tag_324\n        /* \"#utility.yul\":6892:6899   */\n      dup9\n        /* \"#utility.yul\":6883:6889   */\n      dup3\n        /* \"#utility.yul\":6872:6881   */\n      dup10\n        /* \"#utility.yul\":6868:6890   */\n      add\n        /* \"#utility.yul\":6847:6900   */\n      tag_205\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":6837:6900   */\n      swap5\n      pop\n        /* \"#utility.yul\":6792:6910   */\n      pop\n        /* \"#utility.yul\":6949:6951   */\n      0x40\n        /* \"#utility.yul\":6975:7028   */\n      tag_325\n        /* \"#utility.yul\":7020:7027   */\n      dup9\n        /* \"#utility.yul\":7011:7017   */\n      dup3\n        /* \"#utility.yul\":7000:7009   */\n      dup10\n        /* \"#utility.yul\":6996:7018   */\n      add\n        /* \"#utility.yul\":6975:7028   */\n      tag_210\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":6965:7028   */\n      swap4\n      pop\n        /* \"#utility.yul\":6920:7038   */\n      pop\n        /* \"#utility.yul\":7077:7079   */\n      0x60\n        /* \"#utility.yul\":7103:7153   */\n      tag_326\n        /* \"#utility.yul\":7145:7152   */\n      dup9\n        /* \"#utility.yul\":7136:7142   */\n      dup3\n        /* \"#utility.yul\":7125:7134   */\n      dup10\n        /* \"#utility.yul\":7121:7143   */\n      add\n        /* \"#utility.yul\":7103:7153   */\n      tag_215\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":7093:7153   */\n      swap3\n      pop\n        /* \"#utility.yul\":7048:7163   */\n      pop\n        /* \"#utility.yul\":7230:7233   */\n      0x80\n        /* \"#utility.yul\":7219:7228   */\n      dup7\n        /* \"#utility.yul\":7215:7234   */\n      add\n        /* \"#utility.yul\":7202:7235   */\n      calldataload\n        /* \"#utility.yul\":7262:7280   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7254:7260   */\n      dup2\n        /* \"#utility.yul\":7251:7281   */\n      gt\n        /* \"#utility.yul\":7248:7365   */\n      iszero\n      tag_327\n      jumpi\n        /* \"#utility.yul\":7284:7363   */\n      tag_328\n      tag_201\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":7248:7365   */\n    tag_327:\n        /* \"#utility.yul\":7389:7451   */\n      tag_329\n        /* \"#utility.yul\":7443:7450   */\n      dup9\n        /* \"#utility.yul\":7434:7440   */\n      dup3\n        /* \"#utility.yul\":7423:7432   */\n      dup10\n        /* \"#utility.yul\":7419:7441   */\n      add\n        /* \"#utility.yul\":7389:7451   */\n      tag_225\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":7379:7451   */\n      swap2\n      pop\n        /* \"#utility.yul\":7173:7461   */\n      pop\n        /* \"#utility.yul\":6385:7468   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7474:7617   */\n    tag_226:\n        /* \"#utility.yul\":7531:7536   */\n      0x00\n        /* \"#utility.yul\":7562:7568   */\n      dup2\n        /* \"#utility.yul\":7556:7569   */\n      mload\n        /* \"#utility.yul\":7547:7569   */\n      swap1\n      pop\n        /* \"#utility.yul\":7578:7611   */\n      tag_331\n        /* \"#utility.yul\":7605:7610   */\n      dup2\n        /* \"#utility.yul\":7578:7611   */\n      tag_209\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":7474:7617   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7623:7974   */\n    tag_99:\n        /* \"#utility.yul\":7693:7699   */\n      0x00\n        /* \"#utility.yul\":7742:7744   */\n      0x20\n        /* \"#utility.yul\":7730:7739   */\n      dup3\n        /* \"#utility.yul\":7721:7728   */\n      dup5\n        /* \"#utility.yul\":7717:7740   */\n      sub\n        /* \"#utility.yul\":7713:7745   */\n      slt\n        /* \"#utility.yul\":7710:7829   */\n      iszero\n      tag_333\n      jumpi\n        /* \"#utility.yul\":7748:7827   */\n      tag_334\n      tag_200\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":7710:7829   */\n    tag_333:\n        /* \"#utility.yul\":7868:7869   */\n      0x00\n        /* \"#utility.yul\":7893:7957   */\n      tag_335\n        /* \"#utility.yul\":7949:7956   */\n      dup5\n        /* \"#utility.yul\":7940:7946   */\n      dup3\n        /* \"#utility.yul\":7929:7938   */\n      dup6\n        /* \"#utility.yul\":7925:7947   */\n      add\n        /* \"#utility.yul\":7893:7957   */\n      tag_226\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":7883:7957   */\n      swap2\n      pop\n        /* \"#utility.yul\":7839:7967   */\n      pop\n        /* \"#utility.yul\":7623:7974   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7980:8312   */\n    tag_101:\n        /* \"#utility.yul\":8101:8105   */\n      0x00\n        /* \"#utility.yul\":8139:8141   */\n      0x40\n        /* \"#utility.yul\":8128:8137   */\n      dup3\n        /* \"#utility.yul\":8124:8142   */\n      add\n        /* \"#utility.yul\":8116:8142   */\n      swap1\n      pop\n        /* \"#utility.yul\":8152:8223   */\n      tag_337\n        /* \"#utility.yul\":8220:8221   */\n      0x00\n        /* \"#utility.yul\":8209:8218   */\n      dup4\n        /* \"#utility.yul\":8205:8222   */\n      add\n        /* \"#utility.yul\":8196:8202   */\n      dup6\n        /* \"#utility.yul\":8152:8223   */\n      tag_198\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":8233:8305   */\n      tag_338\n        /* \"#utility.yul\":8301:8303   */\n      0x20\n        /* \"#utility.yul\":8290:8299   */\n      dup4\n        /* \"#utility.yul\":8286:8304   */\n      add\n        /* \"#utility.yul\":8277:8283   */\n      dup5\n        /* \"#utility.yul\":8233:8305   */\n      tag_198\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":7980:8312   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8318:8486   */\n    tag_227:\n        /* \"#utility.yul\":8401:8412   */\n      0x00\n        /* \"#utility.yul\":8435:8441   */\n      dup3\n        /* \"#utility.yul\":8430:8433   */\n      dup3\n        /* \"#utility.yul\":8423:8442   */\n      mstore\n        /* \"#utility.yul\":8475:8479   */\n      0x20\n        /* \"#utility.yul\":8470:8473   */\n      dup3\n        /* \"#utility.yul\":8466:8480   */\n      add\n        /* \"#utility.yul\":8451:8480   */\n      swap1\n      pop\n        /* \"#utility.yul\":8318:8486   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8492:8606   */\n    tag_228:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8612:8974   */\n    tag_229:\n        /* \"#utility.yul\":8753:8756   */\n      0x00\n        /* \"#utility.yul\":8774:8839   */\n      tag_342\n        /* \"#utility.yul\":8837:8838   */\n      0x00\n        /* \"#utility.yul\":8832:8835   */\n      dup4\n        /* \"#utility.yul\":8774:8839   */\n      tag_227\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":8767:8839   */\n      swap2\n      pop\n        /* \"#utility.yul\":8848:8941   */\n      tag_343\n        /* \"#utility.yul\":8937:8940   */\n      dup3\n        /* \"#utility.yul\":8848:8941   */\n      tag_228\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":8966:8967   */\n      0x00\n        /* \"#utility.yul\":8961:8964   */\n      dup3\n        /* \"#utility.yul\":8957:8968   */\n      add\n        /* \"#utility.yul\":8950:8968   */\n      swap1\n      pop\n        /* \"#utility.yul\":8612:8974   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8980:9827   */\n    tag_103:\n        /* \"#utility.yul\":9251:9255   */\n      0x00\n        /* \"#utility.yul\":9289:9292   */\n      0xa0\n        /* \"#utility.yul\":9278:9287   */\n      dup3\n        /* \"#utility.yul\":9274:9293   */\n      add\n        /* \"#utility.yul\":9266:9293   */\n      swap1\n      pop\n        /* \"#utility.yul\":9303:9374   */\n      tag_345\n        /* \"#utility.yul\":9371:9372   */\n      0x00\n        /* \"#utility.yul\":9360:9369   */\n      dup4\n        /* \"#utility.yul\":9356:9373   */\n      add\n        /* \"#utility.yul\":9347:9353   */\n      dup8\n        /* \"#utility.yul\":9303:9374   */\n      tag_208\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":9384:9456   */\n      tag_346\n        /* \"#utility.yul\":9452:9454   */\n      0x20\n        /* \"#utility.yul\":9441:9450   */\n      dup4\n        /* \"#utility.yul\":9437:9455   */\n      add\n        /* \"#utility.yul\":9428:9434   */\n      dup7\n        /* \"#utility.yul\":9384:9456   */\n      tag_208\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":9466:9538   */\n      tag_347\n        /* \"#utility.yul\":9534:9536   */\n      0x40\n        /* \"#utility.yul\":9523:9532   */\n      dup4\n        /* \"#utility.yul\":9519:9537   */\n      add\n        /* \"#utility.yul\":9510:9516   */\n      dup6\n        /* \"#utility.yul\":9466:9538   */\n      tag_198\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":9548:9614   */\n      tag_348\n        /* \"#utility.yul\":9610:9612   */\n      0x60\n        /* \"#utility.yul\":9599:9608   */\n      dup4\n        /* \"#utility.yul\":9595:9613   */\n      add\n        /* \"#utility.yul\":9586:9592   */\n      dup5\n        /* \"#utility.yul\":9548:9614   */\n      tag_207\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":9662:9671   */\n      dup2\n        /* \"#utility.yul\":9656:9660   */\n      dup2\n        /* \"#utility.yul\":9652:9672   */\n      sub\n        /* \"#utility.yul\":9646:9649   */\n      0x80\n        /* \"#utility.yul\":9635:9644   */\n      dup4\n        /* \"#utility.yul\":9631:9650   */\n      add\n        /* \"#utility.yul\":9624:9673   */\n      mstore\n        /* \"#utility.yul\":9690:9820   */\n      tag_349\n        /* \"#utility.yul\":9815:9819   */\n      dup2\n        /* \"#utility.yul\":9690:9820   */\n      tag_229\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":9682:9820   */\n      swap1\n      pop\n        /* \"#utility.yul\":8980:9827   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9833:9980   */\n    tag_230:\n        /* \"#utility.yul\":9934:9945   */\n      0x00\n        /* \"#utility.yul\":9971:9974   */\n      dup2\n        /* \"#utility.yul\":9956:9974   */\n      swap1\n      pop\n        /* \"#utility.yul\":9833:9980   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9986:10384   */\n    tag_231:\n        /* \"#utility.yul\":10145:10148   */\n      0x00\n        /* \"#utility.yul\":10166:10249   */\n      tag_352\n        /* \"#utility.yul\":10247:10248   */\n      0x00\n        /* \"#utility.yul\":10242:10245   */\n      dup4\n        /* \"#utility.yul\":10166:10249   */\n      tag_230\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":10159:10249   */\n      swap2\n      pop\n        /* \"#utility.yul\":10258:10351   */\n      tag_353\n        /* \"#utility.yul\":10347:10350   */\n      dup3\n        /* \"#utility.yul\":10258:10351   */\n      tag_228\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":10376:10377   */\n      0x00\n        /* \"#utility.yul\":10371:10374   */\n      dup3\n        /* \"#utility.yul\":10367:10378   */\n      add\n        /* \"#utility.yul\":10360:10378   */\n      swap1\n      pop\n        /* \"#utility.yul\":9986:10384   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10390:10769   */\n    tag_115:\n        /* \"#utility.yul\":10574:10577   */\n      0x00\n        /* \"#utility.yul\":10596:10743   */\n      tag_355\n        /* \"#utility.yul\":10739:10742   */\n      dup3\n        /* \"#utility.yul\":10596:10743   */\n      tag_231\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":10589:10743   */\n      swap2\n      pop\n        /* \"#utility.yul\":10760:10763   */\n      dup2\n        /* \"#utility.yul\":10753:10763   */\n      swap1\n      pop\n        /* \"#utility.yul\":10390:10769   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10775:10944   */\n    tag_232:\n        /* \"#utility.yul\":10859:10870   */\n      0x00\n        /* \"#utility.yul\":10893:10899   */\n      dup3\n        /* \"#utility.yul\":10888:10891   */\n      dup3\n        /* \"#utility.yul\":10881:10900   */\n      mstore\n        /* \"#utility.yul\":10933:10937   */\n      0x20\n        /* \"#utility.yul\":10928:10931   */\n      dup3\n        /* \"#utility.yul\":10924:10938   */\n      add\n        /* \"#utility.yul\":10909:10938   */\n      swap1\n      pop\n        /* \"#utility.yul\":10775:10944   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10950:11106   */\n    tag_233:\n        /* \"#utility.yul\":11090:11098   */\n      0x4661696c65640000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11086:11087   */\n      0x00\n        /* \"#utility.yul\":11078:11084   */\n      dup3\n        /* \"#utility.yul\":11074:11088   */\n      add\n        /* \"#utility.yul\":11067:11099   */\n      mstore\n        /* \"#utility.yul\":10950:11106   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11112:11477   */\n    tag_234:\n        /* \"#utility.yul\":11254:11257   */\n      0x00\n        /* \"#utility.yul\":11275:11341   */\n      tag_359\n        /* \"#utility.yul\":11339:11340   */\n      0x06\n        /* \"#utility.yul\":11334:11337   */\n      dup4\n        /* \"#utility.yul\":11275:11341   */\n      tag_232\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":11268:11341   */\n      swap2\n      pop\n        /* \"#utility.yul\":11350:11443   */\n      tag_360\n        /* \"#utility.yul\":11439:11442   */\n      dup3\n        /* \"#utility.yul\":11350:11443   */\n      tag_233\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":11468:11470   */\n      0x20\n        /* \"#utility.yul\":11463:11466   */\n      dup3\n        /* \"#utility.yul\":11459:11471   */\n      add\n        /* \"#utility.yul\":11452:11471   */\n      swap1\n      pop\n        /* \"#utility.yul\":11112:11477   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11483:11902   */\n    tag_121:\n        /* \"#utility.yul\":11649:11653   */\n      0x00\n        /* \"#utility.yul\":11687:11689   */\n      0x20\n        /* \"#utility.yul\":11676:11685   */\n      dup3\n        /* \"#utility.yul\":11672:11690   */\n      add\n        /* \"#utility.yul\":11664:11690   */\n      swap1\n      pop\n        /* \"#utility.yul\":11736:11745   */\n      dup2\n        /* \"#utility.yul\":11730:11734   */\n      dup2\n        /* \"#utility.yul\":11726:11746   */\n      sub\n        /* \"#utility.yul\":11722:11723   */\n      0x00\n        /* \"#utility.yul\":11711:11720   */\n      dup4\n        /* \"#utility.yul\":11707:11724   */\n      add\n        /* \"#utility.yul\":11700:11747   */\n      mstore\n        /* \"#utility.yul\":11764:11895   */\n      tag_362\n        /* \"#utility.yul\":11890:11894   */\n      dup2\n        /* \"#utility.yul\":11764:11895   */\n      tag_234\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":11756:11895   */\n      swap1\n      pop\n        /* \"#utility.yul\":11483:11902   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11908:12006   */\n    tag_235:\n        /* \"#utility.yul\":11959:11965   */\n      0x00\n        /* \"#utility.yul\":11993:11998   */\n      dup2\n        /* \"#utility.yul\":11987:11999   */\n      mload\n        /* \"#utility.yul\":11977:11999   */\n      swap1\n      pop\n        /* \"#utility.yul\":11908:12006   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12012:12151   */\n    tag_236:\n        /* \"#utility.yul\":12101:12107   */\n      dup3\n        /* \"#utility.yul\":12096:12099   */\n      dup2\n        /* \"#utility.yul\":12091:12094   */\n      dup4\n        /* \"#utility.yul\":12085:12108   */\n      mcopy\n        /* \"#utility.yul\":12142:12143   */\n      0x00\n        /* \"#utility.yul\":12133:12139   */\n      dup4\n        /* \"#utility.yul\":12128:12131   */\n      dup4\n        /* \"#utility.yul\":12124:12140   */\n      add\n        /* \"#utility.yul\":12117:12144   */\n      mstore\n        /* \"#utility.yul\":12012:12151   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12157:12530   */\n    tag_237:\n        /* \"#utility.yul\":12243:12246   */\n      0x00\n        /* \"#utility.yul\":12271:12309   */\n      tag_366\n        /* \"#utility.yul\":12303:12308   */\n      dup3\n        /* \"#utility.yul\":12271:12309   */\n      tag_235\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":12325:12395   */\n      tag_367\n        /* \"#utility.yul\":12388:12394   */\n      dup2\n        /* \"#utility.yul\":12383:12386   */\n      dup6\n        /* \"#utility.yul\":12325:12395   */\n      tag_227\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":12318:12395   */\n      swap4\n      pop\n        /* \"#utility.yul\":12404:12469   */\n      tag_368\n        /* \"#utility.yul\":12462:12468   */\n      dup2\n        /* \"#utility.yul\":12457:12460   */\n      dup6\n        /* \"#utility.yul\":12450:12454   */\n      0x20\n        /* \"#utility.yul\":12443:12448   */\n      dup7\n        /* \"#utility.yul\":12439:12455   */\n      add\n        /* \"#utility.yul\":12404:12469   */\n      tag_236\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":12494:12523   */\n      tag_369\n        /* \"#utility.yul\":12516:12522   */\n      dup2\n        /* \"#utility.yul\":12494:12523   */\n      tag_218\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":12489:12492   */\n      dup5\n        /* \"#utility.yul\":12485:12524   */\n      add\n        /* \"#utility.yul\":12478:12524   */\n      swap2\n      pop\n        /* \"#utility.yul\":12247:12530   */\n      pop\n        /* \"#utility.yul\":12157:12530   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12536:13275   */\n    tag_160:\n        /* \"#utility.yul\":12753:12757   */\n      0x00\n        /* \"#utility.yul\":12791:12794   */\n      0xa0\n        /* \"#utility.yul\":12780:12789   */\n      dup3\n        /* \"#utility.yul\":12776:12795   */\n      add\n        /* \"#utility.yul\":12768:12795   */\n      swap1\n      pop\n        /* \"#utility.yul\":12805:12876   */\n      tag_371\n        /* \"#utility.yul\":12873:12874   */\n      0x00\n        /* \"#utility.yul\":12862:12871   */\n      dup4\n        /* \"#utility.yul\":12858:12875   */\n      add\n        /* \"#utility.yul\":12849:12855   */\n      dup9\n        /* \"#utility.yul\":12805:12876   */\n      tag_208\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":12886:12958   */\n      tag_372\n        /* \"#utility.yul\":12954:12956   */\n      0x20\n        /* \"#utility.yul\":12943:12952   */\n      dup4\n        /* \"#utility.yul\":12939:12957   */\n      add\n        /* \"#utility.yul\":12930:12936   */\n      dup8\n        /* \"#utility.yul\":12886:12958   */\n      tag_208\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":12968:13040   */\n      tag_373\n        /* \"#utility.yul\":13036:13038   */\n      0x40\n        /* \"#utility.yul\":13025:13034   */\n      dup4\n        /* \"#utility.yul\":13021:13039   */\n      add\n        /* \"#utility.yul\":13012:13018   */\n      dup7\n        /* \"#utility.yul\":12968:13040   */\n      tag_198\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":13050:13116   */\n      tag_374\n        /* \"#utility.yul\":13112:13114   */\n      0x60\n        /* \"#utility.yul\":13101:13110   */\n      dup4\n        /* \"#utility.yul\":13097:13115   */\n      add\n        /* \"#utility.yul\":13088:13094   */\n      dup6\n        /* \"#utility.yul\":13050:13116   */\n      tag_207\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":13164:13173   */\n      dup2\n        /* \"#utility.yul\":13158:13162   */\n      dup2\n        /* \"#utility.yul\":13154:13174   */\n      sub\n        /* \"#utility.yul\":13148:13151   */\n      0x80\n        /* \"#utility.yul\":13137:13146   */\n      dup4\n        /* \"#utility.yul\":13133:13152   */\n      add\n        /* \"#utility.yul\":13126:13175   */\n      mstore\n        /* \"#utility.yul\":13192:13268   */\n      tag_375\n        /* \"#utility.yul\":13263:13267   */\n      dup2\n        /* \"#utility.yul\":13254:13260   */\n      dup5\n        /* \"#utility.yul\":13192:13268   */\n      tag_237\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":13184:13268   */\n      swap1\n      pop\n        /* \"#utility.yul\":12536:13275   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220efc774138bd4e9619769e43d00e4c44c1c8f8f32088ceefac19347a2822e756064736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_5158": {
									"entryPoint": null,
									"id": 5158,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_5474": {
									"entryPoint": null,
									"id": 5474,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_5605": {
									"entryPoint": null,
									"id": 5605,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_5570": {
									"entryPoint": 342,
									"id": 5570,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 609,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 629,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 672,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 687,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 570,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 539,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 535,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 587,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1551:16",
										"nodeType": "YulBlock",
										"src": "0:1551:16",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:16",
													"nodeType": "YulBlock",
													"src": "47:35:16",
													"statements": [
														{
															"nativeSrc": "57:19:16",
															"nodeType": "YulAssignment",
															"src": "57:19:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:16",
																		"nodeType": "YulLiteral",
																		"src": "73:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:16"
																},
																"nativeSrc": "67:9:16",
																"nodeType": "YulFunctionCall",
																"src": "67:9:16"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:16"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:16",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:16",
														"nodeType": "YulTypedName",
														"src": "40:6:16",
														"type": ""
													}
												],
												"src": "7:75:16"
											},
											{
												"body": {
													"nativeSrc": "177:28:16",
													"nodeType": "YulBlock",
													"src": "177:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:16",
																		"nodeType": "YulLiteral",
																		"src": "194:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:16",
																		"nodeType": "YulLiteral",
																		"src": "197:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:16"
																},
																"nativeSrc": "187:12:16",
																"nodeType": "YulFunctionCall",
																"src": "187:12:16"
															},
															"nativeSrc": "187:12:16",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:16"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:16",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:16"
											},
											{
												"body": {
													"nativeSrc": "300:28:16",
													"nodeType": "YulBlock",
													"src": "300:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:16",
																		"nodeType": "YulLiteral",
																		"src": "317:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:16",
																		"nodeType": "YulLiteral",
																		"src": "320:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:16"
																},
																"nativeSrc": "310:12:16",
																"nodeType": "YulFunctionCall",
																"src": "310:12:16"
															},
															"nativeSrc": "310:12:16",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:16"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:16",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:16"
											},
											{
												"body": {
													"nativeSrc": "379:81:16",
													"nodeType": "YulBlock",
													"src": "379:81:16",
													"statements": [
														{
															"nativeSrc": "389:65:16",
															"nodeType": "YulAssignment",
															"src": "389:65:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:16",
																		"nodeType": "YulLiteral",
																		"src": "411:42:16",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:16"
																},
																"nativeSrc": "400:54:16",
																"nodeType": "YulFunctionCall",
																"src": "400:54:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:16",
														"nodeType": "YulTypedName",
														"src": "361:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:16",
														"nodeType": "YulTypedName",
														"src": "371:7:16",
														"type": ""
													}
												],
												"src": "334:126:16"
											},
											{
												"body": {
													"nativeSrc": "511:51:16",
													"nodeType": "YulBlock",
													"src": "511:51:16",
													"statements": [
														{
															"nativeSrc": "521:35:16",
															"nodeType": "YulAssignment",
															"src": "521:35:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:16"
																},
																"nativeSrc": "532:24:16",
																"nodeType": "YulFunctionCall",
																"src": "532:24:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:16",
														"nodeType": "YulTypedName",
														"src": "493:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:16",
														"nodeType": "YulTypedName",
														"src": "503:7:16",
														"type": ""
													}
												],
												"src": "466:96:16"
											},
											{
												"body": {
													"nativeSrc": "611:79:16",
													"nodeType": "YulBlock",
													"src": "611:79:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:16",
																"nodeType": "YulBlock",
																"src": "668:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:16",
																					"nodeType": "YulLiteral",
																					"src": "677:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:16",
																					"nodeType": "YulLiteral",
																					"src": "680:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:16"
																			},
																			"nativeSrc": "670:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:16"
																		},
																		"nativeSrc": "670:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:16",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:16"
																				},
																				"nativeSrc": "641:24:16",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:16"
																		},
																		"nativeSrc": "631:35:16",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:16"
																},
																"nativeSrc": "624:43:16",
																"nodeType": "YulFunctionCall",
																"src": "624:43:16"
															},
															"nativeSrc": "621:63:16",
															"nodeType": "YulIf",
															"src": "621:63:16"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:16",
														"nodeType": "YulTypedName",
														"src": "604:5:16",
														"type": ""
													}
												],
												"src": "568:122:16"
											},
											{
												"body": {
													"nativeSrc": "759:80:16",
													"nodeType": "YulBlock",
													"src": "759:80:16",
													"statements": [
														{
															"nativeSrc": "769:22:16",
															"nodeType": "YulAssignment",
															"src": "769:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:16"
																},
																"nativeSrc": "778:13:16",
																"nodeType": "YulFunctionCall",
																"src": "778:13:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:16",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:16"
																},
																"nativeSrc": "800:33:16",
																"nodeType": "YulFunctionCall",
																"src": "800:33:16"
															},
															"nativeSrc": "800:33:16",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:16"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:16",
														"nodeType": "YulTypedName",
														"src": "737:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:16",
														"nodeType": "YulTypedName",
														"src": "745:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:16",
														"nodeType": "YulTypedName",
														"src": "753:5:16",
														"type": ""
													}
												],
												"src": "696:143:16"
											},
											{
												"body": {
													"nativeSrc": "922:274:16",
													"nodeType": "YulBlock",
													"src": "922:274:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:16",
																"nodeType": "YulBlock",
																"src": "968:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:16"
																			},
																			"nativeSrc": "970:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:16"
																		},
																		"nativeSrc": "970:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:16"
																		},
																		"nativeSrc": "939:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:16",
																		"nodeType": "YulLiteral",
																		"src": "964:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:16"
																},
																"nativeSrc": "935:32:16",
																"nodeType": "YulFunctionCall",
																"src": "935:32:16"
															},
															"nativeSrc": "932:119:16",
															"nodeType": "YulIf",
															"src": "932:119:16"
														},
														{
															"nativeSrc": "1061:128:16",
															"nodeType": "YulBlock",
															"src": "1061:128:16",
															"statements": [
																{
																	"nativeSrc": "1076:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:16",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:16",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:16",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:16"
																				},
																				"nativeSrc": "1147:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:16",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:16"
																		},
																		"nativeSrc": "1115:64:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:16",
														"nodeType": "YulTypedName",
														"src": "892:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:16",
														"nodeType": "YulTypedName",
														"src": "903:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:16",
														"nodeType": "YulTypedName",
														"src": "915:6:16",
														"type": ""
													}
												],
												"src": "845:351:16"
											},
											{
												"body": {
													"nativeSrc": "1267:53:16",
													"nodeType": "YulBlock",
													"src": "1267:53:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1284:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "1284:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1307:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "1307:5:16"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1289:17:16",
																			"nodeType": "YulIdentifier",
																			"src": "1289:17:16"
																		},
																		"nativeSrc": "1289:24:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1289:24:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1277:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1277:6:16"
																},
																"nativeSrc": "1277:37:16",
																"nodeType": "YulFunctionCall",
																"src": "1277:37:16"
															},
															"nativeSrc": "1277:37:16",
															"nodeType": "YulExpressionStatement",
															"src": "1277:37:16"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1202:118:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1255:5:16",
														"nodeType": "YulTypedName",
														"src": "1255:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1262:3:16",
														"nodeType": "YulTypedName",
														"src": "1262:3:16",
														"type": ""
													}
												],
												"src": "1202:118:16"
											},
											{
												"body": {
													"nativeSrc": "1424:124:16",
													"nodeType": "YulBlock",
													"src": "1424:124:16",
													"statements": [
														{
															"nativeSrc": "1434:26:16",
															"nodeType": "YulAssignment",
															"src": "1434:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1446:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "1446:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1457:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1457:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1442:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1442:3:16"
																},
																"nativeSrc": "1442:18:16",
																"nodeType": "YulFunctionCall",
																"src": "1442:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1434:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "1434:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1514:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "1514:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1527:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "1527:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1538:1:16",
																				"nodeType": "YulLiteral",
																				"src": "1538:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1523:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1523:3:16"
																		},
																		"nativeSrc": "1523:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1523:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1470:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "1470:43:16"
																},
																"nativeSrc": "1470:71:16",
																"nodeType": "YulFunctionCall",
																"src": "1470:71:16"
															},
															"nativeSrc": "1470:71:16",
															"nodeType": "YulExpressionStatement",
															"src": "1470:71:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1326:222:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1396:9:16",
														"nodeType": "YulTypedName",
														"src": "1396:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1408:6:16",
														"nodeType": "YulTypedName",
														"src": "1408:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1419:4:16",
														"nodeType": "YulTypedName",
														"src": "1419:4:16",
														"type": ""
													}
												],
												"src": "1326:222:16"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 16,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405269010f0cf064dd5920000060035534801561001d575f5ffd5b506040516115c53803806115c5833981810160405281019061003f9190610275565b335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100b0575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100a791906102af565b60405180910390fd5b6100bf8161015660201b60201c565b505f5f60146101000a81548160ff0219169083151502179055508060025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507ff9563f2ff8321c25ec4ee92f781a8d3ebc72f854daa4bf9177f3886b6ca1f7e18160405161014891906102af565b60405180910390a1506102c8565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6102448261021b565b9050919050565b6102548161023a565b811461025e575f5ffd5b50565b5f8151905061026f8161024b565b92915050565b5f6020828403121561028a57610289610217565b5b5f61029784828501610261565b91505092915050565b6102a98161023a565b82525050565b5f6020820190506102c25f8301846102a0565b92915050565b6112f0806102d55f395ff3fe608060405234801561000f575f5ffd5b5060043610610114575f3560e01c80635c975abb116100a0578063af66ef651161006f578063af66ef6514610270578063b8de4343146102a0578063c884ef83146102bc578063f2fde38b146102ec578063fb2228fe1461030857610114565b80635c975abb14610220578063715018a61461023e5780638456cb59146102485780638da5cb5b1461025257610114565b80633ccfd60b116100e75780633ccfd60b146101a25780633f4ba83a146101ac5780634875590a146101b657806353a4cff4146101d457806356a6d9ef1461020457610114565b806312065fe01461011857806316ada547146101365780631e83409a14610154578063205306b414610184575b5f5ffd5b610120610326565b60405161012d9190610c9c565b60405180910390f35b61013e61032d565b60405161014b9190610c9c565b60405180910390f35b61016e60048036038101906101699190610d20565b610334565b60405161017b9190610d65565b60405180910390f35b61018c6105d1565b6040516101999190610c9c565b60405180910390f35b6101aa6105d7565b005b6101b4610696565b005b6101be6106a8565b6040516101cb9190610d8d565b60405180910390f35b6101ee60048036038101906101e99190610dd0565b6106cd565b6040516101fb9190610d65565b60405180910390f35b61021e60048036038101906102199190610e36565b61071d565b005b6102286107d2565b6040516102359190610d65565b60405180910390f35b6102466107e7565b005b6102506107fa565b005b61025a61080c565b6040516102679190610d8d565b60405180910390f35b61028a60048036038101906102859190610d20565b610833565b6040516102979190610d65565b60405180910390f35b6102ba60048036038101906102b59190610fda565b6108bc565b005b6102d660048036038101906102d19190610d20565b610939565b6040516102e39190610c9c565b60405180910390f35b61030660048036038101906103019190610d20565b61094e565b005b6103106109d2565b60405161031d9190610c9c565b60405180910390f35b5f47905090565b5f42905090565b5f61033d6109dd565b610345610a64565b5f60045f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054111561049e5760045f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205460025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231846040518263ffffffff1660e01b81526004016104229190610d8d565b602060405180830381865afa15801561043d573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104619190611081565b6040517fbbae19e60000000000000000000000000000000000000000000000000000000081526004016104959291906110ac565b60405180910390fd5b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663760d9bba308460035460016040518563ffffffff1660e01b81526004016105019493929190611106565b5f604051808303815f87803b158015610518575f5ffd5b505af115801561052a573d5f5f3e3d5ffd5b505050506105386001610aa5565b4260045f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff167fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a426040516105c09190610c9c565b60405180910390a260019050919050565b60035481565b6105df6109dd565b5f4790505f6105ec61080c565b73ffffffffffffffffffffffffffffffffffffffff168260405161060f90611186565b5f6040518083038185875af1925050503d805f8114610649576040519150601f19603f3d011682016040523d82523d5f602084013e61064e565b606091505b5050905080610692576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610689906111f4565b60405180910390fd5b5050565b61069e6109dd565b6106a6610ab9565b565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f6106d66109dd565b816003819055507fccc2dc361dc3b02936a3d99c4cd064de1bbbb59a03aaad640d302e18f7aacdfb8260405161070c9190610c9c565b60405180910390a160019050919050565b6107256109dd565b5f8273ffffffffffffffffffffffffffffffffffffffff168260405161074a90611186565b5f6040518083038185875af1925050503d805f8114610784576040519150601f19603f3d011682016040523d82523d5f602084013e610789565b606091505b50509050806107cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c4906111f4565b60405180910390fd5b505050565b5f5f60149054906101000a900460ff16905090565b6107ef6109dd565b6107f85f610b1a565b565b6108026109dd565b61080a610bdb565b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f61083c6109dd565b8160025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507ff9563f2ff8321c25ec4ee92f781a8d3ebc72f854daa4bf9177f3886b6ca1f7e1826040516108ab9190610d8d565b60405180910390a160019050919050565b6108c46109dd565b8473ffffffffffffffffffffffffffffffffffffffff1663760d9bba30868686866040518663ffffffff1660e01b8152600401610905959493929190611262565b5f604051808303815f87803b15801561091c575f5ffd5b505af115801561092e573d5f5f3e3d5ffd5b505050505050505050565b6004602052805f5260405f205f915090505481565b6109566109dd565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109c6575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016109bd9190610d8d565b60405180910390fd5b6109cf81610b1a565b50565b6001805f0154905081565b6109e5610c3d565b73ffffffffffffffffffffffffffffffffffffffff16610a0361080c565b73ffffffffffffffffffffffffffffffffffffffff1614610a6257610a26610c3d565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610a599190610d8d565b60405180910390fd5b565b610a6c6107d2565b15610aa3576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6001815f015f828254019250508190555050565b610ac1610c44565b5f5f60146101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa610b03610c3d565b604051610b109190610d8d565b60405180910390a1565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610be3610a64565b60015f60146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610c26610c3d565b604051610c339190610d8d565b60405180910390a1565b5f33905090565b610c4c6107d2565b610c82576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f819050919050565b610c9681610c84565b82525050565b5f602082019050610caf5f830184610c8d565b92915050565b5f604051905090565b5f5ffd5b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610cef82610cc6565b9050919050565b610cff81610ce5565b8114610d09575f5ffd5b50565b5f81359050610d1a81610cf6565b92915050565b5f60208284031215610d3557610d34610cbe565b5b5f610d4284828501610d0c565b91505092915050565b5f8115159050919050565b610d5f81610d4b565b82525050565b5f602082019050610d785f830184610d56565b92915050565b610d8781610ce5565b82525050565b5f602082019050610da05f830184610d7e565b92915050565b610daf81610c84565b8114610db9575f5ffd5b50565b5f81359050610dca81610da6565b92915050565b5f60208284031215610de557610de4610cbe565b5b5f610df284828501610dbc565b91505092915050565b5f610e0582610cc6565b9050919050565b610e1581610dfb565b8114610e1f575f5ffd5b50565b5f81359050610e3081610e0c565b92915050565b5f5f60408385031215610e4c57610e4b610cbe565b5b5f610e5985828601610e22565b9250506020610e6a85828601610dbc565b9150509250929050565b610e7d81610d4b565b8114610e87575f5ffd5b50565b5f81359050610e9881610e74565b92915050565b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b610eec82610ea6565b810181811067ffffffffffffffff82111715610f0b57610f0a610eb6565b5b80604052505050565b5f610f1d610cb5565b9050610f298282610ee3565b919050565b5f67ffffffffffffffff821115610f4857610f47610eb6565b5b610f5182610ea6565b9050602081019050919050565b828183375f83830152505050565b5f610f7e610f7984610f2e565b610f14565b905082815260208101848484011115610f9a57610f99610ea2565b5b610fa5848285610f5e565b509392505050565b5f82601f830112610fc157610fc0610e9e565b5b8135610fd1848260208601610f6c565b91505092915050565b5f5f5f5f5f60a08688031215610ff357610ff2610cbe565b5b5f61100088828901610d0c565b955050602061101188828901610d0c565b945050604061102288828901610dbc565b935050606061103388828901610e8a565b925050608086013567ffffffffffffffff81111561105457611053610cc2565b5b61106088828901610fad565b9150509295509295909350565b5f8151905061107b81610da6565b92915050565b5f6020828403121561109657611095610cbe565b5b5f6110a38482850161106d565b91505092915050565b5f6040820190506110bf5f830185610c8d565b6110cc6020830184610c8d565b9392505050565b5f82825260208201905092915050565b50565b5f6110f15f836110d3565b91506110fc826110e3565b5f82019050919050565b5f60a0820190506111195f830187610d7e565b6111266020830186610d7e565b6111336040830185610c8d565b6111406060830184610d56565b8181036080830152611151816110e6565b905095945050505050565b5f81905092915050565b5f6111715f8361115c565b915061117c826110e3565b5f82019050919050565b5f61119082611166565b9150819050919050565b5f82825260208201905092915050565b7f4661696c656400000000000000000000000000000000000000000000000000005f82015250565b5f6111de60068361119a565b91506111e9826111aa565b602082019050919050565b5f6020820190508181035f83015261120b816111d2565b9050919050565b5f81519050919050565b8281835e5f83830152505050565b5f61123482611212565b61123e81856110d3565b935061124e81856020860161121c565b61125781610ea6565b840191505092915050565b5f60a0820190506112755f830188610d7e565b6112826020830187610d7e565b61128f6040830186610c8d565b61129c6060830185610d56565b81810360808301526112ae818461122a565b9050969550505050505056fea2646970667358221220efc774138bd4e9619769e43d00e4c44c1c8f8f32088ceefac19347a2822e756064736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH10 0x10F0CF064DD59200000 PUSH1 0x3 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x15C5 CODESIZE SUB DUP1 PUSH2 0x15C5 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x3F SWAP2 SWAP1 PUSH2 0x275 JUMP JUMPDEST CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB0 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA7 SWAP2 SWAP1 PUSH2 0x2AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBF DUP2 PUSH2 0x156 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH0 PUSH0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xF9563F2FF8321C25EC4EE92F781A8D3EBC72F854DAA4BF9177F3886B6CA1F7E1 DUP2 PUSH1 0x40 MLOAD PUSH2 0x148 SWAP2 SWAP1 PUSH2 0x2AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH2 0x2C8 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x244 DUP3 PUSH2 0x21B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x254 DUP2 PUSH2 0x23A JUMP JUMPDEST DUP2 EQ PUSH2 0x25E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x26F DUP2 PUSH2 0x24B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x28A JUMPI PUSH2 0x289 PUSH2 0x217 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x297 DUP5 DUP3 DUP6 ADD PUSH2 0x261 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A9 DUP2 PUSH2 0x23A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C2 PUSH0 DUP4 ADD DUP5 PUSH2 0x2A0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12F0 DUP1 PUSH2 0x2D5 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x114 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5C975ABB GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xAF66EF65 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xAF66EF65 EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0xB8DE4343 EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0xC884EF83 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2EC JUMPI DUP1 PUSH4 0xFB2228FE EQ PUSH2 0x308 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x252 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x3CCFD60B GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x4875590A EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x53A4CFF4 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x56A6D9EF EQ PUSH2 0x204 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x16ADA547 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x1E83409A EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0x205306B4 EQ PUSH2 0x184 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x120 PUSH2 0x326 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12D SWAP2 SWAP1 PUSH2 0xC9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13E PUSH2 0x32D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14B SWAP2 SWAP1 PUSH2 0xC9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x169 SWAP2 SWAP1 PUSH2 0xD20 JUMP JUMPDEST PUSH2 0x334 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17B SWAP2 SWAP1 PUSH2 0xD65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18C PUSH2 0x5D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x199 SWAP2 SWAP1 PUSH2 0xC9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AA PUSH2 0x5D7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B4 PUSH2 0x696 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BE PUSH2 0x6A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CB SWAP2 SWAP1 PUSH2 0xD8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0xDD0 JUMP JUMPDEST PUSH2 0x6CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xD65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x219 SWAP2 SWAP1 PUSH2 0xE36 JUMP JUMPDEST PUSH2 0x71D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x228 PUSH2 0x7D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x235 SWAP2 SWAP1 PUSH2 0xD65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x246 PUSH2 0x7E7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x250 PUSH2 0x7FA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25A PUSH2 0x80C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x267 SWAP2 SWAP1 PUSH2 0xD8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x285 SWAP2 SWAP1 PUSH2 0xD20 JUMP JUMPDEST PUSH2 0x833 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x297 SWAP2 SWAP1 PUSH2 0xD65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B5 SWAP2 SWAP1 PUSH2 0xFDA JUMP JUMPDEST PUSH2 0x8BC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D1 SWAP2 SWAP1 PUSH2 0xD20 JUMP JUMPDEST PUSH2 0x939 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E3 SWAP2 SWAP1 PUSH2 0xC9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x306 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x301 SWAP2 SWAP1 PUSH2 0xD20 JUMP JUMPDEST PUSH2 0x94E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x310 PUSH2 0x9D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31D SWAP2 SWAP1 PUSH2 0xC9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 TIMESTAMP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x33D PUSH2 0x9DD JUMP JUMPDEST PUSH2 0x345 PUSH2 0xA64 JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT ISZERO PUSH2 0x49E JUMPI PUSH1 0x4 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x422 SWAP2 SWAP1 PUSH2 0xD8D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x43D JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x461 SWAP2 SWAP1 PUSH2 0x1081 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xBBAE19E600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x495 SWAP3 SWAP2 SWAP1 PUSH2 0x10AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x760D9BBA ADDRESS DUP5 PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x501 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1106 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x518 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x52A JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH2 0x538 PUSH1 0x1 PUSH2 0xAA5 JUMP JUMPDEST TIMESTAMP PUSH1 0x4 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD8138F8A3F377C5259CA548E70E4C2DE94F129F5A11036A15B69513CBA2B426A TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x5C0 SWAP2 SWAP1 PUSH2 0xC9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x5DF PUSH2 0x9DD JUMP JUMPDEST PUSH0 SELFBALANCE SWAP1 POP PUSH0 PUSH2 0x5EC PUSH2 0x80C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x60F SWAP1 PUSH2 0x1186 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x649 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x64E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x692 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x689 SWAP1 PUSH2 0x11F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x69E PUSH2 0x9DD JUMP JUMPDEST PUSH2 0x6A6 PUSH2 0xAB9 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x6D6 PUSH2 0x9DD JUMP JUMPDEST DUP2 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH32 0xCCC2DC361DC3B02936A3D99C4CD064DE1BBBB59A03AAAD640D302E18F7AACDFB DUP3 PUSH1 0x40 MLOAD PUSH2 0x70C SWAP2 SWAP1 PUSH2 0xC9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x725 PUSH2 0x9DD JUMP JUMPDEST PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x74A SWAP1 PUSH2 0x1186 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x784 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x789 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x7CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C4 SWAP1 PUSH2 0x11F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7EF PUSH2 0x9DD JUMP JUMPDEST PUSH2 0x7F8 PUSH0 PUSH2 0xB1A JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x802 PUSH2 0x9DD JUMP JUMPDEST PUSH2 0x80A PUSH2 0xBDB JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x83C PUSH2 0x9DD JUMP JUMPDEST DUP2 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xF9563F2FF8321C25EC4EE92F781A8D3EBC72F854DAA4BF9177F3886B6CA1F7E1 DUP3 PUSH1 0x40 MLOAD PUSH2 0x8AB SWAP2 SWAP1 PUSH2 0xD8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8C4 PUSH2 0x9DD JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x760D9BBA ADDRESS DUP7 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x905 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1262 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x91C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x92E JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x956 PUSH2 0x9DD JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9C6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9BD SWAP2 SWAP1 PUSH2 0xD8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9CF DUP2 PUSH2 0xB1A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH0 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0x9E5 PUSH2 0xC3D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA03 PUSH2 0x80C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA62 JUMPI PUSH2 0xA26 PUSH2 0xC3D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA59 SWAP2 SWAP1 PUSH2 0xD8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0xA6C PUSH2 0x7D2 JUMP JUMPDEST ISZERO PUSH2 0xAA3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xAC1 PUSH2 0xC44 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0xB03 PUSH2 0xC3D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB10 SWAP2 SWAP1 PUSH2 0xD8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xBE3 PUSH2 0xA64 JUMP JUMPDEST PUSH1 0x1 PUSH0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xC26 PUSH2 0xC3D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC33 SWAP2 SWAP1 PUSH2 0xD8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC4C PUSH2 0x7D2 JUMP JUMPDEST PUSH2 0xC82 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC96 DUP2 PUSH2 0xC84 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCAF PUSH0 DUP4 ADD DUP5 PUSH2 0xC8D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCEF DUP3 PUSH2 0xCC6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCFF DUP2 PUSH2 0xCE5 JUMP JUMPDEST DUP2 EQ PUSH2 0xD09 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD1A DUP2 PUSH2 0xCF6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD35 JUMPI PUSH2 0xD34 PUSH2 0xCBE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD42 DUP5 DUP3 DUP6 ADD PUSH2 0xD0C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD5F DUP2 PUSH2 0xD4B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD78 PUSH0 DUP4 ADD DUP5 PUSH2 0xD56 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD87 DUP2 PUSH2 0xCE5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDA0 PUSH0 DUP4 ADD DUP5 PUSH2 0xD7E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDAF DUP2 PUSH2 0xC84 JUMP JUMPDEST DUP2 EQ PUSH2 0xDB9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDCA DUP2 PUSH2 0xDA6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDE5 JUMPI PUSH2 0xDE4 PUSH2 0xCBE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDF2 DUP5 DUP3 DUP6 ADD PUSH2 0xDBC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE05 DUP3 PUSH2 0xCC6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE15 DUP2 PUSH2 0xDFB JUMP JUMPDEST DUP2 EQ PUSH2 0xE1F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE30 DUP2 PUSH2 0xE0C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE4C JUMPI PUSH2 0xE4B PUSH2 0xCBE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE59 DUP6 DUP3 DUP7 ADD PUSH2 0xE22 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE6A DUP6 DUP3 DUP7 ADD PUSH2 0xDBC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xE7D DUP2 PUSH2 0xD4B JUMP JUMPDEST DUP2 EQ PUSH2 0xE87 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE98 DUP2 PUSH2 0xE74 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0xEEC DUP3 PUSH2 0xEA6 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xF0B JUMPI PUSH2 0xF0A PUSH2 0xEB6 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF1D PUSH2 0xCB5 JUMP JUMPDEST SWAP1 POP PUSH2 0xF29 DUP3 DUP3 PUSH2 0xEE3 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xF48 JUMPI PUSH2 0xF47 PUSH2 0xEB6 JUMP JUMPDEST JUMPDEST PUSH2 0xF51 DUP3 PUSH2 0xEA6 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF7E PUSH2 0xF79 DUP5 PUSH2 0xF2E JUMP JUMPDEST PUSH2 0xF14 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xF9A JUMPI PUSH2 0xF99 PUSH2 0xEA2 JUMP JUMPDEST JUMPDEST PUSH2 0xFA5 DUP5 DUP3 DUP6 PUSH2 0xF5E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xFC1 JUMPI PUSH2 0xFC0 PUSH2 0xE9E JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xFD1 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xF6C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xFF3 JUMPI PUSH2 0xFF2 PUSH2 0xCBE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1000 DUP9 DUP3 DUP10 ADD PUSH2 0xD0C JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1011 DUP9 DUP3 DUP10 ADD PUSH2 0xD0C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1022 DUP9 DUP3 DUP10 ADD PUSH2 0xDBC JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1033 DUP9 DUP3 DUP10 ADD PUSH2 0xE8A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1054 JUMPI PUSH2 0x1053 PUSH2 0xCC2 JUMP JUMPDEST JUMPDEST PUSH2 0x1060 DUP9 DUP3 DUP10 ADD PUSH2 0xFAD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x107B DUP2 PUSH2 0xDA6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1096 JUMPI PUSH2 0x1095 PUSH2 0xCBE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10A3 DUP5 DUP3 DUP6 ADD PUSH2 0x106D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x10BF PUSH0 DUP4 ADD DUP6 PUSH2 0xC8D JUMP JUMPDEST PUSH2 0x10CC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC8D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x10F1 PUSH0 DUP4 PUSH2 0x10D3 JUMP JUMPDEST SWAP2 POP PUSH2 0x10FC DUP3 PUSH2 0x10E3 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1119 PUSH0 DUP4 ADD DUP8 PUSH2 0xD7E JUMP JUMPDEST PUSH2 0x1126 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xD7E JUMP JUMPDEST PUSH2 0x1133 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xC8D JUMP JUMPDEST PUSH2 0x1140 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xD56 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1151 DUP2 PUSH2 0x10E6 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1171 PUSH0 DUP4 PUSH2 0x115C JUMP JUMPDEST SWAP2 POP PUSH2 0x117C DUP3 PUSH2 0x10E3 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1190 DUP3 PUSH2 0x1166 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4661696C65640000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x11DE PUSH1 0x6 DUP4 PUSH2 0x119A JUMP JUMPDEST SWAP2 POP PUSH2 0x11E9 DUP3 PUSH2 0x11AA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x120B DUP2 PUSH2 0x11D2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1234 DUP3 PUSH2 0x1212 JUMP JUMPDEST PUSH2 0x123E DUP2 DUP6 PUSH2 0x10D3 JUMP JUMPDEST SWAP4 POP PUSH2 0x124E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x121C JUMP JUMPDEST PUSH2 0x1257 DUP2 PUSH2 0xEA6 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1275 PUSH0 DUP4 ADD DUP9 PUSH2 0xD7E JUMP JUMPDEST PUSH2 0x1282 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0xD7E JUMP JUMPDEST PUSH2 0x128F PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0xC8D JUMP JUMPDEST PUSH2 0x129C PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0xD56 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x12AE DUP2 DUP5 PUSH2 0x122A JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEF 0xC7 PUSH21 0x138BD4E9619769E43D00E4C44C1C8F8F32088CEEFA 0xC1 SWAP4 SELFBALANCE LOG2 DUP3 0x2E PUSH22 0x6064736F6C634300081C003300000000000000000000 ",
							"sourceMap": "616:2839:11:-:0;;;822:11;791:42;;889:129;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;646:10;1318:1:14;1294:26;;:12;:26;;;1290:95;;1371:1;1343:31;;;;;;;;;;;:::i;:::-;;;;;;;;1290:95;1394:32;1413:12;1394:18;;;:32;;:::i;:::-;1246:187;1262:5:15;1252:7;;:15;;;;;;;;;;;;;;;;;;949:13:11;934:12;;:28;;;;;;;;;;;;;;;;;;977:34;997:13;977:34;;;;;;:::i;:::-;;;;;;;;889:129;616:2839;;2933:187:14;3006:16;3025:6;;;;;;;;;;;3006:25;;3050:8;3041:6;;:17;;;;;;;;;;;;;;;;;;3104:8;3073:40;;3094:8;3073:40;;;;;;;;;;;;2996:124;2933:187;:::o;88:117:16:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:118::-;1289:24;1307:5;1289:24;:::i;:::-;1284:3;1277:37;1202:118;;:::o;1326:222::-;1419:4;1457:2;1446:9;1442:18;1434:26;;1470:71;1538:1;1527:9;1523:17;1514:6;1470:71;:::i;:::-;1326:222;;;;:::o;616:2839:11:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_5508": {
									"entryPoint": 2525,
									"id": 5508,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_claimCounter_5135": {
									"entryPoint": 2514,
									"id": 5135,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_240": {
									"entryPoint": 3133,
									"id": 240,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_5671": {
									"entryPoint": 3035,
									"id": 5671,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_5642": {
									"entryPoint": 2660,
									"id": 5642,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_5655": {
									"entryPoint": 3140,
									"id": 5655,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_5570": {
									"entryPoint": 2842,
									"id": 5570,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_unpause_5687": {
									"entryPoint": 2745,
									"id": 5687,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@amountToClaim_5140": {
									"entryPoint": 1489,
									"id": 5140,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@claim_5223": {
									"entryPoint": 820,
									"id": 5223,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@claimed_5144": {
									"entryPoint": 2361,
									"id": 5144,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getBalance_5363": {
									"entryPoint": 806,
									"id": 5363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@increment_290": {
									"entryPoint": 2725,
									"id": 290,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_5491": {
									"entryPoint": 2060,
									"id": 5491,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_5373": {
									"entryPoint": 2042,
									"id": 5373,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_5630": {
									"entryPoint": 2002,
									"id": 5630,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_5522": {
									"entryPoint": 2023,
									"id": 5522,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@time_5392": {
									"entryPoint": 813,
									"id": 5392,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenToClaim_5137": {
									"entryPoint": 1704,
									"id": 5137,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferBalance_5350": {
									"entryPoint": 1821,
									"id": 5350,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@transferOwnership_5550": {
									"entryPoint": 2382,
									"id": 5550,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unpause_5383": {
									"entryPoint": 1686,
									"id": 5383,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updateAmountToClaim_5244": {
									"entryPoint": 1741,
									"id": 5244,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@updateTokenToClaim_5264": {
									"entryPoint": 2099,
									"id": 5264,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@withdrawLSP7_5295": {
									"entryPoint": 2236,
									"id": 5295,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@withdraw_5325": {
									"entryPoint": 1495,
									"id": 5325,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 3948,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3340,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_payable": {
									"entryPoint": 3618,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 3722,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 4013,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3516,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 4205,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3360,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payablet_uint256": {
									"entryPoint": 3638,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_boolt_bytes_memory_ptr": {
									"entryPoint": 4058,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3536,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 4225,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3454,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3414,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 4650,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_329b6695cc078fec6f5eaa1763a4568ff856dfa63ebfa86719d6a43e911ffb23_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4562,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 4326,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 4454,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3213,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4486,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3469,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bool_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bool_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4706,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bool_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_bool_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4358,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3429,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_329b6695cc078fec6f5eaa1763a4568ff856dfa63ebfa86719d6a43e911ffb23__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4596,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3228,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4268,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 3860,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 3253,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 3886,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 4626,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 4307,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 4444,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4506,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3301,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 3579,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3403,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3270,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3204,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 3934,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4636,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 3811,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3766,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 3742,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 3746,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 3266,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3262,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3750,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_329b6695cc078fec6f5eaa1763a4568ff856dfa63ebfa86719d6a43e911ffb23": {
									"entryPoint": 4522,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 4323,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3318,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address_payable": {
									"entryPoint": 3596,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 3700,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3494,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:13278:16",
										"nodeType": "YulBlock",
										"src": "0:13278:16",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:16",
													"nodeType": "YulBlock",
													"src": "52:32:16",
													"statements": [
														{
															"nativeSrc": "62:16:16",
															"nodeType": "YulAssignment",
															"src": "62:16:16",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:16",
																"nodeType": "YulIdentifier",
																"src": "73:5:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:16",
														"nodeType": "YulTypedName",
														"src": "34:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:16",
														"nodeType": "YulTypedName",
														"src": "44:7:16",
														"type": ""
													}
												],
												"src": "7:77:16"
											},
											{
												"body": {
													"nativeSrc": "155:53:16",
													"nodeType": "YulBlock",
													"src": "155:53:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:16"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:16",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:16"
																		},
																		"nativeSrc": "177:24:16",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:16"
																},
																"nativeSrc": "165:37:16",
																"nodeType": "YulFunctionCall",
																"src": "165:37:16"
															},
															"nativeSrc": "165:37:16",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:16"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:16",
														"nodeType": "YulTypedName",
														"src": "143:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:16",
														"nodeType": "YulTypedName",
														"src": "150:3:16",
														"type": ""
													}
												],
												"src": "90:118:16"
											},
											{
												"body": {
													"nativeSrc": "312:124:16",
													"nodeType": "YulBlock",
													"src": "312:124:16",
													"statements": [
														{
															"nativeSrc": "322:26:16",
															"nodeType": "YulAssignment",
															"src": "322:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:16",
																		"nodeType": "YulLiteral",
																		"src": "345:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:16"
																},
																"nativeSrc": "330:18:16",
																"nodeType": "YulFunctionCall",
																"src": "330:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:16",
																				"nodeType": "YulLiteral",
																				"src": "426:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:16"
																		},
																		"nativeSrc": "411:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:16"
																},
																"nativeSrc": "358:71:16",
																"nodeType": "YulFunctionCall",
																"src": "358:71:16"
															},
															"nativeSrc": "358:71:16",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:16",
														"nodeType": "YulTypedName",
														"src": "284:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:16",
														"nodeType": "YulTypedName",
														"src": "296:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:16",
														"nodeType": "YulTypedName",
														"src": "307:4:16",
														"type": ""
													}
												],
												"src": "214:222:16"
											},
											{
												"body": {
													"nativeSrc": "482:35:16",
													"nodeType": "YulBlock",
													"src": "482:35:16",
													"statements": [
														{
															"nativeSrc": "492:19:16",
															"nodeType": "YulAssignment",
															"src": "492:19:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "508:2:16",
																		"nodeType": "YulLiteral",
																		"src": "508:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "502:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:16"
																},
																"nativeSrc": "502:9:16",
																"nodeType": "YulFunctionCall",
																"src": "502:9:16"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "492:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:16"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "442:75:16",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "475:6:16",
														"nodeType": "YulTypedName",
														"src": "475:6:16",
														"type": ""
													}
												],
												"src": "442:75:16"
											},
											{
												"body": {
													"nativeSrc": "612:28:16",
													"nodeType": "YulBlock",
													"src": "612:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "629:1:16",
																		"nodeType": "YulLiteral",
																		"src": "629:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "632:1:16",
																		"nodeType": "YulLiteral",
																		"src": "632:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "622:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:16"
																},
																"nativeSrc": "622:12:16",
																"nodeType": "YulFunctionCall",
																"src": "622:12:16"
															},
															"nativeSrc": "622:12:16",
															"nodeType": "YulExpressionStatement",
															"src": "622:12:16"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "523:117:16",
												"nodeType": "YulFunctionDefinition",
												"src": "523:117:16"
											},
											{
												"body": {
													"nativeSrc": "735:28:16",
													"nodeType": "YulBlock",
													"src": "735:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "752:1:16",
																		"nodeType": "YulLiteral",
																		"src": "752:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "755:1:16",
																		"nodeType": "YulLiteral",
																		"src": "755:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "745:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:16"
																},
																"nativeSrc": "745:12:16",
																"nodeType": "YulFunctionCall",
																"src": "745:12:16"
															},
															"nativeSrc": "745:12:16",
															"nodeType": "YulExpressionStatement",
															"src": "745:12:16"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "646:117:16",
												"nodeType": "YulFunctionDefinition",
												"src": "646:117:16"
											},
											{
												"body": {
													"nativeSrc": "814:81:16",
													"nodeType": "YulBlock",
													"src": "814:81:16",
													"statements": [
														{
															"nativeSrc": "824:65:16",
															"nodeType": "YulAssignment",
															"src": "824:65:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "839:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "839:5:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "846:42:16",
																		"nodeType": "YulLiteral",
																		"src": "846:42:16",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "835:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "835:3:16"
																},
																"nativeSrc": "835:54:16",
																"nodeType": "YulFunctionCall",
																"src": "835:54:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "824:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "824:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "769:126:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "796:5:16",
														"nodeType": "YulTypedName",
														"src": "796:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "806:7:16",
														"nodeType": "YulTypedName",
														"src": "806:7:16",
														"type": ""
													}
												],
												"src": "769:126:16"
											},
											{
												"body": {
													"nativeSrc": "946:51:16",
													"nodeType": "YulBlock",
													"src": "946:51:16",
													"statements": [
														{
															"nativeSrc": "956:35:16",
															"nodeType": "YulAssignment",
															"src": "956:35:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "985:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "985:5:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "967:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "967:17:16"
																},
																"nativeSrc": "967:24:16",
																"nodeType": "YulFunctionCall",
																"src": "967:24:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "956:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "956:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "901:96:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "928:5:16",
														"nodeType": "YulTypedName",
														"src": "928:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "938:7:16",
														"nodeType": "YulTypedName",
														"src": "938:7:16",
														"type": ""
													}
												],
												"src": "901:96:16"
											},
											{
												"body": {
													"nativeSrc": "1046:79:16",
													"nodeType": "YulBlock",
													"src": "1046:79:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "1103:16:16",
																"nodeType": "YulBlock",
																"src": "1103:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1112:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1112:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1115:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1115:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1105:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1105:6:16"
																			},
																			"nativeSrc": "1105:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1105:12:16"
																		},
																		"nativeSrc": "1105:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "1105:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1069:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "1069:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1094:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "1094:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1076:17:16",
																					"nodeType": "YulIdentifier",
																					"src": "1076:17:16"
																				},
																				"nativeSrc": "1076:24:16",
																				"nodeType": "YulFunctionCall",
																				"src": "1076:24:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1066:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "1066:2:16"
																		},
																		"nativeSrc": "1066:35:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1066:35:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1059:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1059:6:16"
																},
																"nativeSrc": "1059:43:16",
																"nodeType": "YulFunctionCall",
																"src": "1059:43:16"
															},
															"nativeSrc": "1056:63:16",
															"nodeType": "YulIf",
															"src": "1056:63:16"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1003:122:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1039:5:16",
														"nodeType": "YulTypedName",
														"src": "1039:5:16",
														"type": ""
													}
												],
												"src": "1003:122:16"
											},
											{
												"body": {
													"nativeSrc": "1183:87:16",
													"nodeType": "YulBlock",
													"src": "1183:87:16",
													"statements": [
														{
															"nativeSrc": "1193:29:16",
															"nodeType": "YulAssignment",
															"src": "1193:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1215:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1202:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "1202:12:16"
																},
																"nativeSrc": "1202:20:16",
																"nodeType": "YulFunctionCall",
																"src": "1202:20:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1193:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "1193:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1258:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "1258:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1231:26:16",
																	"nodeType": "YulIdentifier",
																	"src": "1231:26:16"
																},
																"nativeSrc": "1231:33:16",
																"nodeType": "YulFunctionCall",
																"src": "1231:33:16"
															},
															"nativeSrc": "1231:33:16",
															"nodeType": "YulExpressionStatement",
															"src": "1231:33:16"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1131:139:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1161:6:16",
														"nodeType": "YulTypedName",
														"src": "1161:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1169:3:16",
														"nodeType": "YulTypedName",
														"src": "1169:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1177:5:16",
														"nodeType": "YulTypedName",
														"src": "1177:5:16",
														"type": ""
													}
												],
												"src": "1131:139:16"
											},
											{
												"body": {
													"nativeSrc": "1342:263:16",
													"nodeType": "YulBlock",
													"src": "1342:263:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "1388:83:16",
																"nodeType": "YulBlock",
																"src": "1388:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1390:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "1390:77:16"
																			},
																			"nativeSrc": "1390:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1390:79:16"
																		},
																		"nativeSrc": "1390:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "1390:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1363:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "1363:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1372:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "1372:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1359:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1359:3:16"
																		},
																		"nativeSrc": "1359:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1359:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1384:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1384:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1355:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1355:3:16"
																},
																"nativeSrc": "1355:32:16",
																"nodeType": "YulFunctionCall",
																"src": "1355:32:16"
															},
															"nativeSrc": "1352:119:16",
															"nodeType": "YulIf",
															"src": "1352:119:16"
														},
														{
															"nativeSrc": "1481:117:16",
															"nodeType": "YulBlock",
															"src": "1481:117:16",
															"statements": [
																{
																	"nativeSrc": "1496:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1496:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1510:1:16",
																		"nodeType": "YulLiteral",
																		"src": "1510:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1500:6:16",
																			"nodeType": "YulTypedName",
																			"src": "1500:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1525:63:16",
																	"nodeType": "YulAssignment",
																	"src": "1525:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1560:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "1560:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1571:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "1571:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1556:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "1556:3:16"
																				},
																				"nativeSrc": "1556:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "1556:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1580:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "1580:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1535:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "1535:20:16"
																		},
																		"nativeSrc": "1535:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1535:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1525:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "1525:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1276:329:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1312:9:16",
														"nodeType": "YulTypedName",
														"src": "1312:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1323:7:16",
														"nodeType": "YulTypedName",
														"src": "1323:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1335:6:16",
														"nodeType": "YulTypedName",
														"src": "1335:6:16",
														"type": ""
													}
												],
												"src": "1276:329:16"
											},
											{
												"body": {
													"nativeSrc": "1653:48:16",
													"nodeType": "YulBlock",
													"src": "1653:48:16",
													"statements": [
														{
															"nativeSrc": "1663:32:16",
															"nodeType": "YulAssignment",
															"src": "1663:32:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1688:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "1688:5:16"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1681:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "1681:6:16"
																		},
																		"nativeSrc": "1681:13:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1681:13:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1674:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1674:6:16"
																},
																"nativeSrc": "1674:21:16",
																"nodeType": "YulFunctionCall",
																"src": "1674:21:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1663:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "1663:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1611:90:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1635:5:16",
														"nodeType": "YulTypedName",
														"src": "1635:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1645:7:16",
														"nodeType": "YulTypedName",
														"src": "1645:7:16",
														"type": ""
													}
												],
												"src": "1611:90:16"
											},
											{
												"body": {
													"nativeSrc": "1766:50:16",
													"nodeType": "YulBlock",
													"src": "1766:50:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1783:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "1783:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1803:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "1803:5:16"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1788:14:16",
																			"nodeType": "YulIdentifier",
																			"src": "1788:14:16"
																		},
																		"nativeSrc": "1788:21:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1788:21:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1776:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1776:6:16"
																},
																"nativeSrc": "1776:34:16",
																"nodeType": "YulFunctionCall",
																"src": "1776:34:16"
															},
															"nativeSrc": "1776:34:16",
															"nodeType": "YulExpressionStatement",
															"src": "1776:34:16"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1707:109:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1754:5:16",
														"nodeType": "YulTypedName",
														"src": "1754:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1761:3:16",
														"nodeType": "YulTypedName",
														"src": "1761:3:16",
														"type": ""
													}
												],
												"src": "1707:109:16"
											},
											{
												"body": {
													"nativeSrc": "1914:118:16",
													"nodeType": "YulBlock",
													"src": "1914:118:16",
													"statements": [
														{
															"nativeSrc": "1924:26:16",
															"nodeType": "YulAssignment",
															"src": "1924:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1936:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "1936:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1947:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1947:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1932:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1932:3:16"
																},
																"nativeSrc": "1932:18:16",
																"nodeType": "YulFunctionCall",
																"src": "1932:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1924:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "1924:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1998:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "1998:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2011:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "2011:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2022:1:16",
																				"nodeType": "YulLiteral",
																				"src": "2022:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2007:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2007:3:16"
																		},
																		"nativeSrc": "2007:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2007:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1960:37:16",
																	"nodeType": "YulIdentifier",
																	"src": "1960:37:16"
																},
																"nativeSrc": "1960:65:16",
																"nodeType": "YulFunctionCall",
																"src": "1960:65:16"
															},
															"nativeSrc": "1960:65:16",
															"nodeType": "YulExpressionStatement",
															"src": "1960:65:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1822:210:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1886:9:16",
														"nodeType": "YulTypedName",
														"src": "1886:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1898:6:16",
														"nodeType": "YulTypedName",
														"src": "1898:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1909:4:16",
														"nodeType": "YulTypedName",
														"src": "1909:4:16",
														"type": ""
													}
												],
												"src": "1822:210:16"
											},
											{
												"body": {
													"nativeSrc": "2103:53:16",
													"nodeType": "YulBlock",
													"src": "2103:53:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2120:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "2120:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2143:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "2143:5:16"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2125:17:16",
																			"nodeType": "YulIdentifier",
																			"src": "2125:17:16"
																		},
																		"nativeSrc": "2125:24:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2125:24:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2113:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2113:6:16"
																},
																"nativeSrc": "2113:37:16",
																"nodeType": "YulFunctionCall",
																"src": "2113:37:16"
															},
															"nativeSrc": "2113:37:16",
															"nodeType": "YulExpressionStatement",
															"src": "2113:37:16"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2038:118:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2091:5:16",
														"nodeType": "YulTypedName",
														"src": "2091:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2098:3:16",
														"nodeType": "YulTypedName",
														"src": "2098:3:16",
														"type": ""
													}
												],
												"src": "2038:118:16"
											},
											{
												"body": {
													"nativeSrc": "2260:124:16",
													"nodeType": "YulBlock",
													"src": "2260:124:16",
													"statements": [
														{
															"nativeSrc": "2270:26:16",
															"nodeType": "YulAssignment",
															"src": "2270:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2282:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "2282:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2293:2:16",
																		"nodeType": "YulLiteral",
																		"src": "2293:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2278:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2278:3:16"
																},
																"nativeSrc": "2278:18:16",
																"nodeType": "YulFunctionCall",
																"src": "2278:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2270:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "2270:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2350:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "2350:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2363:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "2363:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2374:1:16",
																				"nodeType": "YulLiteral",
																				"src": "2374:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2359:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2359:3:16"
																		},
																		"nativeSrc": "2359:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2359:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2306:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "2306:43:16"
																},
																"nativeSrc": "2306:71:16",
																"nodeType": "YulFunctionCall",
																"src": "2306:71:16"
															},
															"nativeSrc": "2306:71:16",
															"nodeType": "YulExpressionStatement",
															"src": "2306:71:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2162:222:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2232:9:16",
														"nodeType": "YulTypedName",
														"src": "2232:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2244:6:16",
														"nodeType": "YulTypedName",
														"src": "2244:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2255:4:16",
														"nodeType": "YulTypedName",
														"src": "2255:4:16",
														"type": ""
													}
												],
												"src": "2162:222:16"
											},
											{
												"body": {
													"nativeSrc": "2433:79:16",
													"nodeType": "YulBlock",
													"src": "2433:79:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "2490:16:16",
																"nodeType": "YulBlock",
																"src": "2490:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2499:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2499:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2502:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2502:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2492:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2492:6:16"
																			},
																			"nativeSrc": "2492:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2492:12:16"
																		},
																		"nativeSrc": "2492:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "2492:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2456:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "2456:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2481:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "2481:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2463:17:16",
																					"nodeType": "YulIdentifier",
																					"src": "2463:17:16"
																				},
																				"nativeSrc": "2463:24:16",
																				"nodeType": "YulFunctionCall",
																				"src": "2463:24:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2453:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "2453:2:16"
																		},
																		"nativeSrc": "2453:35:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2453:35:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2446:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2446:6:16"
																},
																"nativeSrc": "2446:43:16",
																"nodeType": "YulFunctionCall",
																"src": "2446:43:16"
															},
															"nativeSrc": "2443:63:16",
															"nodeType": "YulIf",
															"src": "2443:63:16"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2390:122:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2426:5:16",
														"nodeType": "YulTypedName",
														"src": "2426:5:16",
														"type": ""
													}
												],
												"src": "2390:122:16"
											},
											{
												"body": {
													"nativeSrc": "2570:87:16",
													"nodeType": "YulBlock",
													"src": "2570:87:16",
													"statements": [
														{
															"nativeSrc": "2580:29:16",
															"nodeType": "YulAssignment",
															"src": "2580:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2602:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "2602:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2589:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "2589:12:16"
																},
																"nativeSrc": "2589:20:16",
																"nodeType": "YulFunctionCall",
																"src": "2589:20:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2580:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "2580:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2645:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "2645:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2618:26:16",
																	"nodeType": "YulIdentifier",
																	"src": "2618:26:16"
																},
																"nativeSrc": "2618:33:16",
																"nodeType": "YulFunctionCall",
																"src": "2618:33:16"
															},
															"nativeSrc": "2618:33:16",
															"nodeType": "YulExpressionStatement",
															"src": "2618:33:16"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2518:139:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2548:6:16",
														"nodeType": "YulTypedName",
														"src": "2548:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2556:3:16",
														"nodeType": "YulTypedName",
														"src": "2556:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2564:5:16",
														"nodeType": "YulTypedName",
														"src": "2564:5:16",
														"type": ""
													}
												],
												"src": "2518:139:16"
											},
											{
												"body": {
													"nativeSrc": "2729:263:16",
													"nodeType": "YulBlock",
													"src": "2729:263:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "2775:83:16",
																"nodeType": "YulBlock",
																"src": "2775:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2777:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "2777:77:16"
																			},
																			"nativeSrc": "2777:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2777:79:16"
																		},
																		"nativeSrc": "2777:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "2777:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2750:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "2750:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2759:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "2759:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2746:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2746:3:16"
																		},
																		"nativeSrc": "2746:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2746:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2771:2:16",
																		"nodeType": "YulLiteral",
																		"src": "2771:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2742:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2742:3:16"
																},
																"nativeSrc": "2742:32:16",
																"nodeType": "YulFunctionCall",
																"src": "2742:32:16"
															},
															"nativeSrc": "2739:119:16",
															"nodeType": "YulIf",
															"src": "2739:119:16"
														},
														{
															"nativeSrc": "2868:117:16",
															"nodeType": "YulBlock",
															"src": "2868:117:16",
															"statements": [
																{
																	"nativeSrc": "2883:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2883:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2897:1:16",
																		"nodeType": "YulLiteral",
																		"src": "2897:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2887:6:16",
																			"nodeType": "YulTypedName",
																			"src": "2887:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2912:63:16",
																	"nodeType": "YulAssignment",
																	"src": "2912:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2947:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "2947:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2958:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "2958:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2943:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "2943:3:16"
																				},
																				"nativeSrc": "2943:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "2943:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2967:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "2967:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2922:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "2922:20:16"
																		},
																		"nativeSrc": "2922:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2922:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2912:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "2912:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2663:329:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2699:9:16",
														"nodeType": "YulTypedName",
														"src": "2699:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2710:7:16",
														"nodeType": "YulTypedName",
														"src": "2710:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2722:6:16",
														"nodeType": "YulTypedName",
														"src": "2722:6:16",
														"type": ""
													}
												],
												"src": "2663:329:16"
											},
											{
												"body": {
													"nativeSrc": "3051:51:16",
													"nodeType": "YulBlock",
													"src": "3051:51:16",
													"statements": [
														{
															"nativeSrc": "3061:35:16",
															"nodeType": "YulAssignment",
															"src": "3061:35:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3090:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "3090:5:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3072:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "3072:17:16"
																},
																"nativeSrc": "3072:24:16",
																"nodeType": "YulFunctionCall",
																"src": "3072:24:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3061:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "3061:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nativeSrc": "2998:104:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3033:5:16",
														"nodeType": "YulTypedName",
														"src": "3033:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3043:7:16",
														"nodeType": "YulTypedName",
														"src": "3043:7:16",
														"type": ""
													}
												],
												"src": "2998:104:16"
											},
											{
												"body": {
													"nativeSrc": "3159:87:16",
													"nodeType": "YulBlock",
													"src": "3159:87:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "3224:16:16",
																"nodeType": "YulBlock",
																"src": "3224:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3233:1:16",
																					"nodeType": "YulLiteral",
																					"src": "3233:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3236:1:16",
																					"nodeType": "YulLiteral",
																					"src": "3236:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3226:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "3226:6:16"
																			},
																			"nativeSrc": "3226:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "3226:12:16"
																		},
																		"nativeSrc": "3226:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "3226:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3182:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "3182:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3215:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "3215:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nativeSrc": "3189:25:16",
																					"nodeType": "YulIdentifier",
																					"src": "3189:25:16"
																				},
																				"nativeSrc": "3189:32:16",
																				"nodeType": "YulFunctionCall",
																				"src": "3189:32:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3179:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "3179:2:16"
																		},
																		"nativeSrc": "3179:43:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3179:43:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3172:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3172:6:16"
																},
																"nativeSrc": "3172:51:16",
																"nodeType": "YulFunctionCall",
																"src": "3172:51:16"
															},
															"nativeSrc": "3169:71:16",
															"nodeType": "YulIf",
															"src": "3169:71:16"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nativeSrc": "3108:138:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3152:5:16",
														"nodeType": "YulTypedName",
														"src": "3152:5:16",
														"type": ""
													}
												],
												"src": "3108:138:16"
											},
											{
												"body": {
													"nativeSrc": "3312:95:16",
													"nodeType": "YulBlock",
													"src": "3312:95:16",
													"statements": [
														{
															"nativeSrc": "3322:29:16",
															"nodeType": "YulAssignment",
															"src": "3322:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3344:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "3344:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3331:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "3331:12:16"
																},
																"nativeSrc": "3331:20:16",
																"nodeType": "YulFunctionCall",
																"src": "3331:20:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3322:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "3322:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3395:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "3395:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nativeSrc": "3360:34:16",
																	"nodeType": "YulIdentifier",
																	"src": "3360:34:16"
																},
																"nativeSrc": "3360:41:16",
																"nodeType": "YulFunctionCall",
																"src": "3360:41:16"
															},
															"nativeSrc": "3360:41:16",
															"nodeType": "YulExpressionStatement",
															"src": "3360:41:16"
														}
													]
												},
												"name": "abi_decode_t_address_payable",
												"nativeSrc": "3252:155:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3290:6:16",
														"nodeType": "YulTypedName",
														"src": "3290:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3298:3:16",
														"nodeType": "YulTypedName",
														"src": "3298:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3306:5:16",
														"nodeType": "YulTypedName",
														"src": "3306:5:16",
														"type": ""
													}
												],
												"src": "3252:155:16"
											},
											{
												"body": {
													"nativeSrc": "3504:399:16",
													"nodeType": "YulBlock",
													"src": "3504:399:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "3550:83:16",
																"nodeType": "YulBlock",
																"src": "3550:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3552:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "3552:77:16"
																			},
																			"nativeSrc": "3552:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "3552:79:16"
																		},
																		"nativeSrc": "3552:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "3552:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3525:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "3525:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3534:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "3534:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3521:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3521:3:16"
																		},
																		"nativeSrc": "3521:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3521:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3546:2:16",
																		"nodeType": "YulLiteral",
																		"src": "3546:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3517:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3517:3:16"
																},
																"nativeSrc": "3517:32:16",
																"nodeType": "YulFunctionCall",
																"src": "3517:32:16"
															},
															"nativeSrc": "3514:119:16",
															"nodeType": "YulIf",
															"src": "3514:119:16"
														},
														{
															"nativeSrc": "3643:125:16",
															"nodeType": "YulBlock",
															"src": "3643:125:16",
															"statements": [
																{
																	"nativeSrc": "3658:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3658:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3672:1:16",
																		"nodeType": "YulLiteral",
																		"src": "3672:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3662:6:16",
																			"nodeType": "YulTypedName",
																			"src": "3662:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3687:71:16",
																	"nodeType": "YulAssignment",
																	"src": "3687:71:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3730:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "3730:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3741:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "3741:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3726:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "3726:3:16"
																				},
																				"nativeSrc": "3726:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "3726:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3750:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "3750:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable",
																			"nativeSrc": "3697:28:16",
																			"nodeType": "YulIdentifier",
																			"src": "3697:28:16"
																		},
																		"nativeSrc": "3697:61:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3697:61:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3687:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "3687:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3778:118:16",
															"nodeType": "YulBlock",
															"src": "3778:118:16",
															"statements": [
																{
																	"nativeSrc": "3793:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3793:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3807:2:16",
																		"nodeType": "YulLiteral",
																		"src": "3807:2:16",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3797:6:16",
																			"nodeType": "YulTypedName",
																			"src": "3797:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3823:63:16",
																	"nodeType": "YulAssignment",
																	"src": "3823:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3858:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "3858:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3869:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "3869:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3854:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "3854:3:16"
																				},
																				"nativeSrc": "3854:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "3854:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3878:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "3878:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3833:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "3833:20:16"
																		},
																		"nativeSrc": "3833:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3833:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3823:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "3823:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payablet_uint256",
												"nativeSrc": "3413:490:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3466:9:16",
														"nodeType": "YulTypedName",
														"src": "3466:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3477:7:16",
														"nodeType": "YulTypedName",
														"src": "3477:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3489:6:16",
														"nodeType": "YulTypedName",
														"src": "3489:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3497:6:16",
														"nodeType": "YulTypedName",
														"src": "3497:6:16",
														"type": ""
													}
												],
												"src": "3413:490:16"
											},
											{
												"body": {
													"nativeSrc": "3949:76:16",
													"nodeType": "YulBlock",
													"src": "3949:76:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "4003:16:16",
																"nodeType": "YulBlock",
																"src": "4003:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4012:1:16",
																					"nodeType": "YulLiteral",
																					"src": "4012:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4015:1:16",
																					"nodeType": "YulLiteral",
																					"src": "4015:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4005:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "4005:6:16"
																			},
																			"nativeSrc": "4005:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "4005:12:16"
																		},
																		"nativeSrc": "4005:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "4005:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3972:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "3972:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3994:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "3994:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "3979:14:16",
																					"nodeType": "YulIdentifier",
																					"src": "3979:14:16"
																				},
																				"nativeSrc": "3979:21:16",
																				"nodeType": "YulFunctionCall",
																				"src": "3979:21:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3969:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "3969:2:16"
																		},
																		"nativeSrc": "3969:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3969:32:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3962:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3962:6:16"
																},
																"nativeSrc": "3962:40:16",
																"nodeType": "YulFunctionCall",
																"src": "3962:40:16"
															},
															"nativeSrc": "3959:60:16",
															"nodeType": "YulIf",
															"src": "3959:60:16"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "3909:116:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3942:5:16",
														"nodeType": "YulTypedName",
														"src": "3942:5:16",
														"type": ""
													}
												],
												"src": "3909:116:16"
											},
											{
												"body": {
													"nativeSrc": "4080:84:16",
													"nodeType": "YulBlock",
													"src": "4080:84:16",
													"statements": [
														{
															"nativeSrc": "4090:29:16",
															"nodeType": "YulAssignment",
															"src": "4090:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4112:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "4112:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4099:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "4099:12:16"
																},
																"nativeSrc": "4099:20:16",
																"nodeType": "YulFunctionCall",
																"src": "4099:20:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4090:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "4090:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4152:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "4152:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "4128:23:16",
																	"nodeType": "YulIdentifier",
																	"src": "4128:23:16"
																},
																"nativeSrc": "4128:30:16",
																"nodeType": "YulFunctionCall",
																"src": "4128:30:16"
															},
															"nativeSrc": "4128:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "4128:30:16"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "4031:133:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4058:6:16",
														"nodeType": "YulTypedName",
														"src": "4058:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4066:3:16",
														"nodeType": "YulTypedName",
														"src": "4066:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4074:5:16",
														"nodeType": "YulTypedName",
														"src": "4074:5:16",
														"type": ""
													}
												],
												"src": "4031:133:16"
											},
											{
												"body": {
													"nativeSrc": "4259:28:16",
													"nodeType": "YulBlock",
													"src": "4259:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4276:1:16",
																		"nodeType": "YulLiteral",
																		"src": "4276:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4279:1:16",
																		"nodeType": "YulLiteral",
																		"src": "4279:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4269:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4269:6:16"
																},
																"nativeSrc": "4269:12:16",
																"nodeType": "YulFunctionCall",
																"src": "4269:12:16"
															},
															"nativeSrc": "4269:12:16",
															"nodeType": "YulExpressionStatement",
															"src": "4269:12:16"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "4170:117:16",
												"nodeType": "YulFunctionDefinition",
												"src": "4170:117:16"
											},
											{
												"body": {
													"nativeSrc": "4382:28:16",
													"nodeType": "YulBlock",
													"src": "4382:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4399:1:16",
																		"nodeType": "YulLiteral",
																		"src": "4399:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4402:1:16",
																		"nodeType": "YulLiteral",
																		"src": "4402:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4392:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4392:6:16"
																},
																"nativeSrc": "4392:12:16",
																"nodeType": "YulFunctionCall",
																"src": "4392:12:16"
															},
															"nativeSrc": "4392:12:16",
															"nodeType": "YulExpressionStatement",
															"src": "4392:12:16"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "4293:117:16",
												"nodeType": "YulFunctionDefinition",
												"src": "4293:117:16"
											},
											{
												"body": {
													"nativeSrc": "4464:54:16",
													"nodeType": "YulBlock",
													"src": "4464:54:16",
													"statements": [
														{
															"nativeSrc": "4474:38:16",
															"nodeType": "YulAssignment",
															"src": "4474:38:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4492:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "4492:5:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4499:2:16",
																				"nodeType": "YulLiteral",
																				"src": "4499:2:16",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4488:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4488:3:16"
																		},
																		"nativeSrc": "4488:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4488:14:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4508:2:16",
																				"nodeType": "YulLiteral",
																				"src": "4508:2:16",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "4504:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4504:3:16"
																		},
																		"nativeSrc": "4504:7:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4504:7:16"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4484:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "4484:3:16"
																},
																"nativeSrc": "4484:28:16",
																"nodeType": "YulFunctionCall",
																"src": "4484:28:16"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4474:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4474:6:16"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "4416:102:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4447:5:16",
														"nodeType": "YulTypedName",
														"src": "4447:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4457:6:16",
														"nodeType": "YulTypedName",
														"src": "4457:6:16",
														"type": ""
													}
												],
												"src": "4416:102:16"
											},
											{
												"body": {
													"nativeSrc": "4552:152:16",
													"nodeType": "YulBlock",
													"src": "4552:152:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4569:1:16",
																		"nodeType": "YulLiteral",
																		"src": "4569:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4572:77:16",
																		"nodeType": "YulLiteral",
																		"src": "4572:77:16",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4562:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4562:6:16"
																},
																"nativeSrc": "4562:88:16",
																"nodeType": "YulFunctionCall",
																"src": "4562:88:16"
															},
															"nativeSrc": "4562:88:16",
															"nodeType": "YulExpressionStatement",
															"src": "4562:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4666:1:16",
																		"nodeType": "YulLiteral",
																		"src": "4666:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4669:4:16",
																		"nodeType": "YulLiteral",
																		"src": "4669:4:16",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4659:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4659:6:16"
																},
																"nativeSrc": "4659:15:16",
																"nodeType": "YulFunctionCall",
																"src": "4659:15:16"
															},
															"nativeSrc": "4659:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "4659:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4690:1:16",
																		"nodeType": "YulLiteral",
																		"src": "4690:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4693:4:16",
																		"nodeType": "YulLiteral",
																		"src": "4693:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4683:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4683:6:16"
																},
																"nativeSrc": "4683:15:16",
																"nodeType": "YulFunctionCall",
																"src": "4683:15:16"
															},
															"nativeSrc": "4683:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "4683:15:16"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "4524:180:16",
												"nodeType": "YulFunctionDefinition",
												"src": "4524:180:16"
											},
											{
												"body": {
													"nativeSrc": "4753:238:16",
													"nodeType": "YulBlock",
													"src": "4753:238:16",
													"statements": [
														{
															"nativeSrc": "4763:58:16",
															"nodeType": "YulVariableDeclaration",
															"src": "4763:58:16",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4785:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "4785:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "4815:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "4815:4:16"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "4793:21:16",
																			"nodeType": "YulIdentifier",
																			"src": "4793:21:16"
																		},
																		"nativeSrc": "4793:27:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4793:27:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4781:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "4781:3:16"
																},
																"nativeSrc": "4781:40:16",
																"nodeType": "YulFunctionCall",
																"src": "4781:40:16"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "4767:10:16",
																	"nodeType": "YulTypedName",
																	"src": "4767:10:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4932:22:16",
																"nodeType": "YulBlock",
																"src": "4932:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4934:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "4934:16:16"
																			},
																			"nativeSrc": "4934:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "4934:18:16"
																		},
																		"nativeSrc": "4934:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "4934:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "4875:10:16",
																				"nodeType": "YulIdentifier",
																				"src": "4875:10:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4887:18:16",
																				"nodeType": "YulLiteral",
																				"src": "4887:18:16",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4872:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "4872:2:16"
																		},
																		"nativeSrc": "4872:34:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4872:34:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "4911:10:16",
																				"nodeType": "YulIdentifier",
																				"src": "4911:10:16"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "4923:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "4923:6:16"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4908:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "4908:2:16"
																		},
																		"nativeSrc": "4908:22:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4908:22:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4869:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "4869:2:16"
																},
																"nativeSrc": "4869:62:16",
																"nodeType": "YulFunctionCall",
																"src": "4869:62:16"
															},
															"nativeSrc": "4866:88:16",
															"nodeType": "YulIf",
															"src": "4866:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4970:2:16",
																		"nodeType": "YulLiteral",
																		"src": "4970:2:16",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "4974:10:16",
																		"nodeType": "YulIdentifier",
																		"src": "4974:10:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4963:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4963:6:16"
																},
																"nativeSrc": "4963:22:16",
																"nodeType": "YulFunctionCall",
																"src": "4963:22:16"
															},
															"nativeSrc": "4963:22:16",
															"nodeType": "YulExpressionStatement",
															"src": "4963:22:16"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "4710:281:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4739:6:16",
														"nodeType": "YulTypedName",
														"src": "4739:6:16",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "4747:4:16",
														"nodeType": "YulTypedName",
														"src": "4747:4:16",
														"type": ""
													}
												],
												"src": "4710:281:16"
											},
											{
												"body": {
													"nativeSrc": "5038:88:16",
													"nodeType": "YulBlock",
													"src": "5038:88:16",
													"statements": [
														{
															"nativeSrc": "5048:30:16",
															"nodeType": "YulAssignment",
															"src": "5048:30:16",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "5058:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "5058:18:16"
																},
																"nativeSrc": "5058:20:16",
																"nodeType": "YulFunctionCall",
																"src": "5058:20:16"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "5048:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5048:6:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5107:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "5107:6:16"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "5115:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "5115:4:16"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "5087:19:16",
																	"nodeType": "YulIdentifier",
																	"src": "5087:19:16"
																},
																"nativeSrc": "5087:33:16",
																"nodeType": "YulFunctionCall",
																"src": "5087:33:16"
															},
															"nativeSrc": "5087:33:16",
															"nodeType": "YulExpressionStatement",
															"src": "5087:33:16"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "4997:129:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "5022:4:16",
														"nodeType": "YulTypedName",
														"src": "5022:4:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "5031:6:16",
														"nodeType": "YulTypedName",
														"src": "5031:6:16",
														"type": ""
													}
												],
												"src": "4997:129:16"
											},
											{
												"body": {
													"nativeSrc": "5198:241:16",
													"nodeType": "YulBlock",
													"src": "5198:241:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "5303:22:16",
																"nodeType": "YulBlock",
																"src": "5303:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5305:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "5305:16:16"
																			},
																			"nativeSrc": "5305:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "5305:18:16"
																		},
																		"nativeSrc": "5305:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "5305:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "5275:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "5275:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5283:18:16",
																		"nodeType": "YulLiteral",
																		"src": "5283:18:16",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5272:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "5272:2:16"
																},
																"nativeSrc": "5272:30:16",
																"nodeType": "YulFunctionCall",
																"src": "5272:30:16"
															},
															"nativeSrc": "5269:56:16",
															"nodeType": "YulIf",
															"src": "5269:56:16"
														},
														{
															"nativeSrc": "5335:37:16",
															"nodeType": "YulAssignment",
															"src": "5335:37:16",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "5365:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "5365:6:16"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "5343:21:16",
																	"nodeType": "YulIdentifier",
																	"src": "5343:21:16"
																},
																"nativeSrc": "5343:29:16",
																"nodeType": "YulFunctionCall",
																"src": "5343:29:16"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "5335:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "5335:4:16"
																}
															]
														},
														{
															"nativeSrc": "5409:23:16",
															"nodeType": "YulAssignment",
															"src": "5409:23:16",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "5421:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "5421:4:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5427:4:16",
																		"nodeType": "YulLiteral",
																		"src": "5427:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5417:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "5417:3:16"
																},
																"nativeSrc": "5417:15:16",
																"nodeType": "YulFunctionCall",
																"src": "5417:15:16"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "5409:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "5409:4:16"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "5132:307:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "5182:6:16",
														"nodeType": "YulTypedName",
														"src": "5182:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "5193:4:16",
														"nodeType": "YulTypedName",
														"src": "5193:4:16",
														"type": ""
													}
												],
												"src": "5132:307:16"
											},
											{
												"body": {
													"nativeSrc": "5509:84:16",
													"nodeType": "YulBlock",
													"src": "5509:84:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "5533:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "5533:3:16"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "5538:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "5538:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5543:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "5543:6:16"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "5520:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "5520:12:16"
																},
																"nativeSrc": "5520:30:16",
																"nodeType": "YulFunctionCall",
																"src": "5520:30:16"
															},
															"nativeSrc": "5520:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "5520:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "5570:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "5570:3:16"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "5575:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "5575:6:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5566:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5566:3:16"
																		},
																		"nativeSrc": "5566:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5566:16:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5584:1:16",
																		"nodeType": "YulLiteral",
																		"src": "5584:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5559:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5559:6:16"
																},
																"nativeSrc": "5559:27:16",
																"nodeType": "YulFunctionCall",
																"src": "5559:27:16"
															},
															"nativeSrc": "5559:27:16",
															"nodeType": "YulExpressionStatement",
															"src": "5559:27:16"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "5445:148:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "5491:3:16",
														"nodeType": "YulTypedName",
														"src": "5491:3:16",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "5496:3:16",
														"nodeType": "YulTypedName",
														"src": "5496:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5501:6:16",
														"nodeType": "YulTypedName",
														"src": "5501:6:16",
														"type": ""
													}
												],
												"src": "5445:148:16"
											},
											{
												"body": {
													"nativeSrc": "5682:340:16",
													"nodeType": "YulBlock",
													"src": "5682:340:16",
													"statements": [
														{
															"nativeSrc": "5692:74:16",
															"nodeType": "YulAssignment",
															"src": "5692:74:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5758:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "5758:6:16"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "5717:40:16",
																			"nodeType": "YulIdentifier",
																			"src": "5717:40:16"
																		},
																		"nativeSrc": "5717:48:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5717:48:16"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "5701:15:16",
																	"nodeType": "YulIdentifier",
																	"src": "5701:15:16"
																},
																"nativeSrc": "5701:65:16",
																"nodeType": "YulFunctionCall",
																"src": "5701:65:16"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "5692:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "5692:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "5782:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "5782:5:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5789:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "5789:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5775:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5775:6:16"
																},
																"nativeSrc": "5775:21:16",
																"nodeType": "YulFunctionCall",
																"src": "5775:21:16"
															},
															"nativeSrc": "5775:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "5775:21:16"
														},
														{
															"nativeSrc": "5805:27:16",
															"nodeType": "YulVariableDeclaration",
															"src": "5805:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "5820:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "5820:5:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5827:4:16",
																		"nodeType": "YulLiteral",
																		"src": "5827:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5816:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "5816:3:16"
																},
																"nativeSrc": "5816:16:16",
																"nodeType": "YulFunctionCall",
																"src": "5816:16:16"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "5809:3:16",
																	"nodeType": "YulTypedName",
																	"src": "5809:3:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5870:83:16",
																"nodeType": "YulBlock",
																"src": "5870:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "5872:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "5872:77:16"
																			},
																			"nativeSrc": "5872:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "5872:79:16"
																		},
																		"nativeSrc": "5872:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "5872:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "5851:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "5851:3:16"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "5856:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "5856:6:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5847:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5847:3:16"
																		},
																		"nativeSrc": "5847:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5847:16:16"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "5865:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "5865:3:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5844:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "5844:2:16"
																},
																"nativeSrc": "5844:25:16",
																"nodeType": "YulFunctionCall",
																"src": "5844:25:16"
															},
															"nativeSrc": "5841:112:16",
															"nodeType": "YulIf",
															"src": "5841:112:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5999:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "5999:3:16"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "6004:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "6004:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6009:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "6009:6:16"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "5962:36:16",
																	"nodeType": "YulIdentifier",
																	"src": "5962:36:16"
																},
																"nativeSrc": "5962:54:16",
																"nodeType": "YulFunctionCall",
																"src": "5962:54:16"
															},
															"nativeSrc": "5962:54:16",
															"nodeType": "YulExpressionStatement",
															"src": "5962:54:16"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "5599:423:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "5655:3:16",
														"nodeType": "YulTypedName",
														"src": "5655:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5660:6:16",
														"nodeType": "YulTypedName",
														"src": "5660:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5668:3:16",
														"nodeType": "YulTypedName",
														"src": "5668:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "5676:5:16",
														"nodeType": "YulTypedName",
														"src": "5676:5:16",
														"type": ""
													}
												],
												"src": "5599:423:16"
											},
											{
												"body": {
													"nativeSrc": "6102:277:16",
													"nodeType": "YulBlock",
													"src": "6102:277:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "6151:83:16",
																"nodeType": "YulBlock",
																"src": "6151:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "6153:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "6153:77:16"
																			},
																			"nativeSrc": "6153:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "6153:79:16"
																		},
																		"nativeSrc": "6153:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "6153:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "6130:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "6130:6:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6138:4:16",
																						"nodeType": "YulLiteral",
																						"src": "6138:4:16",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6126:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "6126:3:16"
																				},
																				"nativeSrc": "6126:17:16",
																				"nodeType": "YulFunctionCall",
																				"src": "6126:17:16"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "6145:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "6145:3:16"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "6122:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6122:3:16"
																		},
																		"nativeSrc": "6122:27:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6122:27:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6115:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "6115:6:16"
																},
																"nativeSrc": "6115:35:16",
																"nodeType": "YulFunctionCall",
																"src": "6115:35:16"
															},
															"nativeSrc": "6112:122:16",
															"nodeType": "YulIf",
															"src": "6112:122:16"
														},
														{
															"nativeSrc": "6243:34:16",
															"nodeType": "YulVariableDeclaration",
															"src": "6243:34:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6270:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "6270:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6257:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "6257:12:16"
																},
																"nativeSrc": "6257:20:16",
																"nodeType": "YulFunctionCall",
																"src": "6257:20:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6247:6:16",
																	"nodeType": "YulTypedName",
																	"src": "6247:6:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6286:87:16",
															"nodeType": "YulAssignment",
															"src": "6286:87:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "6346:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "6346:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:4:16",
																				"nodeType": "YulLiteral",
																				"src": "6354:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6342:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6342:3:16"
																		},
																		"nativeSrc": "6342:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6342:17:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6361:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "6361:6:16"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6369:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "6369:3:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "6295:46:16",
																	"nodeType": "YulIdentifier",
																	"src": "6295:46:16"
																},
																"nativeSrc": "6295:78:16",
																"nodeType": "YulFunctionCall",
																"src": "6295:78:16"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "6286:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "6286:5:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "6041:338:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6080:6:16",
														"nodeType": "YulTypedName",
														"src": "6080:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6088:3:16",
														"nodeType": "YulTypedName",
														"src": "6088:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "6096:5:16",
														"nodeType": "YulTypedName",
														"src": "6096:5:16",
														"type": ""
													}
												],
												"src": "6041:338:16"
											},
											{
												"body": {
													"nativeSrc": "6525:943:16",
													"nodeType": "YulBlock",
													"src": "6525:943:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "6572:83:16",
																"nodeType": "YulBlock",
																"src": "6572:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6574:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "6574:77:16"
																			},
																			"nativeSrc": "6574:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "6574:79:16"
																		},
																		"nativeSrc": "6574:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "6574:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6546:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "6546:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6555:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "6555:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6542:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6542:3:16"
																		},
																		"nativeSrc": "6542:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6542:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6567:3:16",
																		"nodeType": "YulLiteral",
																		"src": "6567:3:16",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6538:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "6538:3:16"
																},
																"nativeSrc": "6538:33:16",
																"nodeType": "YulFunctionCall",
																"src": "6538:33:16"
															},
															"nativeSrc": "6535:120:16",
															"nodeType": "YulIf",
															"src": "6535:120:16"
														},
														{
															"nativeSrc": "6665:117:16",
															"nodeType": "YulBlock",
															"src": "6665:117:16",
															"statements": [
																{
																	"nativeSrc": "6680:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6680:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6694:1:16",
																		"nodeType": "YulLiteral",
																		"src": "6694:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6684:6:16",
																			"nodeType": "YulTypedName",
																			"src": "6684:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6709:63:16",
																	"nodeType": "YulAssignment",
																	"src": "6709:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6744:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "6744:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6755:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "6755:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6740:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "6740:3:16"
																				},
																				"nativeSrc": "6740:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "6740:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6764:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "6764:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6719:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "6719:20:16"
																		},
																		"nativeSrc": "6719:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6719:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6709:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "6709:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6792:118:16",
															"nodeType": "YulBlock",
															"src": "6792:118:16",
															"statements": [
																{
																	"nativeSrc": "6807:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6807:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6821:2:16",
																		"nodeType": "YulLiteral",
																		"src": "6821:2:16",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6811:6:16",
																			"nodeType": "YulTypedName",
																			"src": "6811:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6837:63:16",
																	"nodeType": "YulAssignment",
																	"src": "6837:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6872:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "6872:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6883:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "6883:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6868:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "6868:3:16"
																				},
																				"nativeSrc": "6868:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "6868:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6892:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "6892:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6847:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "6847:20:16"
																		},
																		"nativeSrc": "6847:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6847:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6837:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "6837:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6920:118:16",
															"nodeType": "YulBlock",
															"src": "6920:118:16",
															"statements": [
																{
																	"nativeSrc": "6935:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6935:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6949:2:16",
																		"nodeType": "YulLiteral",
																		"src": "6949:2:16",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6939:6:16",
																			"nodeType": "YulTypedName",
																			"src": "6939:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6965:63:16",
																	"nodeType": "YulAssignment",
																	"src": "6965:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7000:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "7000:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7011:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "7011:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6996:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "6996:3:16"
																				},
																				"nativeSrc": "6996:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "6996:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7020:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "7020:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6975:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "6975:20:16"
																		},
																		"nativeSrc": "6975:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6975:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "6965:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "6965:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7048:115:16",
															"nodeType": "YulBlock",
															"src": "7048:115:16",
															"statements": [
																{
																	"nativeSrc": "7063:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7063:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7077:2:16",
																		"nodeType": "YulLiteral",
																		"src": "7077:2:16",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7067:6:16",
																			"nodeType": "YulTypedName",
																			"src": "7067:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7093:60:16",
																	"nodeType": "YulAssignment",
																	"src": "7093:60:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7125:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "7125:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7136:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "7136:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7121:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "7121:3:16"
																				},
																				"nativeSrc": "7121:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "7121:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7145:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "7145:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "7103:17:16",
																			"nodeType": "YulIdentifier",
																			"src": "7103:17:16"
																		},
																		"nativeSrc": "7103:50:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7103:50:16"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "7093:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "7093:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7173:288:16",
															"nodeType": "YulBlock",
															"src": "7173:288:16",
															"statements": [
																{
																	"nativeSrc": "7188:47:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7188:47:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7219:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "7219:9:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7230:3:16",
																						"nodeType": "YulLiteral",
																						"src": "7230:3:16",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7215:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "7215:3:16"
																				},
																				"nativeSrc": "7215:19:16",
																				"nodeType": "YulFunctionCall",
																				"src": "7215:19:16"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "7202:12:16",
																			"nodeType": "YulIdentifier",
																			"src": "7202:12:16"
																		},
																		"nativeSrc": "7202:33:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7202:33:16"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7192:6:16",
																			"nodeType": "YulTypedName",
																			"src": "7192:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "7282:83:16",
																		"nodeType": "YulBlock",
																		"src": "7282:83:16",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "7284:77:16",
																						"nodeType": "YulIdentifier",
																						"src": "7284:77:16"
																					},
																					"nativeSrc": "7284:79:16",
																					"nodeType": "YulFunctionCall",
																					"src": "7284:79:16"
																				},
																				"nativeSrc": "7284:79:16",
																				"nodeType": "YulExpressionStatement",
																				"src": "7284:79:16"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7254:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "7254:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7262:18:16",
																				"nodeType": "YulLiteral",
																				"src": "7262:18:16",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7251:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "7251:2:16"
																		},
																		"nativeSrc": "7251:30:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7251:30:16"
																	},
																	"nativeSrc": "7248:117:16",
																	"nodeType": "YulIf",
																	"src": "7248:117:16"
																},
																{
																	"nativeSrc": "7379:72:16",
																	"nodeType": "YulAssignment",
																	"src": "7379:72:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7423:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "7423:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7434:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "7434:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7419:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "7419:3:16"
																				},
																				"nativeSrc": "7419:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "7419:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7443:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "7443:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "7389:29:16",
																			"nodeType": "YulIdentifier",
																			"src": "7389:29:16"
																		},
																		"nativeSrc": "7389:62:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7389:62:16"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "7379:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "7379:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_boolt_bytes_memory_ptr",
												"nativeSrc": "6385:1083:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6463:9:16",
														"nodeType": "YulTypedName",
														"src": "6463:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6474:7:16",
														"nodeType": "YulTypedName",
														"src": "6474:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6486:6:16",
														"nodeType": "YulTypedName",
														"src": "6486:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6494:6:16",
														"nodeType": "YulTypedName",
														"src": "6494:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6502:6:16",
														"nodeType": "YulTypedName",
														"src": "6502:6:16",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "6510:6:16",
														"nodeType": "YulTypedName",
														"src": "6510:6:16",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "6518:6:16",
														"nodeType": "YulTypedName",
														"src": "6518:6:16",
														"type": ""
													}
												],
												"src": "6385:1083:16"
											},
											{
												"body": {
													"nativeSrc": "7537:80:16",
													"nodeType": "YulBlock",
													"src": "7537:80:16",
													"statements": [
														{
															"nativeSrc": "7547:22:16",
															"nodeType": "YulAssignment",
															"src": "7547:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7562:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "7562:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7556:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "7556:5:16"
																},
																"nativeSrc": "7556:13:16",
																"nodeType": "YulFunctionCall",
																"src": "7556:13:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7547:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "7547:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7605:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "7605:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "7578:26:16",
																	"nodeType": "YulIdentifier",
																	"src": "7578:26:16"
																},
																"nativeSrc": "7578:33:16",
																"nodeType": "YulFunctionCall",
																"src": "7578:33:16"
															},
															"nativeSrc": "7578:33:16",
															"nodeType": "YulExpressionStatement",
															"src": "7578:33:16"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "7474:143:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7515:6:16",
														"nodeType": "YulTypedName",
														"src": "7515:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7523:3:16",
														"nodeType": "YulTypedName",
														"src": "7523:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7531:5:16",
														"nodeType": "YulTypedName",
														"src": "7531:5:16",
														"type": ""
													}
												],
												"src": "7474:143:16"
											},
											{
												"body": {
													"nativeSrc": "7700:274:16",
													"nodeType": "YulBlock",
													"src": "7700:274:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "7746:83:16",
																"nodeType": "YulBlock",
																"src": "7746:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7748:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "7748:77:16"
																			},
																			"nativeSrc": "7748:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "7748:79:16"
																		},
																		"nativeSrc": "7748:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "7748:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7721:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "7721:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7730:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "7730:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7717:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "7717:3:16"
																		},
																		"nativeSrc": "7717:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7717:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7742:2:16",
																		"nodeType": "YulLiteral",
																		"src": "7742:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7713:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "7713:3:16"
																},
																"nativeSrc": "7713:32:16",
																"nodeType": "YulFunctionCall",
																"src": "7713:32:16"
															},
															"nativeSrc": "7710:119:16",
															"nodeType": "YulIf",
															"src": "7710:119:16"
														},
														{
															"nativeSrc": "7839:128:16",
															"nodeType": "YulBlock",
															"src": "7839:128:16",
															"statements": [
																{
																	"nativeSrc": "7854:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7854:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7868:1:16",
																		"nodeType": "YulLiteral",
																		"src": "7868:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7858:6:16",
																			"nodeType": "YulTypedName",
																			"src": "7858:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7883:74:16",
																	"nodeType": "YulAssignment",
																	"src": "7883:74:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7929:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "7929:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7940:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "7940:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7925:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "7925:3:16"
																				},
																				"nativeSrc": "7925:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "7925:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7949:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "7949:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "7893:31:16",
																			"nodeType": "YulIdentifier",
																			"src": "7893:31:16"
																		},
																		"nativeSrc": "7893:64:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7893:64:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7883:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "7883:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "7623:351:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7670:9:16",
														"nodeType": "YulTypedName",
														"src": "7670:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7681:7:16",
														"nodeType": "YulTypedName",
														"src": "7681:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7693:6:16",
														"nodeType": "YulTypedName",
														"src": "7693:6:16",
														"type": ""
													}
												],
												"src": "7623:351:16"
											},
											{
												"body": {
													"nativeSrc": "8106:206:16",
													"nodeType": "YulBlock",
													"src": "8106:206:16",
													"statements": [
														{
															"nativeSrc": "8116:26:16",
															"nodeType": "YulAssignment",
															"src": "8116:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8128:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "8128:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8139:2:16",
																		"nodeType": "YulLiteral",
																		"src": "8139:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8124:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "8124:3:16"
																},
																"nativeSrc": "8124:18:16",
																"nodeType": "YulFunctionCall",
																"src": "8124:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8116:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "8116:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8196:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "8196:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8209:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "8209:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8220:1:16",
																				"nodeType": "YulLiteral",
																				"src": "8220:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8205:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "8205:3:16"
																		},
																		"nativeSrc": "8205:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8205:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8152:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "8152:43:16"
																},
																"nativeSrc": "8152:71:16",
																"nodeType": "YulFunctionCall",
																"src": "8152:71:16"
															},
															"nativeSrc": "8152:71:16",
															"nodeType": "YulExpressionStatement",
															"src": "8152:71:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8277:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "8277:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8290:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "8290:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8301:2:16",
																				"nodeType": "YulLiteral",
																				"src": "8301:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8286:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "8286:3:16"
																		},
																		"nativeSrc": "8286:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8286:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8233:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "8233:43:16"
																},
																"nativeSrc": "8233:72:16",
																"nodeType": "YulFunctionCall",
																"src": "8233:72:16"
															},
															"nativeSrc": "8233:72:16",
															"nodeType": "YulExpressionStatement",
															"src": "8233:72:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "7980:332:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8070:9:16",
														"nodeType": "YulTypedName",
														"src": "8070:9:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8082:6:16",
														"nodeType": "YulTypedName",
														"src": "8082:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8090:6:16",
														"nodeType": "YulTypedName",
														"src": "8090:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8101:4:16",
														"nodeType": "YulTypedName",
														"src": "8101:4:16",
														"type": ""
													}
												],
												"src": "7980:332:16"
											},
											{
												"body": {
													"nativeSrc": "8413:73:16",
													"nodeType": "YulBlock",
													"src": "8413:73:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8430:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "8430:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8435:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "8435:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8423:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "8423:6:16"
																},
																"nativeSrc": "8423:19:16",
																"nodeType": "YulFunctionCall",
																"src": "8423:19:16"
															},
															"nativeSrc": "8423:19:16",
															"nodeType": "YulExpressionStatement",
															"src": "8423:19:16"
														},
														{
															"nativeSrc": "8451:29:16",
															"nodeType": "YulAssignment",
															"src": "8451:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8470:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "8470:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8475:4:16",
																		"nodeType": "YulLiteral",
																		"src": "8475:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8466:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "8466:3:16"
																},
																"nativeSrc": "8466:14:16",
																"nodeType": "YulFunctionCall",
																"src": "8466:14:16"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "8451:11:16",
																	"nodeType": "YulIdentifier",
																	"src": "8451:11:16"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "8318:168:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8385:3:16",
														"nodeType": "YulTypedName",
														"src": "8385:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8390:6:16",
														"nodeType": "YulTypedName",
														"src": "8390:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "8401:11:16",
														"nodeType": "YulTypedName",
														"src": "8401:11:16",
														"type": ""
													}
												],
												"src": "8318:168:16"
											},
											{
												"body": {
													"nativeSrc": "8598:8:16",
													"nodeType": "YulBlock",
													"src": "8598:8:16",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nativeSrc": "8492:114:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8590:6:16",
														"nodeType": "YulTypedName",
														"src": "8590:6:16",
														"type": ""
													}
												],
												"src": "8492:114:16"
											},
											{
												"body": {
													"nativeSrc": "8757:217:16",
													"nodeType": "YulBlock",
													"src": "8757:217:16",
													"statements": [
														{
															"nativeSrc": "8767:72:16",
															"nodeType": "YulAssignment",
															"src": "8767:72:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8832:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "8832:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8837:1:16",
																		"nodeType": "YulLiteral",
																		"src": "8837:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "8774:57:16",
																	"nodeType": "YulIdentifier",
																	"src": "8774:57:16"
																},
																"nativeSrc": "8774:65:16",
																"nodeType": "YulFunctionCall",
																"src": "8774:65:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8767:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "8767:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8937:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "8937:3:16"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nativeSrc": "8848:88:16",
																	"nodeType": "YulIdentifier",
																	"src": "8848:88:16"
																},
																"nativeSrc": "8848:93:16",
																"nodeType": "YulFunctionCall",
																"src": "8848:93:16"
															},
															"nativeSrc": "8848:93:16",
															"nodeType": "YulExpressionStatement",
															"src": "8848:93:16"
														},
														{
															"nativeSrc": "8950:18:16",
															"nodeType": "YulAssignment",
															"src": "8950:18:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8961:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "8961:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8966:1:16",
																		"nodeType": "YulLiteral",
																		"src": "8966:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8957:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "8957:3:16"
																},
																"nativeSrc": "8957:11:16",
																"nodeType": "YulFunctionCall",
																"src": "8957:11:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8950:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "8950:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "8612:362:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8745:3:16",
														"nodeType": "YulTypedName",
														"src": "8745:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8753:3:16",
														"nodeType": "YulTypedName",
														"src": "8753:3:16",
														"type": ""
													}
												],
												"src": "8612:362:16"
											},
											{
												"body": {
													"nativeSrc": "9256:571:16",
													"nodeType": "YulBlock",
													"src": "9256:571:16",
													"statements": [
														{
															"nativeSrc": "9266:27:16",
															"nodeType": "YulAssignment",
															"src": "9266:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9278:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "9278:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9289:3:16",
																		"nodeType": "YulLiteral",
																		"src": "9289:3:16",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9274:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "9274:3:16"
																},
																"nativeSrc": "9274:19:16",
																"nodeType": "YulFunctionCall",
																"src": "9274:19:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9266:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "9266:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9347:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "9347:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9360:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "9360:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9371:1:16",
																				"nodeType": "YulLiteral",
																				"src": "9371:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9356:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "9356:3:16"
																		},
																		"nativeSrc": "9356:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9356:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9303:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "9303:43:16"
																},
																"nativeSrc": "9303:71:16",
																"nodeType": "YulFunctionCall",
																"src": "9303:71:16"
															},
															"nativeSrc": "9303:71:16",
															"nodeType": "YulExpressionStatement",
															"src": "9303:71:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9428:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "9428:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9441:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "9441:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9452:2:16",
																				"nodeType": "YulLiteral",
																				"src": "9452:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9437:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "9437:3:16"
																		},
																		"nativeSrc": "9437:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9437:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9384:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "9384:43:16"
																},
																"nativeSrc": "9384:72:16",
																"nodeType": "YulFunctionCall",
																"src": "9384:72:16"
															},
															"nativeSrc": "9384:72:16",
															"nodeType": "YulExpressionStatement",
															"src": "9384:72:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9510:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "9510:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9523:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "9523:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9534:2:16",
																				"nodeType": "YulLiteral",
																				"src": "9534:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9519:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "9519:3:16"
																		},
																		"nativeSrc": "9519:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9519:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9466:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "9466:43:16"
																},
																"nativeSrc": "9466:72:16",
																"nodeType": "YulFunctionCall",
																"src": "9466:72:16"
															},
															"nativeSrc": "9466:72:16",
															"nodeType": "YulExpressionStatement",
															"src": "9466:72:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "9586:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "9586:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9599:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "9599:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9610:2:16",
																				"nodeType": "YulLiteral",
																				"src": "9610:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9595:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "9595:3:16"
																		},
																		"nativeSrc": "9595:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9595:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "9548:37:16",
																	"nodeType": "YulIdentifier",
																	"src": "9548:37:16"
																},
																"nativeSrc": "9548:66:16",
																"nodeType": "YulFunctionCall",
																"src": "9548:66:16"
															},
															"nativeSrc": "9548:66:16",
															"nodeType": "YulExpressionStatement",
															"src": "9548:66:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9635:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "9635:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9646:3:16",
																				"nodeType": "YulLiteral",
																				"src": "9646:3:16",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9631:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "9631:3:16"
																		},
																		"nativeSrc": "9631:19:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9631:19:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9656:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "9656:4:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9662:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "9662:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9652:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "9652:3:16"
																		},
																		"nativeSrc": "9652:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9652:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9624:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "9624:6:16"
																},
																"nativeSrc": "9624:49:16",
																"nodeType": "YulFunctionCall",
																"src": "9624:49:16"
															},
															"nativeSrc": "9624:49:16",
															"nodeType": "YulExpressionStatement",
															"src": "9624:49:16"
														},
														{
															"nativeSrc": "9682:138:16",
															"nodeType": "YulAssignment",
															"src": "9682:138:16",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9815:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "9815:4:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "9690:123:16",
																	"nodeType": "YulIdentifier",
																	"src": "9690:123:16"
																},
																"nativeSrc": "9690:130:16",
																"nodeType": "YulFunctionCall",
																"src": "9690:130:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9682:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "9682:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bool_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_bool_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "8980:847:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9204:9:16",
														"nodeType": "YulTypedName",
														"src": "9204:9:16",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9216:6:16",
														"nodeType": "YulTypedName",
														"src": "9216:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9224:6:16",
														"nodeType": "YulTypedName",
														"src": "9224:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9232:6:16",
														"nodeType": "YulTypedName",
														"src": "9232:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9240:6:16",
														"nodeType": "YulTypedName",
														"src": "9240:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9251:4:16",
														"nodeType": "YulTypedName",
														"src": "9251:4:16",
														"type": ""
													}
												],
												"src": "8980:847:16"
											},
											{
												"body": {
													"nativeSrc": "9946:34:16",
													"nodeType": "YulBlock",
													"src": "9946:34:16",
													"statements": [
														{
															"nativeSrc": "9956:18:16",
															"nodeType": "YulAssignment",
															"src": "9956:18:16",
															"value": {
																"name": "pos",
																"nativeSrc": "9971:3:16",
																"nodeType": "YulIdentifier",
																"src": "9971:3:16"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "9956:11:16",
																	"nodeType": "YulIdentifier",
																	"src": "9956:11:16"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "9833:147:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9918:3:16",
														"nodeType": "YulTypedName",
														"src": "9918:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9923:6:16",
														"nodeType": "YulTypedName",
														"src": "9923:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "9934:11:16",
														"nodeType": "YulTypedName",
														"src": "9934:11:16",
														"type": ""
													}
												],
												"src": "9833:147:16"
											},
											{
												"body": {
													"nativeSrc": "10149:235:16",
													"nodeType": "YulBlock",
													"src": "10149:235:16",
													"statements": [
														{
															"nativeSrc": "10159:90:16",
															"nodeType": "YulAssignment",
															"src": "10159:90:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10242:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "10242:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10247:1:16",
																		"nodeType": "YulLiteral",
																		"src": "10247:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "10166:75:16",
																	"nodeType": "YulIdentifier",
																	"src": "10166:75:16"
																},
																"nativeSrc": "10166:83:16",
																"nodeType": "YulFunctionCall",
																"src": "10166:83:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10159:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "10159:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10347:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "10347:3:16"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nativeSrc": "10258:88:16",
																	"nodeType": "YulIdentifier",
																	"src": "10258:88:16"
																},
																"nativeSrc": "10258:93:16",
																"nodeType": "YulFunctionCall",
																"src": "10258:93:16"
															},
															"nativeSrc": "10258:93:16",
															"nodeType": "YulExpressionStatement",
															"src": "10258:93:16"
														},
														{
															"nativeSrc": "10360:18:16",
															"nodeType": "YulAssignment",
															"src": "10360:18:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10371:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "10371:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10376:1:16",
																		"nodeType": "YulLiteral",
																		"src": "10376:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10367:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "10367:3:16"
																},
																"nativeSrc": "10367:11:16",
																"nodeType": "YulFunctionCall",
																"src": "10367:11:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10360:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "10360:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "9986:398:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10137:3:16",
														"nodeType": "YulTypedName",
														"src": "10137:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10145:3:16",
														"nodeType": "YulTypedName",
														"src": "10145:3:16",
														"type": ""
													}
												],
												"src": "9986:398:16"
											},
											{
												"body": {
													"nativeSrc": "10578:191:16",
													"nodeType": "YulBlock",
													"src": "10578:191:16",
													"statements": [
														{
															"nativeSrc": "10589:154:16",
															"nodeType": "YulAssignment",
															"src": "10589:154:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10739:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "10739:3:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "10596:141:16",
																	"nodeType": "YulIdentifier",
																	"src": "10596:141:16"
																},
																"nativeSrc": "10596:147:16",
																"nodeType": "YulFunctionCall",
																"src": "10596:147:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10589:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "10589:3:16"
																}
															]
														},
														{
															"nativeSrc": "10753:10:16",
															"nodeType": "YulAssignment",
															"src": "10753:10:16",
															"value": {
																"name": "pos",
																"nativeSrc": "10760:3:16",
																"nodeType": "YulIdentifier",
																"src": "10760:3:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10753:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "10753:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "10390:379:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10565:3:16",
														"nodeType": "YulTypedName",
														"src": "10565:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10574:3:16",
														"nodeType": "YulTypedName",
														"src": "10574:3:16",
														"type": ""
													}
												],
												"src": "10390:379:16"
											},
											{
												"body": {
													"nativeSrc": "10871:73:16",
													"nodeType": "YulBlock",
													"src": "10871:73:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10888:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "10888:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10893:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "10893:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10881:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "10881:6:16"
																},
																"nativeSrc": "10881:19:16",
																"nodeType": "YulFunctionCall",
																"src": "10881:19:16"
															},
															"nativeSrc": "10881:19:16",
															"nodeType": "YulExpressionStatement",
															"src": "10881:19:16"
														},
														{
															"nativeSrc": "10909:29:16",
															"nodeType": "YulAssignment",
															"src": "10909:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10928:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "10928:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10933:4:16",
																		"nodeType": "YulLiteral",
																		"src": "10933:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10924:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "10924:3:16"
																},
																"nativeSrc": "10924:14:16",
																"nodeType": "YulFunctionCall",
																"src": "10924:14:16"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "10909:11:16",
																	"nodeType": "YulIdentifier",
																	"src": "10909:11:16"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "10775:169:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10843:3:16",
														"nodeType": "YulTypedName",
														"src": "10843:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10848:6:16",
														"nodeType": "YulTypedName",
														"src": "10848:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "10859:11:16",
														"nodeType": "YulTypedName",
														"src": "10859:11:16",
														"type": ""
													}
												],
												"src": "10775:169:16"
											},
											{
												"body": {
													"nativeSrc": "11056:50:16",
													"nodeType": "YulBlock",
													"src": "11056:50:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11078:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "11078:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11086:1:16",
																				"nodeType": "YulLiteral",
																				"src": "11086:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11074:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "11074:3:16"
																		},
																		"nativeSrc": "11074:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11074:14:16"
																	},
																	{
																		"hexValue": "4661696c6564",
																		"kind": "string",
																		"nativeSrc": "11090:8:16",
																		"nodeType": "YulLiteral",
																		"src": "11090:8:16",
																		"type": "",
																		"value": "Failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11067:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "11067:6:16"
																},
																"nativeSrc": "11067:32:16",
																"nodeType": "YulFunctionCall",
																"src": "11067:32:16"
															},
															"nativeSrc": "11067:32:16",
															"nodeType": "YulExpressionStatement",
															"src": "11067:32:16"
														}
													]
												},
												"name": "store_literal_in_memory_329b6695cc078fec6f5eaa1763a4568ff856dfa63ebfa86719d6a43e911ffb23",
												"nativeSrc": "10950:156:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11048:6:16",
														"nodeType": "YulTypedName",
														"src": "11048:6:16",
														"type": ""
													}
												],
												"src": "10950:156:16"
											},
											{
												"body": {
													"nativeSrc": "11258:219:16",
													"nodeType": "YulBlock",
													"src": "11258:219:16",
													"statements": [
														{
															"nativeSrc": "11268:73:16",
															"nodeType": "YulAssignment",
															"src": "11268:73:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11334:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "11334:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11339:1:16",
																		"nodeType": "YulLiteral",
																		"src": "11339:1:16",
																		"type": "",
																		"value": "6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11275:58:16",
																	"nodeType": "YulIdentifier",
																	"src": "11275:58:16"
																},
																"nativeSrc": "11275:66:16",
																"nodeType": "YulFunctionCall",
																"src": "11275:66:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11268:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "11268:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11439:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "11439:3:16"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_329b6695cc078fec6f5eaa1763a4568ff856dfa63ebfa86719d6a43e911ffb23",
																	"nativeSrc": "11350:88:16",
																	"nodeType": "YulIdentifier",
																	"src": "11350:88:16"
																},
																"nativeSrc": "11350:93:16",
																"nodeType": "YulFunctionCall",
																"src": "11350:93:16"
															},
															"nativeSrc": "11350:93:16",
															"nodeType": "YulExpressionStatement",
															"src": "11350:93:16"
														},
														{
															"nativeSrc": "11452:19:16",
															"nodeType": "YulAssignment",
															"src": "11452:19:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11463:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "11463:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11468:2:16",
																		"nodeType": "YulLiteral",
																		"src": "11468:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11459:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "11459:3:16"
																},
																"nativeSrc": "11459:12:16",
																"nodeType": "YulFunctionCall",
																"src": "11459:12:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11452:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "11452:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_329b6695cc078fec6f5eaa1763a4568ff856dfa63ebfa86719d6a43e911ffb23_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11112:365:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11246:3:16",
														"nodeType": "YulTypedName",
														"src": "11246:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11254:3:16",
														"nodeType": "YulTypedName",
														"src": "11254:3:16",
														"type": ""
													}
												],
												"src": "11112:365:16"
											},
											{
												"body": {
													"nativeSrc": "11654:248:16",
													"nodeType": "YulBlock",
													"src": "11654:248:16",
													"statements": [
														{
															"nativeSrc": "11664:26:16",
															"nodeType": "YulAssignment",
															"src": "11664:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11676:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "11676:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11687:2:16",
																		"nodeType": "YulLiteral",
																		"src": "11687:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11672:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "11672:3:16"
																},
																"nativeSrc": "11672:18:16",
																"nodeType": "YulFunctionCall",
																"src": "11672:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11664:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "11664:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11711:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "11711:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11722:1:16",
																				"nodeType": "YulLiteral",
																				"src": "11722:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11707:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "11707:3:16"
																		},
																		"nativeSrc": "11707:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11707:17:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11730:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "11730:4:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11736:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "11736:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11726:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "11726:3:16"
																		},
																		"nativeSrc": "11726:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11726:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11700:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "11700:6:16"
																},
																"nativeSrc": "11700:47:16",
																"nodeType": "YulFunctionCall",
																"src": "11700:47:16"
															},
															"nativeSrc": "11700:47:16",
															"nodeType": "YulExpressionStatement",
															"src": "11700:47:16"
														},
														{
															"nativeSrc": "11756:139:16",
															"nodeType": "YulAssignment",
															"src": "11756:139:16",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11890:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "11890:4:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_329b6695cc078fec6f5eaa1763a4568ff856dfa63ebfa86719d6a43e911ffb23_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11764:124:16",
																	"nodeType": "YulIdentifier",
																	"src": "11764:124:16"
																},
																"nativeSrc": "11764:131:16",
																"nodeType": "YulFunctionCall",
																"src": "11764:131:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11756:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "11756:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_329b6695cc078fec6f5eaa1763a4568ff856dfa63ebfa86719d6a43e911ffb23__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11483:419:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11634:9:16",
														"nodeType": "YulTypedName",
														"src": "11634:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11649:4:16",
														"nodeType": "YulTypedName",
														"src": "11649:4:16",
														"type": ""
													}
												],
												"src": "11483:419:16"
											},
											{
												"body": {
													"nativeSrc": "11966:40:16",
													"nodeType": "YulBlock",
													"src": "11966:40:16",
													"statements": [
														{
															"nativeSrc": "11977:22:16",
															"nodeType": "YulAssignment",
															"src": "11977:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11993:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "11993:5:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11987:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "11987:5:16"
																},
																"nativeSrc": "11987:12:16",
																"nodeType": "YulFunctionCall",
																"src": "11987:12:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "11977:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "11977:6:16"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "11908:98:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11949:5:16",
														"nodeType": "YulTypedName",
														"src": "11949:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "11959:6:16",
														"nodeType": "YulTypedName",
														"src": "11959:6:16",
														"type": ""
													}
												],
												"src": "11908:98:16"
											},
											{
												"body": {
													"nativeSrc": "12074:77:16",
													"nodeType": "YulBlock",
													"src": "12074:77:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "12091:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "12091:3:16"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "12096:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "12096:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12101:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "12101:6:16"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "12085:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "12085:5:16"
																},
																"nativeSrc": "12085:23:16",
																"nodeType": "YulFunctionCall",
																"src": "12085:23:16"
															},
															"nativeSrc": "12085:23:16",
															"nodeType": "YulExpressionStatement",
															"src": "12085:23:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "12128:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "12128:3:16"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "12133:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "12133:6:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12124:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "12124:3:16"
																		},
																		"nativeSrc": "12124:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12124:16:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12142:1:16",
																		"nodeType": "YulLiteral",
																		"src": "12142:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12117:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "12117:6:16"
																},
																"nativeSrc": "12117:27:16",
																"nodeType": "YulFunctionCall",
																"src": "12117:27:16"
															},
															"nativeSrc": "12117:27:16",
															"nodeType": "YulExpressionStatement",
															"src": "12117:27:16"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "12012:139:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "12056:3:16",
														"nodeType": "YulTypedName",
														"src": "12056:3:16",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "12061:3:16",
														"nodeType": "YulTypedName",
														"src": "12061:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "12066:6:16",
														"nodeType": "YulTypedName",
														"src": "12066:6:16",
														"type": ""
													}
												],
												"src": "12012:139:16"
											},
											{
												"body": {
													"nativeSrc": "12247:283:16",
													"nodeType": "YulBlock",
													"src": "12247:283:16",
													"statements": [
														{
															"nativeSrc": "12257:52:16",
															"nodeType": "YulVariableDeclaration",
															"src": "12257:52:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12303:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "12303:5:16"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "12271:31:16",
																	"nodeType": "YulIdentifier",
																	"src": "12271:31:16"
																},
																"nativeSrc": "12271:38:16",
																"nodeType": "YulFunctionCall",
																"src": "12271:38:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "12261:6:16",
																	"nodeType": "YulTypedName",
																	"src": "12261:6:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12318:77:16",
															"nodeType": "YulAssignment",
															"src": "12318:77:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12383:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "12383:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12388:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "12388:6:16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "12325:57:16",
																	"nodeType": "YulIdentifier",
																	"src": "12325:57:16"
																},
																"nativeSrc": "12325:70:16",
																"nodeType": "YulFunctionCall",
																"src": "12325:70:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12318:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "12318:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12443:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "12443:5:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12450:4:16",
																				"nodeType": "YulLiteral",
																				"src": "12450:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12439:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "12439:3:16"
																		},
																		"nativeSrc": "12439:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12439:16:16"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "12457:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "12457:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12462:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "12462:6:16"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "12404:34:16",
																	"nodeType": "YulIdentifier",
																	"src": "12404:34:16"
																},
																"nativeSrc": "12404:65:16",
																"nodeType": "YulFunctionCall",
																"src": "12404:65:16"
															},
															"nativeSrc": "12404:65:16",
															"nodeType": "YulExpressionStatement",
															"src": "12404:65:16"
														},
														{
															"nativeSrc": "12478:46:16",
															"nodeType": "YulAssignment",
															"src": "12478:46:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12489:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "12489:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "12516:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "12516:6:16"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "12494:21:16",
																			"nodeType": "YulIdentifier",
																			"src": "12494:21:16"
																		},
																		"nativeSrc": "12494:29:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12494:29:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12485:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "12485:3:16"
																},
																"nativeSrc": "12485:39:16",
																"nodeType": "YulFunctionCall",
																"src": "12485:39:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12478:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "12478:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "12157:373:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12228:5:16",
														"nodeType": "YulTypedName",
														"src": "12228:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12235:3:16",
														"nodeType": "YulTypedName",
														"src": "12235:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12243:3:16",
														"nodeType": "YulTypedName",
														"src": "12243:3:16",
														"type": ""
													}
												],
												"src": "12157:373:16"
											},
											{
												"body": {
													"nativeSrc": "12758:517:16",
													"nodeType": "YulBlock",
													"src": "12758:517:16",
													"statements": [
														{
															"nativeSrc": "12768:27:16",
															"nodeType": "YulAssignment",
															"src": "12768:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12780:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "12780:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12791:3:16",
																		"nodeType": "YulLiteral",
																		"src": "12791:3:16",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12776:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "12776:3:16"
																},
																"nativeSrc": "12776:19:16",
																"nodeType": "YulFunctionCall",
																"src": "12776:19:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12768:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "12768:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12849:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "12849:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12862:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "12862:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12873:1:16",
																				"nodeType": "YulLiteral",
																				"src": "12873:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12858:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "12858:3:16"
																		},
																		"nativeSrc": "12858:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12858:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12805:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "12805:43:16"
																},
																"nativeSrc": "12805:71:16",
																"nodeType": "YulFunctionCall",
																"src": "12805:71:16"
															},
															"nativeSrc": "12805:71:16",
															"nodeType": "YulExpressionStatement",
															"src": "12805:71:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12930:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "12930:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12943:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "12943:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12954:2:16",
																				"nodeType": "YulLiteral",
																				"src": "12954:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12939:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "12939:3:16"
																		},
																		"nativeSrc": "12939:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12939:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12886:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "12886:43:16"
																},
																"nativeSrc": "12886:72:16",
																"nodeType": "YulFunctionCall",
																"src": "12886:72:16"
															},
															"nativeSrc": "12886:72:16",
															"nodeType": "YulExpressionStatement",
															"src": "12886:72:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13012:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "13012:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13025:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "13025:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13036:2:16",
																				"nodeType": "YulLiteral",
																				"src": "13036:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13021:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "13021:3:16"
																		},
																		"nativeSrc": "13021:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "13021:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12968:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "12968:43:16"
																},
																"nativeSrc": "12968:72:16",
																"nodeType": "YulFunctionCall",
																"src": "12968:72:16"
															},
															"nativeSrc": "12968:72:16",
															"nodeType": "YulExpressionStatement",
															"src": "12968:72:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "13088:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "13088:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13101:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "13101:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13112:2:16",
																				"nodeType": "YulLiteral",
																				"src": "13112:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13097:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "13097:3:16"
																		},
																		"nativeSrc": "13097:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "13097:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "13050:37:16",
																	"nodeType": "YulIdentifier",
																	"src": "13050:37:16"
																},
																"nativeSrc": "13050:66:16",
																"nodeType": "YulFunctionCall",
																"src": "13050:66:16"
															},
															"nativeSrc": "13050:66:16",
															"nodeType": "YulExpressionStatement",
															"src": "13050:66:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13137:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "13137:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13148:3:16",
																				"nodeType": "YulLiteral",
																				"src": "13148:3:16",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13133:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "13133:3:16"
																		},
																		"nativeSrc": "13133:19:16",
																		"nodeType": "YulFunctionCall",
																		"src": "13133:19:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13158:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "13158:4:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13164:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "13164:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13154:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "13154:3:16"
																		},
																		"nativeSrc": "13154:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "13154:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13126:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "13126:6:16"
																},
																"nativeSrc": "13126:49:16",
																"nodeType": "YulFunctionCall",
																"src": "13126:49:16"
															},
															"nativeSrc": "13126:49:16",
															"nodeType": "YulExpressionStatement",
															"src": "13126:49:16"
														},
														{
															"nativeSrc": "13184:84:16",
															"nodeType": "YulAssignment",
															"src": "13184:84:16",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "13254:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "13254:6:16"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "13263:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "13263:4:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "13192:61:16",
																	"nodeType": "YulIdentifier",
																	"src": "13192:61:16"
																},
																"nativeSrc": "13192:76:16",
																"nodeType": "YulFunctionCall",
																"src": "13192:76:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13184:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "13184:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bool_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bool_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "12536:739:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12698:9:16",
														"nodeType": "YulTypedName",
														"src": "12698:9:16",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "12710:6:16",
														"nodeType": "YulTypedName",
														"src": "12710:6:16",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "12718:6:16",
														"nodeType": "YulTypedName",
														"src": "12718:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12726:6:16",
														"nodeType": "YulTypedName",
														"src": "12726:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12734:6:16",
														"nodeType": "YulTypedName",
														"src": "12734:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12742:6:16",
														"nodeType": "YulTypedName",
														"src": "12742:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12753:4:16",
														"nodeType": "YulTypedName",
														"src": "12753:4:16",
														"type": ""
													}
												],
												"src": "12536:739:16"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_address_payablet_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_boolt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bool_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_bool_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_329b6695cc078fec6f5eaa1763a4568ff856dfa63ebfa86719d6a43e911ffb23(memPtr) {\n\n        mstore(add(memPtr, 0), \"Failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_329b6695cc078fec6f5eaa1763a4568ff856dfa63ebfa86719d6a43e911ffb23_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 6)\n        store_literal_in_memory_329b6695cc078fec6f5eaa1763a4568ff856dfa63ebfa86719d6a43e911ffb23(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_329b6695cc078fec6f5eaa1763a4568ff856dfa63ebfa86719d6a43e911ffb23__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_329b6695cc078fec6f5eaa1763a4568ff856dfa63ebfa86719d6a43e911ffb23_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bool_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bool_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n}\n",
									"id": 16,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610114575f3560e01c80635c975abb116100a0578063af66ef651161006f578063af66ef6514610270578063b8de4343146102a0578063c884ef83146102bc578063f2fde38b146102ec578063fb2228fe1461030857610114565b80635c975abb14610220578063715018a61461023e5780638456cb59146102485780638da5cb5b1461025257610114565b80633ccfd60b116100e75780633ccfd60b146101a25780633f4ba83a146101ac5780634875590a146101b657806353a4cff4146101d457806356a6d9ef1461020457610114565b806312065fe01461011857806316ada547146101365780631e83409a14610154578063205306b414610184575b5f5ffd5b610120610326565b60405161012d9190610c9c565b60405180910390f35b61013e61032d565b60405161014b9190610c9c565b60405180910390f35b61016e60048036038101906101699190610d20565b610334565b60405161017b9190610d65565b60405180910390f35b61018c6105d1565b6040516101999190610c9c565b60405180910390f35b6101aa6105d7565b005b6101b4610696565b005b6101be6106a8565b6040516101cb9190610d8d565b60405180910390f35b6101ee60048036038101906101e99190610dd0565b6106cd565b6040516101fb9190610d65565b60405180910390f35b61021e60048036038101906102199190610e36565b61071d565b005b6102286107d2565b6040516102359190610d65565b60405180910390f35b6102466107e7565b005b6102506107fa565b005b61025a61080c565b6040516102679190610d8d565b60405180910390f35b61028a60048036038101906102859190610d20565b610833565b6040516102979190610d65565b60405180910390f35b6102ba60048036038101906102b59190610fda565b6108bc565b005b6102d660048036038101906102d19190610d20565b610939565b6040516102e39190610c9c565b60405180910390f35b61030660048036038101906103019190610d20565b61094e565b005b6103106109d2565b60405161031d9190610c9c565b60405180910390f35b5f47905090565b5f42905090565b5f61033d6109dd565b610345610a64565b5f60045f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054111561049e5760045f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205460025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231846040518263ffffffff1660e01b81526004016104229190610d8d565b602060405180830381865afa15801561043d573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104619190611081565b6040517fbbae19e60000000000000000000000000000000000000000000000000000000081526004016104959291906110ac565b60405180910390fd5b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663760d9bba308460035460016040518563ffffffff1660e01b81526004016105019493929190611106565b5f604051808303815f87803b158015610518575f5ffd5b505af115801561052a573d5f5f3e3d5ffd5b505050506105386001610aa5565b4260045f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff167fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a426040516105c09190610c9c565b60405180910390a260019050919050565b60035481565b6105df6109dd565b5f4790505f6105ec61080c565b73ffffffffffffffffffffffffffffffffffffffff168260405161060f90611186565b5f6040518083038185875af1925050503d805f8114610649576040519150601f19603f3d011682016040523d82523d5f602084013e61064e565b606091505b5050905080610692576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610689906111f4565b60405180910390fd5b5050565b61069e6109dd565b6106a6610ab9565b565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f6106d66109dd565b816003819055507fccc2dc361dc3b02936a3d99c4cd064de1bbbb59a03aaad640d302e18f7aacdfb8260405161070c9190610c9c565b60405180910390a160019050919050565b6107256109dd565b5f8273ffffffffffffffffffffffffffffffffffffffff168260405161074a90611186565b5f6040518083038185875af1925050503d805f8114610784576040519150601f19603f3d011682016040523d82523d5f602084013e610789565b606091505b50509050806107cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c4906111f4565b60405180910390fd5b505050565b5f5f60149054906101000a900460ff16905090565b6107ef6109dd565b6107f85f610b1a565b565b6108026109dd565b61080a610bdb565b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f61083c6109dd565b8160025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507ff9563f2ff8321c25ec4ee92f781a8d3ebc72f854daa4bf9177f3886b6ca1f7e1826040516108ab9190610d8d565b60405180910390a160019050919050565b6108c46109dd565b8473ffffffffffffffffffffffffffffffffffffffff1663760d9bba30868686866040518663ffffffff1660e01b8152600401610905959493929190611262565b5f604051808303815f87803b15801561091c575f5ffd5b505af115801561092e573d5f5f3e3d5ffd5b505050505050505050565b6004602052805f5260405f205f915090505481565b6109566109dd565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109c6575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016109bd9190610d8d565b60405180910390fd5b6109cf81610b1a565b50565b6001805f0154905081565b6109e5610c3d565b73ffffffffffffffffffffffffffffffffffffffff16610a0361080c565b73ffffffffffffffffffffffffffffffffffffffff1614610a6257610a26610c3d565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610a599190610d8d565b60405180910390fd5b565b610a6c6107d2565b15610aa3576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6001815f015f828254019250508190555050565b610ac1610c44565b5f5f60146101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa610b03610c3d565b604051610b109190610d8d565b60405180910390a1565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610be3610a64565b60015f60146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610c26610c3d565b604051610c339190610d8d565b60405180910390a1565b5f33905090565b610c4c6107d2565b610c82576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f819050919050565b610c9681610c84565b82525050565b5f602082019050610caf5f830184610c8d565b92915050565b5f604051905090565b5f5ffd5b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610cef82610cc6565b9050919050565b610cff81610ce5565b8114610d09575f5ffd5b50565b5f81359050610d1a81610cf6565b92915050565b5f60208284031215610d3557610d34610cbe565b5b5f610d4284828501610d0c565b91505092915050565b5f8115159050919050565b610d5f81610d4b565b82525050565b5f602082019050610d785f830184610d56565b92915050565b610d8781610ce5565b82525050565b5f602082019050610da05f830184610d7e565b92915050565b610daf81610c84565b8114610db9575f5ffd5b50565b5f81359050610dca81610da6565b92915050565b5f60208284031215610de557610de4610cbe565b5b5f610df284828501610dbc565b91505092915050565b5f610e0582610cc6565b9050919050565b610e1581610dfb565b8114610e1f575f5ffd5b50565b5f81359050610e3081610e0c565b92915050565b5f5f60408385031215610e4c57610e4b610cbe565b5b5f610e5985828601610e22565b9250506020610e6a85828601610dbc565b9150509250929050565b610e7d81610d4b565b8114610e87575f5ffd5b50565b5f81359050610e9881610e74565b92915050565b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b610eec82610ea6565b810181811067ffffffffffffffff82111715610f0b57610f0a610eb6565b5b80604052505050565b5f610f1d610cb5565b9050610f298282610ee3565b919050565b5f67ffffffffffffffff821115610f4857610f47610eb6565b5b610f5182610ea6565b9050602081019050919050565b828183375f83830152505050565b5f610f7e610f7984610f2e565b610f14565b905082815260208101848484011115610f9a57610f99610ea2565b5b610fa5848285610f5e565b509392505050565b5f82601f830112610fc157610fc0610e9e565b5b8135610fd1848260208601610f6c565b91505092915050565b5f5f5f5f5f60a08688031215610ff357610ff2610cbe565b5b5f61100088828901610d0c565b955050602061101188828901610d0c565b945050604061102288828901610dbc565b935050606061103388828901610e8a565b925050608086013567ffffffffffffffff81111561105457611053610cc2565b5b61106088828901610fad565b9150509295509295909350565b5f8151905061107b81610da6565b92915050565b5f6020828403121561109657611095610cbe565b5b5f6110a38482850161106d565b91505092915050565b5f6040820190506110bf5f830185610c8d565b6110cc6020830184610c8d565b9392505050565b5f82825260208201905092915050565b50565b5f6110f15f836110d3565b91506110fc826110e3565b5f82019050919050565b5f60a0820190506111195f830187610d7e565b6111266020830186610d7e565b6111336040830185610c8d565b6111406060830184610d56565b8181036080830152611151816110e6565b905095945050505050565b5f81905092915050565b5f6111715f8361115c565b915061117c826110e3565b5f82019050919050565b5f61119082611166565b9150819050919050565b5f82825260208201905092915050565b7f4661696c656400000000000000000000000000000000000000000000000000005f82015250565b5f6111de60068361119a565b91506111e9826111aa565b602082019050919050565b5f6020820190508181035f83015261120b816111d2565b9050919050565b5f81519050919050565b8281835e5f83830152505050565b5f61123482611212565b61123e81856110d3565b935061124e81856020860161121c565b61125781610ea6565b840191505092915050565b5f60a0820190506112755f830188610d7e565b6112826020830187610d7e565b61128f6040830186610c8d565b61129c6060830185610d56565b81810360808301526112ae818461122a565b9050969550505050505056fea2646970667358221220efc774138bd4e9619769e43d00e4c44c1c8f8f32088ceefac19347a2822e756064736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x114 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5C975ABB GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xAF66EF65 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xAF66EF65 EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0xB8DE4343 EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0xC884EF83 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2EC JUMPI DUP1 PUSH4 0xFB2228FE EQ PUSH2 0x308 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x252 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x3CCFD60B GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x4875590A EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x53A4CFF4 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x56A6D9EF EQ PUSH2 0x204 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x16ADA547 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x1E83409A EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0x205306B4 EQ PUSH2 0x184 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x120 PUSH2 0x326 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12D SWAP2 SWAP1 PUSH2 0xC9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13E PUSH2 0x32D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14B SWAP2 SWAP1 PUSH2 0xC9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x169 SWAP2 SWAP1 PUSH2 0xD20 JUMP JUMPDEST PUSH2 0x334 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17B SWAP2 SWAP1 PUSH2 0xD65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18C PUSH2 0x5D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x199 SWAP2 SWAP1 PUSH2 0xC9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AA PUSH2 0x5D7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B4 PUSH2 0x696 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BE PUSH2 0x6A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CB SWAP2 SWAP1 PUSH2 0xD8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0xDD0 JUMP JUMPDEST PUSH2 0x6CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xD65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x219 SWAP2 SWAP1 PUSH2 0xE36 JUMP JUMPDEST PUSH2 0x71D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x228 PUSH2 0x7D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x235 SWAP2 SWAP1 PUSH2 0xD65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x246 PUSH2 0x7E7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x250 PUSH2 0x7FA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25A PUSH2 0x80C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x267 SWAP2 SWAP1 PUSH2 0xD8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x285 SWAP2 SWAP1 PUSH2 0xD20 JUMP JUMPDEST PUSH2 0x833 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x297 SWAP2 SWAP1 PUSH2 0xD65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B5 SWAP2 SWAP1 PUSH2 0xFDA JUMP JUMPDEST PUSH2 0x8BC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D1 SWAP2 SWAP1 PUSH2 0xD20 JUMP JUMPDEST PUSH2 0x939 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E3 SWAP2 SWAP1 PUSH2 0xC9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x306 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x301 SWAP2 SWAP1 PUSH2 0xD20 JUMP JUMPDEST PUSH2 0x94E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x310 PUSH2 0x9D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31D SWAP2 SWAP1 PUSH2 0xC9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 TIMESTAMP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x33D PUSH2 0x9DD JUMP JUMPDEST PUSH2 0x345 PUSH2 0xA64 JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT ISZERO PUSH2 0x49E JUMPI PUSH1 0x4 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x422 SWAP2 SWAP1 PUSH2 0xD8D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x43D JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x461 SWAP2 SWAP1 PUSH2 0x1081 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xBBAE19E600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x495 SWAP3 SWAP2 SWAP1 PUSH2 0x10AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x760D9BBA ADDRESS DUP5 PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x501 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1106 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x518 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x52A JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH2 0x538 PUSH1 0x1 PUSH2 0xAA5 JUMP JUMPDEST TIMESTAMP PUSH1 0x4 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD8138F8A3F377C5259CA548E70E4C2DE94F129F5A11036A15B69513CBA2B426A TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x5C0 SWAP2 SWAP1 PUSH2 0xC9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x5DF PUSH2 0x9DD JUMP JUMPDEST PUSH0 SELFBALANCE SWAP1 POP PUSH0 PUSH2 0x5EC PUSH2 0x80C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x60F SWAP1 PUSH2 0x1186 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x649 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x64E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x692 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x689 SWAP1 PUSH2 0x11F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x69E PUSH2 0x9DD JUMP JUMPDEST PUSH2 0x6A6 PUSH2 0xAB9 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x6D6 PUSH2 0x9DD JUMP JUMPDEST DUP2 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH32 0xCCC2DC361DC3B02936A3D99C4CD064DE1BBBB59A03AAAD640D302E18F7AACDFB DUP3 PUSH1 0x40 MLOAD PUSH2 0x70C SWAP2 SWAP1 PUSH2 0xC9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x725 PUSH2 0x9DD JUMP JUMPDEST PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x74A SWAP1 PUSH2 0x1186 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x784 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x789 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x7CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C4 SWAP1 PUSH2 0x11F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7EF PUSH2 0x9DD JUMP JUMPDEST PUSH2 0x7F8 PUSH0 PUSH2 0xB1A JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x802 PUSH2 0x9DD JUMP JUMPDEST PUSH2 0x80A PUSH2 0xBDB JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x83C PUSH2 0x9DD JUMP JUMPDEST DUP2 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xF9563F2FF8321C25EC4EE92F781A8D3EBC72F854DAA4BF9177F3886B6CA1F7E1 DUP3 PUSH1 0x40 MLOAD PUSH2 0x8AB SWAP2 SWAP1 PUSH2 0xD8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8C4 PUSH2 0x9DD JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x760D9BBA ADDRESS DUP7 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x905 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1262 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x91C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x92E JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x956 PUSH2 0x9DD JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9C6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9BD SWAP2 SWAP1 PUSH2 0xD8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9CF DUP2 PUSH2 0xB1A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH0 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0x9E5 PUSH2 0xC3D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA03 PUSH2 0x80C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA62 JUMPI PUSH2 0xA26 PUSH2 0xC3D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA59 SWAP2 SWAP1 PUSH2 0xD8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0xA6C PUSH2 0x7D2 JUMP JUMPDEST ISZERO PUSH2 0xAA3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xAC1 PUSH2 0xC44 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0xB03 PUSH2 0xC3D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB10 SWAP2 SWAP1 PUSH2 0xD8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xBE3 PUSH2 0xA64 JUMP JUMPDEST PUSH1 0x1 PUSH0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xC26 PUSH2 0xC3D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC33 SWAP2 SWAP1 PUSH2 0xD8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC4C PUSH2 0x7D2 JUMP JUMPDEST PUSH2 0xC82 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC96 DUP2 PUSH2 0xC84 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCAF PUSH0 DUP4 ADD DUP5 PUSH2 0xC8D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCEF DUP3 PUSH2 0xCC6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCFF DUP2 PUSH2 0xCE5 JUMP JUMPDEST DUP2 EQ PUSH2 0xD09 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD1A DUP2 PUSH2 0xCF6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD35 JUMPI PUSH2 0xD34 PUSH2 0xCBE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD42 DUP5 DUP3 DUP6 ADD PUSH2 0xD0C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD5F DUP2 PUSH2 0xD4B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD78 PUSH0 DUP4 ADD DUP5 PUSH2 0xD56 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD87 DUP2 PUSH2 0xCE5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDA0 PUSH0 DUP4 ADD DUP5 PUSH2 0xD7E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDAF DUP2 PUSH2 0xC84 JUMP JUMPDEST DUP2 EQ PUSH2 0xDB9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDCA DUP2 PUSH2 0xDA6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDE5 JUMPI PUSH2 0xDE4 PUSH2 0xCBE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDF2 DUP5 DUP3 DUP6 ADD PUSH2 0xDBC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE05 DUP3 PUSH2 0xCC6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE15 DUP2 PUSH2 0xDFB JUMP JUMPDEST DUP2 EQ PUSH2 0xE1F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE30 DUP2 PUSH2 0xE0C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE4C JUMPI PUSH2 0xE4B PUSH2 0xCBE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE59 DUP6 DUP3 DUP7 ADD PUSH2 0xE22 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE6A DUP6 DUP3 DUP7 ADD PUSH2 0xDBC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xE7D DUP2 PUSH2 0xD4B JUMP JUMPDEST DUP2 EQ PUSH2 0xE87 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE98 DUP2 PUSH2 0xE74 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0xEEC DUP3 PUSH2 0xEA6 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xF0B JUMPI PUSH2 0xF0A PUSH2 0xEB6 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF1D PUSH2 0xCB5 JUMP JUMPDEST SWAP1 POP PUSH2 0xF29 DUP3 DUP3 PUSH2 0xEE3 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xF48 JUMPI PUSH2 0xF47 PUSH2 0xEB6 JUMP JUMPDEST JUMPDEST PUSH2 0xF51 DUP3 PUSH2 0xEA6 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF7E PUSH2 0xF79 DUP5 PUSH2 0xF2E JUMP JUMPDEST PUSH2 0xF14 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xF9A JUMPI PUSH2 0xF99 PUSH2 0xEA2 JUMP JUMPDEST JUMPDEST PUSH2 0xFA5 DUP5 DUP3 DUP6 PUSH2 0xF5E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xFC1 JUMPI PUSH2 0xFC0 PUSH2 0xE9E JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xFD1 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xF6C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xFF3 JUMPI PUSH2 0xFF2 PUSH2 0xCBE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1000 DUP9 DUP3 DUP10 ADD PUSH2 0xD0C JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1011 DUP9 DUP3 DUP10 ADD PUSH2 0xD0C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1022 DUP9 DUP3 DUP10 ADD PUSH2 0xDBC JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1033 DUP9 DUP3 DUP10 ADD PUSH2 0xE8A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1054 JUMPI PUSH2 0x1053 PUSH2 0xCC2 JUMP JUMPDEST JUMPDEST PUSH2 0x1060 DUP9 DUP3 DUP10 ADD PUSH2 0xFAD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x107B DUP2 PUSH2 0xDA6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1096 JUMPI PUSH2 0x1095 PUSH2 0xCBE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10A3 DUP5 DUP3 DUP6 ADD PUSH2 0x106D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x10BF PUSH0 DUP4 ADD DUP6 PUSH2 0xC8D JUMP JUMPDEST PUSH2 0x10CC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC8D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x10F1 PUSH0 DUP4 PUSH2 0x10D3 JUMP JUMPDEST SWAP2 POP PUSH2 0x10FC DUP3 PUSH2 0x10E3 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1119 PUSH0 DUP4 ADD DUP8 PUSH2 0xD7E JUMP JUMPDEST PUSH2 0x1126 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xD7E JUMP JUMPDEST PUSH2 0x1133 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xC8D JUMP JUMPDEST PUSH2 0x1140 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xD56 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1151 DUP2 PUSH2 0x10E6 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1171 PUSH0 DUP4 PUSH2 0x115C JUMP JUMPDEST SWAP2 POP PUSH2 0x117C DUP3 PUSH2 0x10E3 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1190 DUP3 PUSH2 0x1166 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4661696C65640000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x11DE PUSH1 0x6 DUP4 PUSH2 0x119A JUMP JUMPDEST SWAP2 POP PUSH2 0x11E9 DUP3 PUSH2 0x11AA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x120B DUP2 PUSH2 0x11D2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1234 DUP3 PUSH2 0x1212 JUMP JUMPDEST PUSH2 0x123E DUP2 DUP6 PUSH2 0x10D3 JUMP JUMPDEST SWAP4 POP PUSH2 0x124E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x121C JUMP JUMPDEST PUSH2 0x1257 DUP2 PUSH2 0xEA6 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1275 PUSH0 DUP4 ADD DUP9 PUSH2 0xD7E JUMP JUMPDEST PUSH2 0x1282 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0xD7E JUMP JUMPDEST PUSH2 0x128F PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0xC8D JUMP JUMPDEST PUSH2 0x129C PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0xD56 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x12AE DUP2 DUP5 PUSH2 0x122A JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEF 0xC7 PUSH21 0x138BD4E9619769E43D00E4C44C1C8F8F32088CEEFA 0xC1 SWAP4 SELFBALANCE LOG2 DUP3 0x2E PUSH22 0x6064736F6C634300081C003300000000000000000000 ",
							"sourceMap": "616:2839:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3085:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3368:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1070:581;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;791:42;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2516:188;;;:::i;:::-;;3299:63;;;:::i;:::-;;758:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1698:211;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2778:249;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1871:84:15;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2314:101:14;;;:::i;:::-;;3210:59:11;;;:::i;:::-;;1659:85:14;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1915:205:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2161:255;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;840:42;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2564:215:14;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;715:37:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3085:97;3128:7;3154:21;3147:28;;3085:97;:::o;3368:85::-;3405:7;3431:15;3424:22;;3368:85;:::o;1070:581::-;1142:4;1552:13:14;:11;:13::i;:::-;1495:19:15::1;:17;:19::i;:::-;1181:1:11::2;1162:7;:16;1170:7;1162:16;;;;;;;;;;;;;;;;:20;1158:163;;;1235:7;:16;1243:7;1235:16;;;;;;;;;;;;;;;;1275:12;;;;;;;;;;;1269:29;;;1299:7;1269:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1203:118;;;;;;;;;;;;:::i;:::-;;;;;;;;1158:163;1338:12;;;;;;;;;;;1332:28;;;1382:4;1401:7;1422:13;;1449:4;1332:147;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1489:25;:13;:23;:25::i;:::-;1543:15;1524:7;:16;1532:7;1524:16;;;;;;;;;;;;;;;:34;;;;1597:7;1589:33;;;1606:15;1589:33;;;;;;:::i;:::-;;;;;;;;1640:4;1633:11;;1070:581:::0;;;:::o;791:42::-;;;;:::o;2516:188::-;1552:13:14;:11;:13::i;:::-;2563:14:11::1;2580:21;2563:38;;2612:12;2630:7;:5;:7::i;:::-;:12;;2650:6;2630:31;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2611:50;;;2679:7;2671:26;;;;;;;;;;;;:::i;:::-;;;;;;;;;2553:151;;2516:188::o:0;3299:63::-;1552:13:14;:11;:13::i;:::-;3345:10:11::1;:8;:10::i;:::-;3299:63::o:0;758:27::-;;;;;;;;;;;;;:::o;1698:211::-;1794:4;1552:13:14;:11;:13::i;:::-;1830:7:11::1;1814:13;:23;;;;1852:29;1873:7;1852:29;;;;;;:::i;:::-;;;;;;;;1898:4;1891:11;;1698:211:::0;;;:::o;2778:249::-;1552:13:14;:11;:13::i;:::-;2938:12:11::1;2956:3;:8;;2972:7;2956:28;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2937:47;;;3002:7;2994:26;;;;;;;;;;;;:::i;:::-;;;;;;;;;2878:149;2778:249:::0;;:::o;1871:84:15:-;1918:4;1941:7;;;;;;;;;;;1934:14;;1871:84;:::o;2314:101:14:-;1552:13;:11;:13::i;:::-;2378:30:::1;2405:1;2378:18;:30::i;:::-;2314:101::o:0;3210:59:11:-;1552:13:14;:11;:13::i;:::-;3254:8:11::1;:6;:8::i;:::-;3210:59::o:0;1659:85:14:-;1705:7;1731:6;;;;;;;;;;;1724:13;;1659:85;:::o;1915:205:11:-;2009:4;1552:13:14;:11;:13::i;:::-;2044:6:11::1;2029:12;;:21;;;;;;;;;;;;;;;;;;2065:27;2085:6;2065:27;;;;;;:::i;:::-;;;;;;;;2109:4;2102:11;;1915:205:::0;;;:::o;2161:255::-;1552:13:14;:11;:13::i;:::-;2345:10:11::1;2339:26;;;2374:4;2381:3;2386:7;2395:6;2403:5;2339:70;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2161:255:::0;;;;;:::o;840:42::-;;;;;;;;;;;;;;;;;:::o;2564:215:14:-;1552:13;:11;:13::i;:::-;2668:1:::1;2648:22;;:8;:22;;::::0;2644:91:::1;;2721:1;2693:31;;;;;;;;;;;:::i;:::-;;;;;;;;2644:91;2744:28;2763:8;2744:18;:28::i;:::-;2564:215:::0;:::o;715:37:11:-;;;;;;;;;:::o;1817:162:14:-;1887:12;:10;:12::i;:::-;1876:23;;:7;:5;:7::i;:::-;:23;;;1872:101;;1949:12;:10;:12::i;:::-;1922:40;;;;;;;;;;;:::i;:::-;;;;;;;;1872:101;1817:162::o;2023:128:15:-;2088:8;:6;:8::i;:::-;2084:61;;;2119:15;;;;;;;;;;;;;;2084:61;2023:128::o;970:127:4:-;1077:1;1059:7;:14;;;:19;;;;;;;;;;;970:127;:::o;2731:117:15:-;1742:16;:14;:16::i;:::-;2799:5:::1;2789:7;;:15;;;;;;;;;;;;;;;;;;2819:22;2828:12;:10;:12::i;:::-;2819:22;;;;;;:::i;:::-;;;;;;;;2731:117::o:0;2933:187:14:-;3006:16;3025:6;;;;;;;;;;;3006:25;;3050:8;3041:6;;:17;;;;;;;;;;;;;;;;;;3104:8;3073:40;;3094:8;3073:40;;;;;;;;;;;;2996:124;2933:187;:::o;2484:115:15:-;1495:19;:17;:19::i;:::-;2553:4:::1;2543:7;;:14;;;;;;;;;;;;;;;;;;2572:20;2579:12;:10;:12::i;:::-;2572:20;;;;;;:::i;:::-;;;;;;;;2484:115::o:0;656:96:3:-;709:7;735:10;728:17;;656:96;:::o;2223:126:15:-;2286:8;:6;:8::i;:::-;2281:62;;2317:15;;;;;;;;;;;;;;2281:62;2223:126::o;7:77:16:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:75::-;475:6;508:2;502:9;492:19;;442:75;:::o;523:117::-;632:1;629;622:12;646:117;755:1;752;745:12;769:126;806:7;846:42;839:5;835:54;824:65;;769:126;;;:::o;901:96::-;938:7;967:24;985:5;967:24;:::i;:::-;956:35;;901:96;;;:::o;1003:122::-;1076:24;1094:5;1076:24;:::i;:::-;1069:5;1066:35;1056:63;;1115:1;1112;1105:12;1056:63;1003:122;:::o;1131:139::-;1177:5;1215:6;1202:20;1193:29;;1231:33;1258:5;1231:33;:::i;:::-;1131:139;;;;:::o;1276:329::-;1335:6;1384:2;1372:9;1363:7;1359:23;1355:32;1352:119;;;1390:79;;:::i;:::-;1352:119;1510:1;1535:53;1580:7;1571:6;1560:9;1556:22;1535:53;:::i;:::-;1525:63;;1481:117;1276:329;;;;:::o;1611:90::-;1645:7;1688:5;1681:13;1674:21;1663:32;;1611:90;;;:::o;1707:109::-;1788:21;1803:5;1788:21;:::i;:::-;1783:3;1776:34;1707:109;;:::o;1822:210::-;1909:4;1947:2;1936:9;1932:18;1924:26;;1960:65;2022:1;2011:9;2007:17;1998:6;1960:65;:::i;:::-;1822:210;;;;:::o;2038:118::-;2125:24;2143:5;2125:24;:::i;:::-;2120:3;2113:37;2038:118;;:::o;2162:222::-;2255:4;2293:2;2282:9;2278:18;2270:26;;2306:71;2374:1;2363:9;2359:17;2350:6;2306:71;:::i;:::-;2162:222;;;;:::o;2390:122::-;2463:24;2481:5;2463:24;:::i;:::-;2456:5;2453:35;2443:63;;2502:1;2499;2492:12;2443:63;2390:122;:::o;2518:139::-;2564:5;2602:6;2589:20;2580:29;;2618:33;2645:5;2618:33;:::i;:::-;2518:139;;;;:::o;2663:329::-;2722:6;2771:2;2759:9;2750:7;2746:23;2742:32;2739:119;;;2777:79;;:::i;:::-;2739:119;2897:1;2922:53;2967:7;2958:6;2947:9;2943:22;2922:53;:::i;:::-;2912:63;;2868:117;2663:329;;;;:::o;2998:104::-;3043:7;3072:24;3090:5;3072:24;:::i;:::-;3061:35;;2998:104;;;:::o;3108:138::-;3189:32;3215:5;3189:32;:::i;:::-;3182:5;3179:43;3169:71;;3236:1;3233;3226:12;3169:71;3108:138;:::o;3252:155::-;3306:5;3344:6;3331:20;3322:29;;3360:41;3395:5;3360:41;:::i;:::-;3252:155;;;;:::o;3413:490::-;3489:6;3497;3546:2;3534:9;3525:7;3521:23;3517:32;3514:119;;;3552:79;;:::i;:::-;3514:119;3672:1;3697:61;3750:7;3741:6;3730:9;3726:22;3697:61;:::i;:::-;3687:71;;3643:125;3807:2;3833:53;3878:7;3869:6;3858:9;3854:22;3833:53;:::i;:::-;3823:63;;3778:118;3413:490;;;;;:::o;3909:116::-;3979:21;3994:5;3979:21;:::i;:::-;3972:5;3969:32;3959:60;;4015:1;4012;4005:12;3959:60;3909:116;:::o;4031:133::-;4074:5;4112:6;4099:20;4090:29;;4128:30;4152:5;4128:30;:::i;:::-;4031:133;;;;:::o;4170:117::-;4279:1;4276;4269:12;4293:117;4402:1;4399;4392:12;4416:102;4457:6;4508:2;4504:7;4499:2;4492:5;4488:14;4484:28;4474:38;;4416:102;;;:::o;4524:180::-;4572:77;4569:1;4562:88;4669:4;4666:1;4659:15;4693:4;4690:1;4683:15;4710:281;4793:27;4815:4;4793:27;:::i;:::-;4785:6;4781:40;4923:6;4911:10;4908:22;4887:18;4875:10;4872:34;4869:62;4866:88;;;4934:18;;:::i;:::-;4866:88;4974:10;4970:2;4963:22;4753:238;4710:281;;:::o;4997:129::-;5031:6;5058:20;;:::i;:::-;5048:30;;5087:33;5115:4;5107:6;5087:33;:::i;:::-;4997:129;;;:::o;5132:307::-;5193:4;5283:18;5275:6;5272:30;5269:56;;;5305:18;;:::i;:::-;5269:56;5343:29;5365:6;5343:29;:::i;:::-;5335:37;;5427:4;5421;5417:15;5409:23;;5132:307;;;:::o;5445:148::-;5543:6;5538:3;5533;5520:30;5584:1;5575:6;5570:3;5566:16;5559:27;5445:148;;;:::o;5599:423::-;5676:5;5701:65;5717:48;5758:6;5717:48;:::i;:::-;5701:65;:::i;:::-;5692:74;;5789:6;5782:5;5775:21;5827:4;5820:5;5816:16;5865:3;5856:6;5851:3;5847:16;5844:25;5841:112;;;5872:79;;:::i;:::-;5841:112;5962:54;6009:6;6004:3;5999;5962:54;:::i;:::-;5682:340;5599:423;;;;;:::o;6041:338::-;6096:5;6145:3;6138:4;6130:6;6126:17;6122:27;6112:122;;6153:79;;:::i;:::-;6112:122;6270:6;6257:20;6295:78;6369:3;6361:6;6354:4;6346:6;6342:17;6295:78;:::i;:::-;6286:87;;6102:277;6041:338;;;;:::o;6385:1083::-;6486:6;6494;6502;6510;6518;6567:3;6555:9;6546:7;6542:23;6538:33;6535:120;;;6574:79;;:::i;:::-;6535:120;6694:1;6719:53;6764:7;6755:6;6744:9;6740:22;6719:53;:::i;:::-;6709:63;;6665:117;6821:2;6847:53;6892:7;6883:6;6872:9;6868:22;6847:53;:::i;:::-;6837:63;;6792:118;6949:2;6975:53;7020:7;7011:6;7000:9;6996:22;6975:53;:::i;:::-;6965:63;;6920:118;7077:2;7103:50;7145:7;7136:6;7125:9;7121:22;7103:50;:::i;:::-;7093:60;;7048:115;7230:3;7219:9;7215:19;7202:33;7262:18;7254:6;7251:30;7248:117;;;7284:79;;:::i;:::-;7248:117;7389:62;7443:7;7434:6;7423:9;7419:22;7389:62;:::i;:::-;7379:72;;7173:288;6385:1083;;;;;;;;:::o;7474:143::-;7531:5;7562:6;7556:13;7547:22;;7578:33;7605:5;7578:33;:::i;:::-;7474:143;;;;:::o;7623:351::-;7693:6;7742:2;7730:9;7721:7;7717:23;7713:32;7710:119;;;7748:79;;:::i;:::-;7710:119;7868:1;7893:64;7949:7;7940:6;7929:9;7925:22;7893:64;:::i;:::-;7883:74;;7839:128;7623:351;;;;:::o;7980:332::-;8101:4;8139:2;8128:9;8124:18;8116:26;;8152:71;8220:1;8209:9;8205:17;8196:6;8152:71;:::i;:::-;8233:72;8301:2;8290:9;8286:18;8277:6;8233:72;:::i;:::-;7980:332;;;;;:::o;8318:168::-;8401:11;8435:6;8430:3;8423:19;8475:4;8470:3;8466:14;8451:29;;8318:168;;;;:::o;8492:114::-;;:::o;8612:362::-;8753:3;8774:65;8837:1;8832:3;8774:65;:::i;:::-;8767:72;;8848:93;8937:3;8848:93;:::i;:::-;8966:1;8961:3;8957:11;8950:18;;8612:362;;;:::o;8980:847::-;9251:4;9289:3;9278:9;9274:19;9266:27;;9303:71;9371:1;9360:9;9356:17;9347:6;9303:71;:::i;:::-;9384:72;9452:2;9441:9;9437:18;9428:6;9384:72;:::i;:::-;9466;9534:2;9523:9;9519:18;9510:6;9466:72;:::i;:::-;9548:66;9610:2;9599:9;9595:18;9586:6;9548:66;:::i;:::-;9662:9;9656:4;9652:20;9646:3;9635:9;9631:19;9624:49;9690:130;9815:4;9690:130;:::i;:::-;9682:138;;8980:847;;;;;;;:::o;9833:147::-;9934:11;9971:3;9956:18;;9833:147;;;;:::o;9986:398::-;10145:3;10166:83;10247:1;10242:3;10166:83;:::i;:::-;10159:90;;10258:93;10347:3;10258:93;:::i;:::-;10376:1;10371:3;10367:11;10360:18;;9986:398;;;:::o;10390:379::-;10574:3;10596:147;10739:3;10596:147;:::i;:::-;10589:154;;10760:3;10753:10;;10390:379;;;:::o;10775:169::-;10859:11;10893:6;10888:3;10881:19;10933:4;10928:3;10924:14;10909:29;;10775:169;;;;:::o;10950:156::-;11090:8;11086:1;11078:6;11074:14;11067:32;10950:156;:::o;11112:365::-;11254:3;11275:66;11339:1;11334:3;11275:66;:::i;:::-;11268:73;;11350:93;11439:3;11350:93;:::i;:::-;11468:2;11463:3;11459:12;11452:19;;11112:365;;;:::o;11483:419::-;11649:4;11687:2;11676:9;11672:18;11664:26;;11736:9;11730:4;11726:20;11722:1;11711:9;11707:17;11700:47;11764:131;11890:4;11764:131;:::i;:::-;11756:139;;11483:419;;;:::o;11908:98::-;11959:6;11993:5;11987:12;11977:22;;11908:98;;;:::o;12012:139::-;12101:6;12096:3;12091;12085:23;12142:1;12133:6;12128:3;12124:16;12117:27;12012:139;;;:::o;12157:373::-;12243:3;12271:38;12303:5;12271:38;:::i;:::-;12325:70;12388:6;12383:3;12325:70;:::i;:::-;12318:77;;12404:65;12462:6;12457:3;12450:4;12443:5;12439:16;12404:65;:::i;:::-;12494:29;12516:6;12494:29;:::i;:::-;12489:3;12485:39;12478:46;;12247:283;12157:373;;;;:::o;12536:739::-;12753:4;12791:3;12780:9;12776:19;12768:27;;12805:71;12873:1;12862:9;12858:17;12849:6;12805:71;:::i;:::-;12886:72;12954:2;12943:9;12939:18;12930:6;12886:72;:::i;:::-;12968;13036:2;13025:9;13021:18;13012:6;12968:72;:::i;:::-;13050:66;13112:2;13101:9;13097:18;13088:6;13050:66;:::i;:::-;13164:9;13158:4;13154:20;13148:3;13137:9;13133:19;13126:49;13192:76;13263:4;13254:6;13192:76;:::i;:::-;13184:84;;12536:739;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "969600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_claimCounter()": "2548",
								"amountToClaim()": "2515",
								"claim(address)": "infinite",
								"claimed(address)": "2868",
								"getBalance()": "358",
								"owner()": "2603",
								"pause()": "infinite",
								"paused()": "2546",
								"renounceOwnership()": "infinite",
								"time()": "377",
								"tokenToClaim()": "2575",
								"transferBalance(address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"unpause()": "infinite",
								"updateAmountToClaim(uint256)": "infinite",
								"updateTokenToClaim(address)": "infinite",
								"withdraw()": "infinite",
								"withdrawLSP7(address,address,uint256,bool,bytes)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 616,
									"end": 3455,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 616,
									"end": 3455,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 616,
									"end": 3455,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 822,
									"end": 833,
									"name": "PUSH",
									"source": 11,
									"value": "10F0CF064DD59200000"
								},
								{
									"begin": 791,
									"end": 833,
									"name": "PUSH",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 791,
									"end": 833,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 889,
									"end": 1018,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 889,
									"end": 1018,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 889,
									"end": 1018,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 889,
									"end": 1018,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 889,
									"end": 1018,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 889,
									"end": 1018,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 889,
									"end": 1018,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 889,
									"end": 1018,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 889,
									"end": 1018,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 889,
									"end": 1018,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 889,
									"end": 1018,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 889,
									"end": 1018,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 889,
									"end": 1018,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 889,
									"end": 1018,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 889,
									"end": 1018,
									"name": "CODESIZE",
									"source": 11
								},
								{
									"begin": 889,
									"end": 1018,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 889,
									"end": 1018,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 889,
									"end": 1018,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 889,
									"end": 1018,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 889,
									"end": 1018,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 889,
									"end": 1018,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 889,
									"end": 1018,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 889,
									"end": 1018,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 889,
									"end": 1018,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 889,
									"end": 1018,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 889,
									"end": 1018,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 889,
									"end": 1018,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 889,
									"end": 1018,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 889,
									"end": 1018,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 889,
									"end": 1018,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 889,
									"end": 1018,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 889,
									"end": 1018,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 889,
									"end": 1018,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 889,
									"end": 1018,
									"name": "tag",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 889,
									"end": 1018,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 646,
									"end": 656,
									"name": "CALLER",
									"source": 11
								},
								{
									"begin": 1318,
									"end": 1319,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1294,
									"end": 1320,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1294,
									"end": 1320,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 1294,
									"end": 1306,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1294,
									"end": 1320,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1294,
									"end": 1320,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 1294,
									"end": 1320,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 1290,
									"end": 1385,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "8"
								},
								{
									"begin": 1290,
									"end": 1385,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1371,
									"end": 1372,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1343,
									"end": 1374,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 1343,
									"end": 1374,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 1343,
									"end": 1374,
									"name": "PUSH",
									"source": 14,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1343,
									"end": 1374,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1343,
									"end": 1374,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1343,
									"end": 1374,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 1343,
									"end": 1374,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1343,
									"end": 1374,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "9"
								},
								{
									"begin": 1343,
									"end": 1374,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1343,
									"end": 1374,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1343,
									"end": 1374,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "10"
								},
								{
									"begin": 1343,
									"end": 1374,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1343,
									"end": 1374,
									"name": "tag",
									"source": 14,
									"value": "9"
								},
								{
									"begin": 1343,
									"end": 1374,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1343,
									"end": 1374,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 1343,
									"end": 1374,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 1343,
									"end": 1374,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1343,
									"end": 1374,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1343,
									"end": 1374,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 1343,
									"end": 1374,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1343,
									"end": 1374,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 1290,
									"end": 1385,
									"name": "tag",
									"source": 14,
									"value": "8"
								},
								{
									"begin": 1290,
									"end": 1385,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1394,
									"end": 1426,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "11"
								},
								{
									"begin": 1413,
									"end": 1425,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1394,
									"end": 1412,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "12"
								},
								{
									"begin": 1394,
									"end": 1412,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 1394,
									"end": 1412,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 1394,
									"end": 1426,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 1394,
									"end": 1426,
									"name": "SHR",
									"source": 14
								},
								{
									"begin": 1394,
									"end": 1426,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1394,
									"end": 1426,
									"name": "tag",
									"source": 14,
									"value": "11"
								},
								{
									"begin": 1394,
									"end": 1426,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1246,
									"end": 1433,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1262,
									"end": 1267,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1252,
									"end": 1259,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1252,
									"end": 1259,
									"name": "PUSH",
									"source": 15,
									"value": "14"
								},
								{
									"begin": 1252,
									"end": 1267,
									"name": "PUSH",
									"source": 15,
									"value": "100"
								},
								{
									"begin": 1252,
									"end": 1267,
									"name": "EXP",
									"source": 15
								},
								{
									"begin": 1252,
									"end": 1267,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1252,
									"end": 1267,
									"name": "SLOAD",
									"source": 15
								},
								{
									"begin": 1252,
									"end": 1267,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1252,
									"end": 1267,
									"name": "PUSH",
									"source": 15,
									"value": "FF"
								},
								{
									"begin": 1252,
									"end": 1267,
									"name": "MUL",
									"source": 15
								},
								{
									"begin": 1252,
									"end": 1267,
									"name": "NOT",
									"source": 15
								},
								{
									"begin": 1252,
									"end": 1267,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 1252,
									"end": 1267,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1252,
									"end": 1267,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 1252,
									"end": 1267,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 1252,
									"end": 1267,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 1252,
									"end": 1267,
									"name": "MUL",
									"source": 15
								},
								{
									"begin": 1252,
									"end": 1267,
									"name": "OR",
									"source": 15
								},
								{
									"begin": 1252,
									"end": 1267,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1252,
									"end": 1267,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 1252,
									"end": 1267,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 949,
									"end": 962,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 934,
									"end": 946,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 934,
									"end": 946,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 934,
									"end": 962,
									"name": "PUSH",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 934,
									"end": 962,
									"name": "EXP",
									"source": 11
								},
								{
									"begin": 934,
									"end": 962,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 934,
									"end": 962,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 934,
									"end": 962,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 934,
									"end": 962,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 934,
									"end": 962,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 934,
									"end": 962,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 934,
									"end": 962,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 934,
									"end": 962,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 934,
									"end": 962,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 934,
									"end": 962,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 934,
									"end": 962,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 934,
									"end": 962,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 934,
									"end": 962,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 934,
									"end": 962,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 934,
									"end": 962,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 934,
									"end": 962,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 977,
									"end": 1011,
									"name": "PUSH",
									"source": 11,
									"value": "F9563F2FF8321C25EC4EE92F781A8D3EBC72F854DAA4BF9177F3886B6CA1F7E1"
								},
								{
									"begin": 997,
									"end": 1010,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 977,
									"end": 1011,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 977,
									"end": 1011,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 977,
									"end": 1011,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 977,
									"end": 1011,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 977,
									"end": 1011,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 977,
									"end": 1011,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "10"
								},
								{
									"begin": 977,
									"end": 1011,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 977,
									"end": 1011,
									"name": "tag",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 977,
									"end": 1011,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 977,
									"end": 1011,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 977,
									"end": 1011,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 977,
									"end": 1011,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 977,
									"end": 1011,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 977,
									"end": 1011,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 977,
									"end": 1011,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 977,
									"end": 1011,
									"name": "LOG1",
									"source": 11
								},
								{
									"begin": 889,
									"end": 1018,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 616,
									"end": 3455,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 616,
									"end": 3455,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2933,
									"end": 3120,
									"name": "tag",
									"source": 14,
									"value": "12"
								},
								{
									"begin": 2933,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3006,
									"end": 3022,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 3025,
									"end": 3031,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 3025,
									"end": 3031,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 3025,
									"end": 3031,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3025,
									"end": 3031,
									"name": "SLOAD",
									"source": 14
								},
								{
									"begin": 3025,
									"end": 3031,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3025,
									"end": 3031,
									"name": "PUSH",
									"source": 14,
									"value": "100"
								},
								{
									"begin": 3025,
									"end": 3031,
									"name": "EXP",
									"source": 14
								},
								{
									"begin": 3025,
									"end": 3031,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3025,
									"end": 3031,
									"name": "DIV",
									"source": 14
								},
								{
									"begin": 3025,
									"end": 3031,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3025,
									"end": 3031,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 3006,
									"end": 3031,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3006,
									"end": 3031,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3050,
									"end": 3058,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3041,
									"end": 3047,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 3041,
									"end": 3047,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 3041,
									"end": 3058,
									"name": "PUSH",
									"source": 14,
									"value": "100"
								},
								{
									"begin": 3041,
									"end": 3058,
									"name": "EXP",
									"source": 14
								},
								{
									"begin": 3041,
									"end": 3058,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3041,
									"end": 3058,
									"name": "SLOAD",
									"source": 14
								},
								{
									"begin": 3041,
									"end": 3058,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3041,
									"end": 3058,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3041,
									"end": 3058,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 3041,
									"end": 3058,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 3041,
									"end": 3058,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 3041,
									"end": 3058,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3041,
									"end": 3058,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 3041,
									"end": 3058,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3041,
									"end": 3058,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 3041,
									"end": 3058,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 3041,
									"end": 3058,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 3041,
									"end": 3058,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3041,
									"end": 3058,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 3041,
									"end": 3058,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3104,
									"end": 3112,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3073,
									"end": 3113,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3073,
									"end": 3113,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 3094,
									"end": 3102,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3073,
									"end": 3113,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3073,
									"end": 3113,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 3073,
									"end": 3113,
									"name": "PUSH",
									"source": 14,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3073,
									"end": 3113,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 3073,
									"end": 3113,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 3073,
									"end": 3113,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 3073,
									"end": 3113,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 3073,
									"end": 3113,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 3073,
									"end": 3113,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 3073,
									"end": 3113,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 3073,
									"end": 3113,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3073,
									"end": 3113,
									"name": "LOG3",
									"source": 14
								},
								{
									"begin": 2996,
									"end": 3120,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2933,
									"end": 3120,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2933,
									"end": 3120,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 16,
									"value": "19"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 16,
									"value": "21"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 16,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 16,
									"value": "22"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "32"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "21"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 16,
									"value": "32"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 16,
									"value": "23"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "34"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 16,
									"value": "34"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "35"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 16,
									"value": "35"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "37"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "23"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 16,
									"value": "37"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 16,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 16
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 16
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "39"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "19"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 16,
									"value": "39"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "41"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 16,
									"value": "41"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "tag",
									"source": 16,
									"value": "25"
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "43"
								},
								{
									"begin": 1307,
									"end": 1312,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "22"
								},
								{
									"begin": 1289,
									"end": 1313,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "tag",
									"source": 16,
									"value": "43"
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1284,
									"end": 1287,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1277,
									"end": 1314,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1202,
									"end": 1320,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "tag",
									"source": 16,
									"value": "10"
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1419,
									"end": 1423,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1457,
									"end": 1459,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 1446,
									"end": 1455,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1442,
									"end": 1460,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1434,
									"end": 1460,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1434,
									"end": 1460,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "45"
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1527,
									"end": 1536,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 1523,
									"end": 1540,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1514,
									"end": 1520,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "25"
								},
								{
									"begin": 1470,
									"end": 1541,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "tag",
									"source": 16,
									"value": "45"
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1326,
									"end": 1548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 616,
									"end": 3455,
									"name": "tag",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 616,
									"end": 3455,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 616,
									"end": 3455,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 616,
									"end": 3455,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 616,
									"end": 3455,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 616,
									"end": 3455,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 616,
									"end": 3455,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 616,
									"end": 3455,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 616,
									"end": 3455,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220efc774138bd4e9619769e43d00e4c44c1c8f8f32088ceefac19347a2822e756064736f6c634300081c0033",
									".code": [
										{
											"begin": 616,
											"end": 3455,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "PUSH",
											"source": 11,
											"value": "5C975ABB"
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "PUSH",
											"source": 11,
											"value": "AF66EF65"
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "PUSH",
											"source": 11,
											"value": "AF66EF65"
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "PUSH",
											"source": 11,
											"value": "B8DE4343"
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "PUSH",
											"source": 11,
											"value": "C884EF83"
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "PUSH",
											"source": 11,
											"value": "F2FDE38B"
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "PUSH",
											"source": 11,
											"value": "FB2228FE"
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "tag",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "PUSH",
											"source": 11,
											"value": "5C975ABB"
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "PUSH",
											"source": 11,
											"value": "715018A6"
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "PUSH",
											"source": 11,
											"value": "8456CB59"
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "PUSH",
											"source": 11,
											"value": "8DA5CB5B"
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "tag",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "PUSH",
											"source": 11,
											"value": "3CCFD60B"
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "PUSH",
											"source": 11,
											"value": "3CCFD60B"
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "PUSH",
											"source": 11,
											"value": "3F4BA83A"
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "PUSH",
											"source": 11,
											"value": "4875590A"
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "PUSH",
											"source": 11,
											"value": "53A4CFF4"
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "PUSH",
											"source": 11,
											"value": "56A6D9EF"
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "tag",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "PUSH",
											"source": 11,
											"value": "12065FE0"
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "PUSH",
											"source": 11,
											"value": "16ADA547"
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "PUSH",
											"source": 11,
											"value": "1E83409A"
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "PUSH",
											"source": 11,
											"value": "205306B4"
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 616,
											"end": 3455,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3085,
											"end": 3182,
											"name": "tag",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 3085,
											"end": 3182,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3085,
											"end": 3182,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 3085,
											"end": 3182,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 3085,
											"end": 3182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3085,
											"end": 3182,
											"name": "tag",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 3085,
											"end": 3182,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3085,
											"end": 3182,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3085,
											"end": 3182,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3085,
											"end": 3182,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 3085,
											"end": 3182,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3085,
											"end": 3182,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3085,
											"end": 3182,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 3085,
											"end": 3182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3085,
											"end": 3182,
											"name": "tag",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 3085,
											"end": 3182,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3085,
											"end": 3182,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3085,
											"end": 3182,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3085,
											"end": 3182,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3085,
											"end": 3182,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3085,
											"end": 3182,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3085,
											"end": 3182,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3085,
											"end": 3182,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 3368,
											"end": 3453,
											"name": "tag",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3368,
											"end": 3453,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3368,
											"end": 3453,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 3368,
											"end": 3453,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 3368,
											"end": 3453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3368,
											"end": 3453,
											"name": "tag",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 3368,
											"end": 3453,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3368,
											"end": 3453,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3368,
											"end": 3453,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3368,
											"end": 3453,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 3368,
											"end": 3453,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3368,
											"end": 3453,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3368,
											"end": 3453,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 3368,
											"end": 3453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3368,
											"end": 3453,
											"name": "tag",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 3368,
											"end": 3453,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3368,
											"end": 3453,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3368,
											"end": 3453,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3368,
											"end": 3453,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3368,
											"end": 3453,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3368,
											"end": 3453,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3368,
											"end": 3453,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3368,
											"end": 3453,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1070,
											"end": 1651,
											"name": "tag",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 1070,
											"end": 1651,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1070,
											"end": 1651,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 1070,
											"end": 1651,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1070,
											"end": 1651,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1070,
											"end": 1651,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1070,
											"end": 1651,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1070,
											"end": 1651,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1070,
											"end": 1651,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1070,
											"end": 1651,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1070,
											"end": 1651,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 1070,
											"end": 1651,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1070,
											"end": 1651,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1070,
											"end": 1651,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 1070,
											"end": 1651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1070,
											"end": 1651,
											"name": "tag",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 1070,
											"end": 1651,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1070,
											"end": 1651,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 1070,
											"end": 1651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1070,
											"end": 1651,
											"name": "tag",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 1070,
											"end": 1651,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1070,
											"end": 1651,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1070,
											"end": 1651,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1070,
											"end": 1651,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 1070,
											"end": 1651,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1070,
											"end": 1651,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1070,
											"end": 1651,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 1070,
											"end": 1651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1070,
											"end": 1651,
											"name": "tag",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 1070,
											"end": 1651,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1070,
											"end": 1651,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1070,
											"end": 1651,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1070,
											"end": 1651,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1070,
											"end": 1651,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1070,
											"end": 1651,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1070,
											"end": 1651,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1070,
											"end": 1651,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 791,
											"end": 833,
											"name": "tag",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 791,
											"end": 833,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 791,
											"end": 833,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 791,
											"end": 833,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 791,
											"end": 833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 791,
											"end": 833,
											"name": "tag",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 791,
											"end": 833,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 791,
											"end": 833,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 791,
											"end": 833,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 791,
											"end": 833,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 791,
											"end": 833,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 791,
											"end": 833,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 791,
											"end": 833,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 791,
											"end": 833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 791,
											"end": 833,
											"name": "tag",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 791,
											"end": 833,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 791,
											"end": 833,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 791,
											"end": 833,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 791,
											"end": 833,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 791,
											"end": 833,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 791,
											"end": 833,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 791,
											"end": 833,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 791,
											"end": 833,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2516,
											"end": 2704,
											"name": "tag",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 2516,
											"end": 2704,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2516,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2516,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 2516,
											"end": 2704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2516,
											"end": 2704,
											"name": "tag",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2516,
											"end": 2704,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2516,
											"end": 2704,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 3299,
											"end": 3362,
											"name": "tag",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 3299,
											"end": 3362,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3299,
											"end": 3362,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 3299,
											"end": 3362,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 3299,
											"end": 3362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3299,
											"end": 3362,
											"name": "tag",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 3299,
											"end": 3362,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3299,
											"end": 3362,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 758,
											"end": 785,
											"name": "tag",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 758,
											"end": 785,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 758,
											"end": 785,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 758,
											"end": 785,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 758,
											"end": 785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 758,
											"end": 785,
											"name": "tag",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 758,
											"end": 785,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 758,
											"end": 785,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 758,
											"end": 785,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 758,
											"end": 785,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 758,
											"end": 785,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 758,
											"end": 785,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 758,
											"end": 785,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 758,
											"end": 785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 758,
											"end": 785,
											"name": "tag",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 758,
											"end": 785,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 758,
											"end": 785,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 758,
											"end": 785,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 758,
											"end": 785,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 758,
											"end": 785,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 758,
											"end": 785,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 758,
											"end": 785,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 758,
											"end": 785,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1698,
											"end": 1909,
											"name": "tag",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 1698,
											"end": 1909,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1698,
											"end": 1909,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 1698,
											"end": 1909,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1698,
											"end": 1909,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1698,
											"end": 1909,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1698,
											"end": 1909,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1698,
											"end": 1909,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1698,
											"end": 1909,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1698,
											"end": 1909,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1698,
											"end": 1909,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 1698,
											"end": 1909,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1698,
											"end": 1909,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1698,
											"end": 1909,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 1698,
											"end": 1909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1698,
											"end": 1909,
											"name": "tag",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 1698,
											"end": 1909,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1698,
											"end": 1909,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 1698,
											"end": 1909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1698,
											"end": 1909,
											"name": "tag",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 1698,
											"end": 1909,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1698,
											"end": 1909,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1698,
											"end": 1909,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1698,
											"end": 1909,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 1698,
											"end": 1909,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1698,
											"end": 1909,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1698,
											"end": 1909,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 1698,
											"end": 1909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1698,
											"end": 1909,
											"name": "tag",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 1698,
											"end": 1909,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1698,
											"end": 1909,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1698,
											"end": 1909,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1698,
											"end": 1909,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1698,
											"end": 1909,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1698,
											"end": 1909,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1698,
											"end": 1909,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1698,
											"end": 1909,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2778,
											"end": 3027,
											"name": "tag",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 2778,
											"end": 3027,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2778,
											"end": 3027,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 2778,
											"end": 3027,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2778,
											"end": 3027,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2778,
											"end": 3027,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2778,
											"end": 3027,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2778,
											"end": 3027,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2778,
											"end": 3027,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2778,
											"end": 3027,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2778,
											"end": 3027,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 2778,
											"end": 3027,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2778,
											"end": 3027,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2778,
											"end": 3027,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 2778,
											"end": 3027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2778,
											"end": 3027,
											"name": "tag",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 2778,
											"end": 3027,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2778,
											"end": 3027,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 2778,
											"end": 3027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2778,
											"end": 3027,
											"name": "tag",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 2778,
											"end": 3027,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2778,
											"end": 3027,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 1871,
											"end": 1955,
											"name": "tag",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 1871,
											"end": 1955,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1871,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "57"
										},
										{
											"begin": 1871,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "58"
										},
										{
											"begin": 1871,
											"end": 1955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1871,
											"end": 1955,
											"name": "tag",
											"source": 15,
											"value": "57"
										},
										{
											"begin": 1871,
											"end": 1955,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1871,
											"end": 1955,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1871,
											"end": 1955,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1871,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "59"
										},
										{
											"begin": 1871,
											"end": 1955,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1871,
											"end": 1955,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1871,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "36"
										},
										{
											"begin": 1871,
											"end": 1955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1871,
											"end": 1955,
											"name": "tag",
											"source": 15,
											"value": "59"
										},
										{
											"begin": 1871,
											"end": 1955,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1871,
											"end": 1955,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1871,
											"end": 1955,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1871,
											"end": 1955,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1871,
											"end": 1955,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1871,
											"end": 1955,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1871,
											"end": 1955,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1871,
											"end": 1955,
											"name": "RETURN",
											"source": 15
										},
										{
											"begin": 2314,
											"end": 2415,
											"name": "tag",
											"source": 14,
											"value": "13"
										},
										{
											"begin": 2314,
											"end": 2415,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2314,
											"end": 2415,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 2314,
											"end": 2415,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "61"
										},
										{
											"begin": 2314,
											"end": 2415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2314,
											"end": 2415,
											"name": "tag",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 2314,
											"end": 2415,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2314,
											"end": 2415,
											"name": "STOP",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 3269,
											"name": "tag",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 3210,
											"end": 3269,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3210,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 3210,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 3210,
											"end": 3269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3210,
											"end": 3269,
											"name": "tag",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 3210,
											"end": 3269,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3210,
											"end": 3269,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "tag",
											"source": 14,
											"value": "15"
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "65"
										},
										{
											"begin": 1659,
											"end": 1744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "tag",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "66"
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "47"
										},
										{
											"begin": 1659,
											"end": 1744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "tag",
											"source": 14,
											"value": "66"
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 1915,
											"end": 2120,
											"name": "tag",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 1915,
											"end": 2120,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1915,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 1915,
											"end": 2120,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1915,
											"end": 2120,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1915,
											"end": 2120,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1915,
											"end": 2120,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1915,
											"end": 2120,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1915,
											"end": 2120,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1915,
											"end": 2120,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1915,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 1915,
											"end": 2120,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1915,
											"end": 2120,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1915,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 1915,
											"end": 2120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1915,
											"end": 2120,
											"name": "tag",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 1915,
											"end": 2120,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1915,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 1915,
											"end": 2120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1915,
											"end": 2120,
											"name": "tag",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 1915,
											"end": 2120,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1915,
											"end": 2120,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1915,
											"end": 2120,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1915,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 1915,
											"end": 2120,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1915,
											"end": 2120,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1915,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 1915,
											"end": 2120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1915,
											"end": 2120,
											"name": "tag",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 1915,
											"end": 2120,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1915,
											"end": 2120,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1915,
											"end": 2120,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1915,
											"end": 2120,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1915,
											"end": 2120,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1915,
											"end": 2120,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1915,
											"end": 2120,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1915,
											"end": 2120,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2161,
											"end": 2416,
											"name": "tag",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 2161,
											"end": 2416,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2161,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 2161,
											"end": 2416,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2416,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2161,
											"end": 2416,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2161,
											"end": 2416,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2161,
											"end": 2416,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2161,
											"end": 2416,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2161,
											"end": 2416,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2161,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 2161,
											"end": 2416,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2161,
											"end": 2416,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2161,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 2161,
											"end": 2416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2161,
											"end": 2416,
											"name": "tag",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 2161,
											"end": 2416,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2161,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 2161,
											"end": 2416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2161,
											"end": 2416,
											"name": "tag",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 2161,
											"end": 2416,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2161,
											"end": 2416,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 840,
											"end": 882,
											"name": "tag",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 840,
											"end": 882,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 840,
											"end": 882,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 840,
											"end": 882,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 840,
											"end": 882,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 840,
											"end": 882,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 840,
											"end": 882,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 840,
											"end": 882,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 840,
											"end": 882,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 840,
											"end": 882,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 840,
											"end": 882,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 840,
											"end": 882,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 840,
											"end": 882,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 840,
											"end": 882,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 840,
											"end": 882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 840,
											"end": 882,
											"name": "tag",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 840,
											"end": 882,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 840,
											"end": 882,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 840,
											"end": 882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 840,
											"end": 882,
											"name": "tag",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 840,
											"end": 882,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 840,
											"end": 882,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 840,
											"end": 882,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 840,
											"end": 882,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "78"
										},
										{
											"begin": 840,
											"end": 882,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 840,
											"end": 882,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 840,
											"end": 882,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 840,
											"end": 882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 840,
											"end": 882,
											"name": "tag",
											"source": 11,
											"value": "78"
										},
										{
											"begin": 840,
											"end": 882,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 840,
											"end": 882,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 840,
											"end": 882,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 840,
											"end": 882,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 840,
											"end": 882,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 840,
											"end": 882,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 840,
											"end": 882,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 840,
											"end": 882,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2564,
											"end": 2779,
											"name": "tag",
											"source": 14,
											"value": "19"
										},
										{
											"begin": 2564,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2564,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "79"
										},
										{
											"begin": 2564,
											"end": 2779,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 2564,
											"end": 2779,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2564,
											"end": 2779,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 2564,
											"end": 2779,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2564,
											"end": 2779,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2564,
											"end": 2779,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2564,
											"end": 2779,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2564,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 2564,
											"end": 2779,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2564,
											"end": 2779,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2564,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "33"
										},
										{
											"begin": 2564,
											"end": 2779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2564,
											"end": 2779,
											"name": "tag",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 2564,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2564,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "81"
										},
										{
											"begin": 2564,
											"end": 2779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2564,
											"end": 2779,
											"name": "tag",
											"source": 14,
											"value": "79"
										},
										{
											"begin": 2564,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2564,
											"end": 2779,
											"name": "STOP",
											"source": 14
										},
										{
											"begin": 715,
											"end": 752,
											"name": "tag",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 715,
											"end": 752,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 715,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 715,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 715,
											"end": 752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 715,
											"end": 752,
											"name": "tag",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 715,
											"end": 752,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 715,
											"end": 752,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 715,
											"end": 752,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 715,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 715,
											"end": 752,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 715,
											"end": 752,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 715,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 715,
											"end": 752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 715,
											"end": 752,
											"name": "tag",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 715,
											"end": 752,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 715,
											"end": 752,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 715,
											"end": 752,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 715,
											"end": 752,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 715,
											"end": 752,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 715,
											"end": 752,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 715,
											"end": 752,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 715,
											"end": 752,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 3085,
											"end": 3182,
											"name": "tag",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 3085,
											"end": 3182,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3128,
											"end": 3135,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3154,
											"end": 3175,
											"name": "SELFBALANCE",
											"source": 11
										},
										{
											"begin": 3147,
											"end": 3175,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3147,
											"end": 3175,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3085,
											"end": 3182,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3085,
											"end": 3182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3368,
											"end": 3453,
											"name": "tag",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 3368,
											"end": 3453,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3405,
											"end": 3412,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3431,
											"end": 3446,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 3424,
											"end": 3446,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3424,
											"end": 3446,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3368,
											"end": 3453,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3368,
											"end": 3453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1070,
											"end": 1651,
											"name": "tag",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 1070,
											"end": 1651,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1142,
											"end": 1146,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "88"
										},
										{
											"begin": 1552,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "89"
										},
										{
											"begin": 1552,
											"end": 1565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "tag",
											"source": 14,
											"value": "88"
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1495,
											"end": 1514,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "91"
										},
										{
											"begin": 1495,
											"end": 1512,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "92"
										},
										{
											"begin": 1495,
											"end": 1514,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1495,
											"end": 1514,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "91"
										},
										{
											"begin": 1495,
											"end": 1514,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1181,
											"end": 1182,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1162,
											"end": 1169,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1162,
											"end": 1178,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1170,
											"end": 1177,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1162,
											"end": 1178,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1162,
											"end": 1178,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1162,
											"end": 1178,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1162,
											"end": 1178,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1162,
											"end": 1178,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1162,
											"end": 1178,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1162,
											"end": 1178,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1162,
											"end": 1178,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1162,
											"end": 1178,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1162,
											"end": 1178,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1162,
											"end": 1178,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1162,
											"end": 1178,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1162,
											"end": 1178,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1162,
											"end": 1178,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1162,
											"end": 1178,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1162,
											"end": 1178,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1162,
											"end": 1182,
											"modifierDepth": 2,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1158,
											"end": 1321,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1158,
											"end": 1321,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 1158,
											"end": 1321,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1235,
											"end": 1242,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1235,
											"end": 1251,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1243,
											"end": 1250,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1235,
											"end": 1251,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1235,
											"end": 1251,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1235,
											"end": 1251,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1235,
											"end": 1251,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1235,
											"end": 1251,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1235,
											"end": 1251,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1235,
											"end": 1251,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1235,
											"end": 1251,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1235,
											"end": 1251,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1235,
											"end": 1251,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1235,
											"end": 1251,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1235,
											"end": 1251,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1235,
											"end": 1251,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1235,
											"end": 1251,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1235,
											"end": 1251,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1235,
											"end": 1251,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1275,
											"end": 1287,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 1275,
											"end": 1287,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1275,
											"end": 1287,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1275,
											"end": 1287,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1275,
											"end": 1287,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1275,
											"end": 1287,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1275,
											"end": 1287,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1275,
											"end": 1287,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1275,
											"end": 1287,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1275,
											"end": 1287,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1275,
											"end": 1287,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1298,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1269,
											"end": 1298,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1298,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 1299,
											"end": 1306,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1307,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1269,
											"end": 1307,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1307,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1307,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1269,
											"end": 1307,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1307,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 1269,
											"end": 1307,
											"modifierDepth": 2,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1307,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1307,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1307,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1269,
											"end": 1307,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1307,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 1269,
											"end": 1307,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1307,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1307,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 1269,
											"end": 1307,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1307,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 1269,
											"end": 1307,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1307,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1269,
											"end": 1307,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1269,
											"end": 1307,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1307,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1307,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1307,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1307,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1307,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1307,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1307,
											"modifierDepth": 2,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1307,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1307,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1307,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1307,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "97"
										},
										{
											"begin": 1269,
											"end": 1307,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1307,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1307,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1269,
											"end": 1307,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1269,
											"end": 1307,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1307,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1307,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1269,
											"end": 1307,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1307,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "97"
										},
										{
											"begin": 1269,
											"end": 1307,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1307,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1307,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1307,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1307,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1307,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1269,
											"end": 1307,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1307,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1307,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1269,
											"end": 1307,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1307,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1269,
											"end": 1307,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1307,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1307,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1307,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1307,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1307,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1307,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1269,
											"end": 1307,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1307,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1307,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1307,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1307,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1307,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 1269,
											"end": 1307,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1307,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1307,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "99"
										},
										{
											"begin": 1269,
											"end": 1307,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1307,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 1269,
											"end": 1307,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1203,
											"end": 1321,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1203,
											"end": 1321,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1203,
											"end": 1321,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "BBAE19E600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1203,
											"end": 1321,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1203,
											"end": 1321,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1203,
											"end": 1321,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1203,
											"end": 1321,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1203,
											"end": 1321,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1203,
											"end": 1321,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1203,
											"end": 1321,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1203,
											"end": 1321,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1203,
											"end": 1321,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 1203,
											"end": 1321,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1203,
											"end": 1321,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1203,
											"end": 1321,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1203,
											"end": 1321,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1203,
											"end": 1321,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1203,
											"end": 1321,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1203,
											"end": 1321,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1203,
											"end": 1321,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1203,
											"end": 1321,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1203,
											"end": 1321,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1158,
											"end": 1321,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 1158,
											"end": 1321,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1350,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 1338,
											"end": 1350,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1338,
											"end": 1350,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1350,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1350,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1350,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1338,
											"end": 1350,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1350,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1350,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1338,
											"end": 1350,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1338,
											"end": 1350,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1360,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1332,
											"end": 1360,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1360,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "760D9BBA"
										},
										{
											"begin": 1382,
											"end": 1386,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 1401,
											"end": 1408,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1422,
											"end": 1435,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 1422,
											"end": 1435,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1449,
											"end": 1453,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1332,
											"end": 1479,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1332,
											"end": 1479,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1479,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1479,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1332,
											"end": 1479,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1479,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 1332,
											"end": 1479,
											"modifierDepth": 2,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1479,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1479,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1479,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1332,
											"end": 1479,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1479,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 1332,
											"end": 1479,
											"modifierDepth": 2,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1479,
											"modifierDepth": 2,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1479,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1479,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1479,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1479,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 1332,
											"end": 1479,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1479,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 1332,
											"end": 1479,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1479,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1332,
											"end": 1479,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1332,
											"end": 1479,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1479,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1479,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1479,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1479,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1479,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1332,
											"end": 1479,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1479,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1479,
											"modifierDepth": 2,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1479,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1479,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1479,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1479,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 1332,
											"end": 1479,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1479,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1332,
											"end": 1479,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1332,
											"end": 1479,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1479,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 1332,
											"end": 1479,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1479,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1479,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1479,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1479,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1479,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1479,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1479,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 1332,
											"end": 1479,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1479,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1479,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1332,
											"end": 1479,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1332,
											"end": 1479,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1479,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1479,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1332,
											"end": 1479,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1479,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 1332,
											"end": 1479,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1479,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1479,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1479,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1479,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1489,
											"end": 1514,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 1489,
											"end": 1502,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1489,
											"end": 1512,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 1489,
											"end": 1514,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1489,
											"end": 1514,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 1489,
											"end": 1514,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1543,
											"end": 1558,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 1524,
											"end": 1531,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1524,
											"end": 1540,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 1539,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1524,
											"end": 1540,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1524,
											"end": 1540,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1524,
											"end": 1540,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1524,
											"end": 1540,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1524,
											"end": 1540,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1524,
											"end": 1540,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1524,
											"end": 1540,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1524,
											"end": 1540,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1524,
											"end": 1540,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1524,
											"end": 1540,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1524,
											"end": 1540,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1524,
											"end": 1540,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1524,
											"end": 1540,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1524,
											"end": 1540,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1540,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1597,
											"end": 1604,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1589,
											"end": 1622,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1589,
											"end": 1622,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1589,
											"end": 1622,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "D8138F8A3F377C5259CA548E70E4C2DE94F129F5A11036A15B69513CBA2B426A"
										},
										{
											"begin": 1606,
											"end": 1621,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 1589,
											"end": 1622,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1589,
											"end": 1622,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1589,
											"end": 1622,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 1589,
											"end": 1622,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1589,
											"end": 1622,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1589,
											"end": 1622,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 1589,
											"end": 1622,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1589,
											"end": 1622,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 1589,
											"end": 1622,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1589,
											"end": 1622,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1589,
											"end": 1622,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1589,
											"end": 1622,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1589,
											"end": 1622,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1589,
											"end": 1622,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1589,
											"end": 1622,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1589,
											"end": 1622,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 1640,
											"end": 1644,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1633,
											"end": 1644,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1633,
											"end": 1644,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1070,
											"end": 1651,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1070,
											"end": 1651,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1070,
											"end": 1651,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1070,
											"end": 1651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 791,
											"end": 833,
											"name": "tag",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 791,
											"end": 833,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 791,
											"end": 833,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 791,
											"end": 833,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 791,
											"end": 833,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 791,
											"end": 833,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2516,
											"end": 2704,
											"name": "tag",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 2516,
											"end": 2704,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "111"
										},
										{
											"begin": 1552,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "89"
										},
										{
											"begin": 1552,
											"end": 1565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "tag",
											"source": 14,
											"value": "111"
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2563,
											"end": 2577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2580,
											"end": 2601,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 11
										},
										{
											"begin": 2563,
											"end": 2601,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2563,
											"end": 2601,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2612,
											"end": 2624,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2630,
											"end": 2637,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 2630,
											"end": 2635,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 2630,
											"end": 2637,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2630,
											"end": 2637,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 2630,
											"end": 2637,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2630,
											"end": 2642,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2630,
											"end": 2642,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2650,
											"end": 2656,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2630,
											"end": 2661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2630,
											"end": 2661,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2630,
											"end": 2661,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "114"
										},
										{
											"begin": 2630,
											"end": 2661,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2630,
											"end": 2661,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 2630,
											"end": 2661,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2630,
											"end": 2661,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "114"
										},
										{
											"begin": 2630,
											"end": 2661,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2630,
											"end": 2661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2630,
											"end": 2661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2630,
											"end": 2661,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2630,
											"end": 2661,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2630,
											"end": 2661,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2630,
											"end": 2661,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2630,
											"end": 2661,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2630,
											"end": 2661,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2630,
											"end": 2661,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 2630,
											"end": 2661,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 2630,
											"end": 2661,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 2630,
											"end": 2661,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2630,
											"end": 2661,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2630,
											"end": 2661,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2630,
											"end": 2661,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2630,
											"end": 2661,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2630,
											"end": 2661,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2630,
											"end": 2661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2630,
											"end": 2661,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2630,
											"end": 2661,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2630,
											"end": 2661,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 2630,
											"end": 2661,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2630,
											"end": 2661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2630,
											"end": 2661,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2630,
											"end": 2661,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2630,
											"end": 2661,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2630,
											"end": 2661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2630,
											"end": 2661,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2630,
											"end": 2661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "3F"
										},
										{
											"begin": 2630,
											"end": 2661,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2630,
											"end": 2661,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2630,
											"end": 2661,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2630,
											"end": 2661,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2630,
											"end": 2661,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2630,
											"end": 2661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2630,
											"end": 2661,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2630,
											"end": 2661,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2630,
											"end": 2661,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2630,
											"end": 2661,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2630,
											"end": 2661,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2630,
											"end": 2661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2630,
											"end": 2661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2630,
											"end": 2661,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2630,
											"end": 2661,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2630,
											"end": 2661,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 2630,
											"end": 2661,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 2630,
											"end": 2661,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2630,
											"end": 2661,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 2630,
											"end": 2661,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2630,
											"end": 2661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 2630,
											"end": 2661,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2630,
											"end": 2661,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2630,
											"end": 2661,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 2630,
											"end": 2661,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2630,
											"end": 2661,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2611,
											"end": 2661,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2611,
											"end": 2661,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2611,
											"end": 2661,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2679,
											"end": 2686,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2671,
											"end": 2697,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "119"
										},
										{
											"begin": 2671,
											"end": 2697,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2671,
											"end": 2697,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2671,
											"end": 2697,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2671,
											"end": 2697,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2671,
											"end": 2697,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2671,
											"end": 2697,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2671,
											"end": 2697,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2671,
											"end": 2697,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2671,
											"end": 2697,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 2671,
											"end": 2697,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2671,
											"end": 2697,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 2671,
											"end": 2697,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2671,
											"end": 2697,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 2671,
											"end": 2697,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2671,
											"end": 2697,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2671,
											"end": 2697,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2671,
											"end": 2697,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2671,
											"end": 2697,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2671,
											"end": 2697,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2671,
											"end": 2697,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2671,
											"end": 2697,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2671,
											"end": 2697,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "119"
										},
										{
											"begin": 2671,
											"end": 2697,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2553,
											"end": 2704,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2553,
											"end": 2704,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2516,
											"end": 2704,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3299,
											"end": 3362,
											"name": "tag",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 3299,
											"end": 3362,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "123"
										},
										{
											"begin": 1552,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "89"
										},
										{
											"begin": 1552,
											"end": 1565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "tag",
											"source": 14,
											"value": "123"
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3345,
											"end": 3355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 3345,
											"end": 3353,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "126"
										},
										{
											"begin": 3345,
											"end": 3355,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3345,
											"end": 3355,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 3345,
											"end": 3355,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3299,
											"end": 3362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 758,
											"end": 785,
											"name": "tag",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 758,
											"end": 785,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 758,
											"end": 785,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 758,
											"end": 785,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 758,
											"end": 785,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 758,
											"end": 785,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 758,
											"end": 785,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 758,
											"end": 785,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 758,
											"end": 785,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 758,
											"end": 785,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 758,
											"end": 785,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 758,
											"end": 785,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 758,
											"end": 785,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 758,
											"end": 785,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 758,
											"end": 785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1698,
											"end": 1909,
											"name": "tag",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 1698,
											"end": 1909,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1794,
											"end": 1798,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "128"
										},
										{
											"begin": 1552,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "89"
										},
										{
											"begin": 1552,
											"end": 1565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "tag",
											"source": 14,
											"value": "128"
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1830,
											"end": 1837,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1814,
											"end": 1827,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 1814,
											"end": 1837,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1814,
											"end": 1837,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1814,
											"end": 1837,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1814,
											"end": 1837,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1852,
											"end": 1881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "CCC2DC361DC3B02936A3D99C4CD064DE1BBBB59A03AAAD640D302E18F7AACDFB"
										},
										{
											"begin": 1873,
											"end": 1880,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1852,
											"end": 1881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1852,
											"end": 1881,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1852,
											"end": 1881,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 1852,
											"end": 1881,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1852,
											"end": 1881,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1852,
											"end": 1881,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 1852,
											"end": 1881,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1852,
											"end": 1881,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 1852,
											"end": 1881,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1852,
											"end": 1881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1852,
											"end": 1881,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1852,
											"end": 1881,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1852,
											"end": 1881,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1852,
											"end": 1881,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1852,
											"end": 1881,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1852,
											"end": 1881,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 11
										},
										{
											"begin": 1898,
											"end": 1902,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1891,
											"end": 1902,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1891,
											"end": 1902,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1698,
											"end": 1909,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1698,
											"end": 1909,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1698,
											"end": 1909,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1698,
											"end": 1909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2778,
											"end": 3027,
											"name": "tag",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 2778,
											"end": 3027,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "132"
										},
										{
											"begin": 1552,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "89"
										},
										{
											"begin": 1552,
											"end": 1565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "tag",
											"source": 14,
											"value": "132"
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2938,
											"end": 2950,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2956,
											"end": 2959,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2956,
											"end": 2964,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2956,
											"end": 2964,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2972,
											"end": 2979,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2956,
											"end": 2984,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2956,
											"end": 2984,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2956,
											"end": 2984,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 2956,
											"end": 2984,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2956,
											"end": 2984,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 2956,
											"end": 2984,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2956,
											"end": 2984,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 2956,
											"end": 2984,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2956,
											"end": 2984,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2956,
											"end": 2984,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2956,
											"end": 2984,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2956,
											"end": 2984,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2956,
											"end": 2984,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2956,
											"end": 2984,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2956,
											"end": 2984,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2956,
											"end": 2984,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2956,
											"end": 2984,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 2956,
											"end": 2984,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 2956,
											"end": 2984,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 2956,
											"end": 2984,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2956,
											"end": 2984,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2956,
											"end": 2984,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2956,
											"end": 2984,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2956,
											"end": 2984,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2956,
											"end": 2984,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2956,
											"end": 2984,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2956,
											"end": 2984,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2956,
											"end": 2984,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2956,
											"end": 2984,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 2956,
											"end": 2984,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2956,
											"end": 2984,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2956,
											"end": 2984,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2956,
											"end": 2984,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2956,
											"end": 2984,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2956,
											"end": 2984,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2956,
											"end": 2984,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2956,
											"end": 2984,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "3F"
										},
										{
											"begin": 2956,
											"end": 2984,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2956,
											"end": 2984,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2956,
											"end": 2984,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2956,
											"end": 2984,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2956,
											"end": 2984,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2956,
											"end": 2984,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2956,
											"end": 2984,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2956,
											"end": 2984,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2956,
											"end": 2984,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2956,
											"end": 2984,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2956,
											"end": 2984,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2956,
											"end": 2984,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2956,
											"end": 2984,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2956,
											"end": 2984,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2956,
											"end": 2984,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2956,
											"end": 2984,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 2956,
											"end": 2984,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 2956,
											"end": 2984,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2956,
											"end": 2984,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 2956,
											"end": 2984,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2956,
											"end": 2984,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 2956,
											"end": 2984,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2956,
											"end": 2984,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2956,
											"end": 2984,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 2956,
											"end": 2984,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2956,
											"end": 2984,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2937,
											"end": 2984,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2937,
											"end": 2984,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2937,
											"end": 2984,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3009,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2994,
											"end": 3020,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 2994,
											"end": 3020,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2994,
											"end": 3020,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2994,
											"end": 3020,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2994,
											"end": 3020,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2994,
											"end": 3020,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2994,
											"end": 3020,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2994,
											"end": 3020,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2994,
											"end": 3020,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2994,
											"end": 3020,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 2994,
											"end": 3020,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2994,
											"end": 3020,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 2994,
											"end": 3020,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2994,
											"end": 3020,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 2994,
											"end": 3020,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2994,
											"end": 3020,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2994,
											"end": 3020,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2994,
											"end": 3020,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2994,
											"end": 3020,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2994,
											"end": 3020,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2994,
											"end": 3020,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2994,
											"end": 3020,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2994,
											"end": 3020,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 2994,
											"end": 3020,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2878,
											"end": 3027,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2778,
											"end": 3027,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2778,
											"end": 3027,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2778,
											"end": 3027,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1871,
											"end": 1955,
											"name": "tag",
											"source": 15,
											"value": "58"
										},
										{
											"begin": 1871,
											"end": 1955,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1918,
											"end": 1922,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1941,
											"end": 1948,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1941,
											"end": 1948,
											"name": "PUSH",
											"source": 15,
											"value": "14"
										},
										{
											"begin": 1941,
											"end": 1948,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1941,
											"end": 1948,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 1941,
											"end": 1948,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1941,
											"end": 1948,
											"name": "PUSH",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 1941,
											"end": 1948,
											"name": "EXP",
											"source": 15
										},
										{
											"begin": 1941,
											"end": 1948,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1941,
											"end": 1948,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 1941,
											"end": 1948,
											"name": "PUSH",
											"source": 15,
											"value": "FF"
										},
										{
											"begin": 1941,
											"end": 1948,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1934,
											"end": 1948,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1934,
											"end": 1948,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1871,
											"end": 1955,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1871,
											"end": 1955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2314,
											"end": 2415,
											"name": "tag",
											"source": 14,
											"value": "61"
										},
										{
											"begin": 2314,
											"end": 2415,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "142"
										},
										{
											"begin": 1552,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "89"
										},
										{
											"begin": 1552,
											"end": 1565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "tag",
											"source": 14,
											"value": "142"
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2378,
											"end": 2408,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "144"
										},
										{
											"begin": 2405,
											"end": 2406,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2378,
											"end": 2396,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "145"
										},
										{
											"begin": 2378,
											"end": 2408,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2378,
											"end": 2408,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "144"
										},
										{
											"begin": 2378,
											"end": 2408,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2314,
											"end": 2415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 3269,
											"name": "tag",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 3210,
											"end": 3269,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "147"
										},
										{
											"begin": 1552,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "89"
										},
										{
											"begin": 1552,
											"end": 1565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "tag",
											"source": 14,
											"value": "147"
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3254,
											"end": 3262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 3254,
											"end": 3260,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 3254,
											"end": 3262,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3254,
											"end": 3262,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 3254,
											"end": 3262,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3210,
											"end": 3269,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "tag",
											"source": 14,
											"value": "65"
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1705,
											"end": 1712,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1731,
											"end": 1737,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1731,
											"end": 1737,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1731,
											"end": 1737,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1731,
											"end": 1737,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1731,
											"end": 1737,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1731,
											"end": 1737,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 1731,
											"end": 1737,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 1731,
											"end": 1737,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1731,
											"end": 1737,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 1731,
											"end": 1737,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1731,
											"end": 1737,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1724,
											"end": 1737,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1724,
											"end": 1737,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1659,
											"end": 1744,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1915,
											"end": 2120,
											"name": "tag",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 1915,
											"end": 2120,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2009,
											"end": 2013,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "153"
										},
										{
											"begin": 1552,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "89"
										},
										{
											"begin": 1552,
											"end": 1565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "tag",
											"source": 14,
											"value": "153"
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2044,
											"end": 2050,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2029,
											"end": 2041,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 2029,
											"end": 2041,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2029,
											"end": 2050,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2029,
											"end": 2050,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2029,
											"end": 2050,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2029,
											"end": 2050,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2029,
											"end": 2050,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2029,
											"end": 2050,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2029,
											"end": 2050,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2029,
											"end": 2050,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2029,
											"end": 2050,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2029,
											"end": 2050,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2029,
											"end": 2050,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2029,
											"end": 2050,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2029,
											"end": 2050,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2029,
											"end": 2050,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2029,
											"end": 2050,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2029,
											"end": 2050,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2029,
											"end": 2050,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2029,
											"end": 2050,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2065,
											"end": 2092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "F9563F2FF8321C25EC4EE92F781A8D3EBC72F854DAA4BF9177F3886B6CA1F7E1"
										},
										{
											"begin": 2085,
											"end": 2091,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2065,
											"end": 2092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2065,
											"end": 2092,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2065,
											"end": 2092,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 2065,
											"end": 2092,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2065,
											"end": 2092,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2065,
											"end": 2092,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 2065,
											"end": 2092,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2065,
											"end": 2092,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 2065,
											"end": 2092,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2065,
											"end": 2092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2065,
											"end": 2092,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2065,
											"end": 2092,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2065,
											"end": 2092,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2065,
											"end": 2092,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2065,
											"end": 2092,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2065,
											"end": 2092,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 11
										},
										{
											"begin": 2109,
											"end": 2113,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2102,
											"end": 2113,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2102,
											"end": 2113,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1915,
											"end": 2120,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1915,
											"end": 2120,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1915,
											"end": 2120,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1915,
											"end": 2120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2161,
											"end": 2416,
											"name": "tag",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 2161,
											"end": 2416,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "157"
										},
										{
											"begin": 1552,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "89"
										},
										{
											"begin": 1552,
											"end": 1565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "tag",
											"source": 14,
											"value": "157"
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2345,
											"end": 2355,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2339,
											"end": 2365,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2339,
											"end": 2365,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2339,
											"end": 2365,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "760D9BBA"
										},
										{
											"begin": 2374,
											"end": 2378,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 2381,
											"end": 2384,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2386,
											"end": 2393,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2395,
											"end": 2401,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2403,
											"end": 2408,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2339,
											"end": 2409,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2339,
											"end": 2409,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2339,
											"end": 2409,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2339,
											"end": 2409,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2339,
											"end": 2409,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2339,
											"end": 2409,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 2339,
											"end": 2409,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 2339,
											"end": 2409,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2339,
											"end": 2409,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2339,
											"end": 2409,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2339,
											"end": 2409,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2339,
											"end": 2409,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 2339,
											"end": 2409,
											"modifierDepth": 1,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 2339,
											"end": 2409,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 2339,
											"end": 2409,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 2339,
											"end": 2409,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2339,
											"end": 2409,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2339,
											"end": 2409,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2339,
											"end": 2409,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "160"
										},
										{
											"begin": 2339,
											"end": 2409,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2339,
											"end": 2409,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 2339,
											"end": 2409,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2339,
											"end": 2409,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2339,
											"end": 2409,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2339,
											"end": 2409,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2339,
											"end": 2409,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2339,
											"end": 2409,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2339,
											"end": 2409,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2339,
											"end": 2409,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2339,
											"end": 2409,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2339,
											"end": 2409,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 2339,
											"end": 2409,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2339,
											"end": 2409,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 2339,
											"end": 2409,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2339,
											"end": 2409,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2339,
											"end": 2409,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2339,
											"end": 2409,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 2339,
											"end": 2409,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2339,
											"end": 2409,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2339,
											"end": 2409,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2339,
											"end": 2409,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2339,
											"end": 2409,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 2339,
											"end": 2409,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2339,
											"end": 2409,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2339,
											"end": 2409,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 2339,
											"end": 2409,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 2339,
											"end": 2409,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2339,
											"end": 2409,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2339,
											"end": 2409,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2339,
											"end": 2409,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 2339,
											"end": 2409,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2339,
											"end": 2409,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2339,
											"end": 2409,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2339,
											"end": 2409,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2339,
											"end": 2409,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 2339,
											"end": 2409,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2339,
											"end": 2409,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2339,
											"end": 2409,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2339,
											"end": 2409,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 2339,
											"end": 2409,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2339,
											"end": 2409,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2339,
											"end": 2409,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2339,
											"end": 2409,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2339,
											"end": 2409,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2161,
											"end": 2416,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2161,
											"end": 2416,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2161,
											"end": 2416,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2161,
											"end": 2416,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2161,
											"end": 2416,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2161,
											"end": 2416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 840,
											"end": 882,
											"name": "tag",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 840,
											"end": 882,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 840,
											"end": 882,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 840,
											"end": 882,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 840,
											"end": 882,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 840,
											"end": 882,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 840,
											"end": 882,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 840,
											"end": 882,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 840,
											"end": 882,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 840,
											"end": 882,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 840,
											"end": 882,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 840,
											"end": 882,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 840,
											"end": 882,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 840,
											"end": 882,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 840,
											"end": 882,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 840,
											"end": 882,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 840,
											"end": 882,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 840,
											"end": 882,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 840,
											"end": 882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2564,
											"end": 2779,
											"name": "tag",
											"source": 14,
											"value": "81"
										},
										{
											"begin": 2564,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "165"
										},
										{
											"begin": 1552,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "89"
										},
										{
											"begin": 1552,
											"end": 1565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "tag",
											"source": 14,
											"value": "165"
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2668,
											"end": 2669,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2648,
											"end": 2670,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2648,
											"end": 2670,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2648,
											"end": 2656,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2648,
											"end": 2670,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2648,
											"end": 2670,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2648,
											"end": 2670,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2644,
											"end": 2735,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "167"
										},
										{
											"begin": 2644,
											"end": 2735,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2721,
											"end": 2722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2693,
											"end": 2724,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2693,
											"end": 2724,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2693,
											"end": 2724,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2693,
											"end": 2724,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2693,
											"end": 2724,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2693,
											"end": 2724,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 2693,
											"end": 2724,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2693,
											"end": 2724,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "168"
										},
										{
											"begin": 2693,
											"end": 2724,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2693,
											"end": 2724,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2693,
											"end": 2724,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "47"
										},
										{
											"begin": 2693,
											"end": 2724,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2693,
											"end": 2724,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "168"
										},
										{
											"begin": 2693,
											"end": 2724,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2693,
											"end": 2724,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2693,
											"end": 2724,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2693,
											"end": 2724,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2693,
											"end": 2724,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2693,
											"end": 2724,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2693,
											"end": 2724,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2693,
											"end": 2724,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2644,
											"end": 2735,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "167"
										},
										{
											"begin": 2644,
											"end": 2735,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2744,
											"end": 2772,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "169"
										},
										{
											"begin": 2763,
											"end": 2771,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2744,
											"end": 2762,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "145"
										},
										{
											"begin": 2744,
											"end": 2772,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2744,
											"end": 2772,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "169"
										},
										{
											"begin": 2744,
											"end": 2772,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2564,
											"end": 2779,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2564,
											"end": 2779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 715,
											"end": 752,
											"name": "tag",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 715,
											"end": 752,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 715,
											"end": 752,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 715,
											"end": 752,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 715,
											"end": 752,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 715,
											"end": 752,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 715,
											"end": 752,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 715,
											"end": 752,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 715,
											"end": 752,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 715,
											"end": 752,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 715,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1817,
											"end": 1979,
											"name": "tag",
											"source": 14,
											"value": "89"
										},
										{
											"begin": 1817,
											"end": 1979,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "171"
										},
										{
											"begin": 1887,
											"end": 1897,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "172"
										},
										{
											"begin": 1887,
											"end": 1899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "tag",
											"source": 14,
											"value": "171"
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1876,
											"end": 1899,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1876,
											"end": 1899,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1876,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "173"
										},
										{
											"begin": 1876,
											"end": 1881,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "65"
										},
										{
											"begin": 1876,
											"end": 1883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1876,
											"end": 1883,
											"name": "tag",
											"source": 14,
											"value": "173"
										},
										{
											"begin": 1876,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1876,
											"end": 1899,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1876,
											"end": 1899,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1876,
											"end": 1899,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 1872,
											"end": 1973,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "174"
										},
										{
											"begin": 1872,
											"end": 1973,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1949,
											"end": 1961,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "175"
										},
										{
											"begin": 1949,
											"end": 1959,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "172"
										},
										{
											"begin": 1949,
											"end": 1961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1949,
											"end": 1961,
											"name": "tag",
											"source": 14,
											"value": "175"
										},
										{
											"begin": 1949,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1922,
											"end": 1962,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1922,
											"end": 1962,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1922,
											"end": 1962,
											"name": "PUSH",
											"source": 14,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1922,
											"end": 1962,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1922,
											"end": 1962,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1922,
											"end": 1962,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1922,
											"end": 1962,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1922,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "176"
										},
										{
											"begin": 1922,
											"end": 1962,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1922,
											"end": 1962,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1922,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "47"
										},
										{
											"begin": 1922,
											"end": 1962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1922,
											"end": 1962,
											"name": "tag",
											"source": 14,
											"value": "176"
										},
										{
											"begin": 1922,
											"end": 1962,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1922,
											"end": 1962,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1922,
											"end": 1962,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1922,
											"end": 1962,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1922,
											"end": 1962,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1922,
											"end": 1962,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1922,
											"end": 1962,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1922,
											"end": 1962,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1872,
											"end": 1973,
											"name": "tag",
											"source": 14,
											"value": "174"
										},
										{
											"begin": 1872,
											"end": 1973,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1817,
											"end": 1979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2023,
											"end": 2151,
											"name": "tag",
											"source": 15,
											"value": "92"
										},
										{
											"begin": 2023,
											"end": 2151,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2088,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "178"
										},
										{
											"begin": 2088,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "58"
										},
										{
											"begin": 2088,
											"end": 2096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2088,
											"end": 2096,
											"name": "tag",
											"source": 15,
											"value": "178"
										},
										{
											"begin": 2088,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2084,
											"end": 2145,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2084,
											"end": 2145,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "179"
										},
										{
											"begin": 2084,
											"end": 2145,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2119,
											"end": 2134,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2119,
											"end": 2134,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 2119,
											"end": 2134,
											"name": "PUSH",
											"source": 15,
											"value": "D93C066500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2119,
											"end": 2134,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2119,
											"end": 2134,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2119,
											"end": 2134,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 2119,
											"end": 2134,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2119,
											"end": 2134,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2119,
											"end": 2134,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 2119,
											"end": 2134,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2119,
											"end": 2134,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2119,
											"end": 2134,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2119,
											"end": 2134,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2119,
											"end": 2134,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2084,
											"end": 2145,
											"name": "tag",
											"source": 15,
											"value": "179"
										},
										{
											"begin": 2084,
											"end": 2145,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2023,
											"end": 2151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 970,
											"end": 1097,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 970,
											"end": 1097,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1077,
											"end": 1078,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1059,
											"end": 1066,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1073,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1059,
											"end": 1073,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1073,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1059,
											"end": 1078,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1078,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1078,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1078,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1078,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1078,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1078,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1078,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1078,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1078,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1078,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 970,
											"end": 1097,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 970,
											"end": 1097,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2731,
											"end": 2848,
											"name": "tag",
											"source": 15,
											"value": "126"
										},
										{
											"begin": 2731,
											"end": 2848,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1742,
											"end": 1758,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "182"
										},
										{
											"begin": 1742,
											"end": 1756,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "183"
										},
										{
											"begin": 1742,
											"end": 1758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1742,
											"end": 1758,
											"name": "tag",
											"source": 15,
											"value": "182"
										},
										{
											"begin": 1742,
											"end": 1758,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2799,
											"end": 2804,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2789,
											"end": 2796,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2789,
											"end": 2796,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "14"
										},
										{
											"begin": 2789,
											"end": 2804,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 2789,
											"end": 2804,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 15
										},
										{
											"begin": 2789,
											"end": 2804,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2789,
											"end": 2804,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 2789,
											"end": 2804,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2789,
											"end": 2804,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "FF"
										},
										{
											"begin": 2789,
											"end": 2804,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 2789,
											"end": 2804,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 2789,
											"end": 2804,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2789,
											"end": 2804,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2789,
											"end": 2804,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2789,
											"end": 2804,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2789,
											"end": 2804,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2789,
											"end": 2804,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 2789,
											"end": 2804,
											"modifierDepth": 1,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 2789,
											"end": 2804,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2789,
											"end": 2804,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 2789,
											"end": 2804,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2819,
											"end": 2841,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 2828,
											"end": 2840,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "185"
										},
										{
											"begin": 2828,
											"end": 2838,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "172"
										},
										{
											"begin": 2828,
											"end": 2840,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2828,
											"end": 2840,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "185"
										},
										{
											"begin": 2828,
											"end": 2840,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2819,
											"end": 2841,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2819,
											"end": 2841,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 2819,
											"end": 2841,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "186"
										},
										{
											"begin": 2819,
											"end": 2841,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2819,
											"end": 2841,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2819,
											"end": 2841,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "47"
										},
										{
											"begin": 2819,
											"end": 2841,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2819,
											"end": 2841,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "186"
										},
										{
											"begin": 2819,
											"end": 2841,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2819,
											"end": 2841,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2819,
											"end": 2841,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 2819,
											"end": 2841,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2819,
											"end": 2841,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2819,
											"end": 2841,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2819,
											"end": 2841,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2819,
											"end": 2841,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 15
										},
										{
											"begin": 2731,
											"end": 2848,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2933,
											"end": 3120,
											"name": "tag",
											"source": 14,
											"value": "145"
										},
										{
											"begin": 2933,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3006,
											"end": 3022,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3025,
											"end": 3031,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3025,
											"end": 3031,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3025,
											"end": 3031,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3025,
											"end": 3031,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3025,
											"end": 3031,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3025,
											"end": 3031,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 3025,
											"end": 3031,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 3025,
											"end": 3031,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3025,
											"end": 3031,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 3025,
											"end": 3031,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3025,
											"end": 3031,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3006,
											"end": 3031,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3006,
											"end": 3031,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3050,
											"end": 3058,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3041,
											"end": 3047,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3041,
											"end": 3047,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3041,
											"end": 3058,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 3041,
											"end": 3058,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 3041,
											"end": 3058,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3041,
											"end": 3058,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3041,
											"end": 3058,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3041,
											"end": 3058,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3041,
											"end": 3058,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 3041,
											"end": 3058,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 3041,
											"end": 3058,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3041,
											"end": 3058,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3041,
											"end": 3058,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3041,
											"end": 3058,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3041,
											"end": 3058,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3041,
											"end": 3058,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 3041,
											"end": 3058,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 3041,
											"end": 3058,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3041,
											"end": 3058,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 3041,
											"end": 3058,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3104,
											"end": 3112,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3073,
											"end": 3113,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3073,
											"end": 3113,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3094,
											"end": 3102,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3073,
											"end": 3113,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3073,
											"end": 3113,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3073,
											"end": 3113,
											"name": "PUSH",
											"source": 14,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3073,
											"end": 3113,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3073,
											"end": 3113,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3073,
											"end": 3113,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3073,
											"end": 3113,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3073,
											"end": 3113,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3073,
											"end": 3113,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3073,
											"end": 3113,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3073,
											"end": 3113,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3073,
											"end": 3113,
											"name": "LOG3",
											"source": 14
										},
										{
											"begin": 2996,
											"end": 3120,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2933,
											"end": 3120,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2933,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2484,
											"end": 2599,
											"name": "tag",
											"source": 15,
											"value": "150"
										},
										{
											"begin": 2484,
											"end": 2599,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1495,
											"end": 1514,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "189"
										},
										{
											"begin": 1495,
											"end": 1512,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "92"
										},
										{
											"begin": 1495,
											"end": 1514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1495,
											"end": 1514,
											"name": "tag",
											"source": 15,
											"value": "189"
										},
										{
											"begin": 1495,
											"end": 1514,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2553,
											"end": 2557,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 2543,
											"end": 2550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "14"
										},
										{
											"begin": 2543,
											"end": 2557,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 2543,
											"end": 2557,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 15
										},
										{
											"begin": 2543,
											"end": 2557,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2543,
											"end": 2557,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 2543,
											"end": 2557,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2543,
											"end": 2557,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "FF"
										},
										{
											"begin": 2543,
											"end": 2557,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 2543,
											"end": 2557,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 2543,
											"end": 2557,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2543,
											"end": 2557,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2543,
											"end": 2557,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2543,
											"end": 2557,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2543,
											"end": 2557,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2543,
											"end": 2557,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 2543,
											"end": 2557,
											"modifierDepth": 1,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 2543,
											"end": 2557,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2543,
											"end": 2557,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 2543,
											"end": 2557,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2572,
											"end": 2592,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2579,
											"end": 2591,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "191"
										},
										{
											"begin": 2579,
											"end": 2589,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "172"
										},
										{
											"begin": 2579,
											"end": 2591,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2579,
											"end": 2591,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "191"
										},
										{
											"begin": 2579,
											"end": 2591,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2572,
											"end": 2592,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2572,
											"end": 2592,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 2572,
											"end": 2592,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "192"
										},
										{
											"begin": 2572,
											"end": 2592,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2572,
											"end": 2592,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2572,
											"end": 2592,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "47"
										},
										{
											"begin": 2572,
											"end": 2592,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2572,
											"end": 2592,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "192"
										},
										{
											"begin": 2572,
											"end": 2592,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2572,
											"end": 2592,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2572,
											"end": 2592,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 2572,
											"end": 2592,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2572,
											"end": 2592,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2572,
											"end": 2592,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2572,
											"end": 2592,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2572,
											"end": 2592,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 15
										},
										{
											"begin": 2484,
											"end": 2599,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2223,
											"end": 2349,
											"name": "tag",
											"source": 15,
											"value": "183"
										},
										{
											"begin": 2223,
											"end": 2349,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2286,
											"end": 2294,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "195"
										},
										{
											"begin": 2286,
											"end": 2292,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "58"
										},
										{
											"begin": 2286,
											"end": 2294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2286,
											"end": 2294,
											"name": "tag",
											"source": 15,
											"value": "195"
										},
										{
											"begin": 2286,
											"end": 2294,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2281,
											"end": 2343,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "196"
										},
										{
											"begin": 2281,
											"end": 2343,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2317,
											"end": 2332,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2332,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 2317,
											"end": 2332,
											"name": "PUSH",
											"source": 15,
											"value": "8DFC202B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2317,
											"end": 2332,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2317,
											"end": 2332,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2317,
											"end": 2332,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2332,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2317,
											"end": 2332,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2332,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 2317,
											"end": 2332,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2317,
											"end": 2332,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2317,
											"end": 2332,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2317,
											"end": 2332,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2317,
											"end": 2332,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2281,
											"end": 2343,
											"name": "tag",
											"source": 15,
											"value": "196"
										},
										{
											"begin": 2281,
											"end": 2343,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2223,
											"end": 2349,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 16,
											"value": "197"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 16,
											"value": "198"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "241"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "197"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 16,
											"value": "241"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 16,
											"value": "27"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "243"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "198"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 16,
											"value": "243"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 442,
											"end": 517,
											"name": "tag",
											"source": 16,
											"value": "199"
										},
										{
											"begin": 442,
											"end": 517,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 475,
											"end": 481,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 508,
											"end": 510,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 502,
											"end": 511,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 492,
											"end": 511,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 492,
											"end": 511,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 442,
											"end": 517,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 442,
											"end": 517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 523,
											"end": 640,
											"name": "tag",
											"source": 16,
											"value": "200"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 630,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 622,
											"end": 634,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 646,
											"end": 763,
											"name": "tag",
											"source": 16,
											"value": "201"
										},
										{
											"begin": 646,
											"end": 763,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 755,
											"end": 756,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 752,
											"end": 753,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 745,
											"end": 757,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 769,
											"end": 895,
											"name": "tag",
											"source": 16,
											"value": "202"
										},
										{
											"begin": 769,
											"end": 895,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 806,
											"end": 813,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 888,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 839,
											"end": 844,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 835,
											"end": 889,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 824,
											"end": 889,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 824,
											"end": 889,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 769,
											"end": 895,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 769,
											"end": 895,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 769,
											"end": 895,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 769,
											"end": 895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 901,
											"end": 997,
											"name": "tag",
											"source": 16,
											"value": "203"
										},
										{
											"begin": 901,
											"end": 997,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 938,
											"end": 945,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 967,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "249"
										},
										{
											"begin": 985,
											"end": 990,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 967,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "202"
										},
										{
											"begin": 967,
											"end": 991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 967,
											"end": 991,
											"name": "tag",
											"source": 16,
											"value": "249"
										},
										{
											"begin": 967,
											"end": 991,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 956,
											"end": 991,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 956,
											"end": 991,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 901,
											"end": 997,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 901,
											"end": 997,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 901,
											"end": 997,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 901,
											"end": 997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "tag",
											"source": 16,
											"value": "204"
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "251"
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "203"
										},
										{
											"begin": 1076,
											"end": 1100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "tag",
											"source": 16,
											"value": "251"
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1069,
											"end": 1074,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1066,
											"end": 1101,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "252"
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1115,
											"end": 1116,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1113,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1105,
											"end": 1117,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "tag",
											"source": 16,
											"value": "252"
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1003,
											"end": 1125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "tag",
											"source": 16,
											"value": "205"
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1177,
											"end": 1182,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1202,
											"end": 1222,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "254"
										},
										{
											"begin": 1258,
											"end": 1263,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "204"
										},
										{
											"begin": 1231,
											"end": 1264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "tag",
											"source": 16,
											"value": "254"
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1131,
											"end": 1270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "tag",
											"source": 16,
											"value": "33"
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1335,
											"end": 1341,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1384,
											"end": 1386,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1372,
											"end": 1381,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1363,
											"end": 1370,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1355,
											"end": 1387,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "256"
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "257"
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "200"
										},
										{
											"begin": 1390,
											"end": 1469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "tag",
											"source": 16,
											"value": "257"
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "tag",
											"source": 16,
											"value": "256"
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1510,
											"end": 1511,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "258"
										},
										{
											"begin": 1580,
											"end": 1587,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1560,
											"end": 1569,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 1556,
											"end": 1578,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "205"
										},
										{
											"begin": 1535,
											"end": 1588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "tag",
											"source": 16,
											"value": "258"
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1525,
											"end": 1588,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1525,
											"end": 1588,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1481,
											"end": 1598,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1276,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1611,
											"end": 1701,
											"name": "tag",
											"source": 16,
											"value": "206"
										},
										{
											"begin": 1611,
											"end": 1701,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1645,
											"end": 1652,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1688,
											"end": 1693,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1681,
											"end": 1694,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1674,
											"end": 1695,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1663,
											"end": 1695,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1663,
											"end": 1695,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1611,
											"end": 1701,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1611,
											"end": 1701,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1611,
											"end": 1701,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1611,
											"end": 1701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1707,
											"end": 1816,
											"name": "tag",
											"source": 16,
											"value": "207"
										},
										{
											"begin": 1707,
											"end": 1816,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1788,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "261"
										},
										{
											"begin": 1803,
											"end": 1808,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1788,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "206"
										},
										{
											"begin": 1788,
											"end": 1809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1788,
											"end": 1809,
											"name": "tag",
											"source": 16,
											"value": "261"
										},
										{
											"begin": 1788,
											"end": 1809,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1783,
											"end": 1786,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1776,
											"end": 1810,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1707,
											"end": 1816,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1707,
											"end": 1816,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1707,
											"end": 1816,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1822,
											"end": 2032,
											"name": "tag",
											"source": 16,
											"value": "36"
										},
										{
											"begin": 1822,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1909,
											"end": 1913,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1947,
											"end": 1949,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1936,
											"end": 1945,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1932,
											"end": 1950,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1924,
											"end": 1950,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1924,
											"end": 1950,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1960,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "263"
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2011,
											"end": 2020,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2007,
											"end": 2024,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1998,
											"end": 2004,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1960,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "207"
										},
										{
											"begin": 1960,
											"end": 2025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1960,
											"end": 2025,
											"name": "tag",
											"source": 16,
											"value": "263"
										},
										{
											"begin": 1960,
											"end": 2025,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1822,
											"end": 2032,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1822,
											"end": 2032,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1822,
											"end": 2032,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1822,
											"end": 2032,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1822,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2038,
											"end": 2156,
											"name": "tag",
											"source": 16,
											"value": "208"
										},
										{
											"begin": 2038,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2125,
											"end": 2149,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "265"
										},
										{
											"begin": 2143,
											"end": 2148,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2125,
											"end": 2149,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "203"
										},
										{
											"begin": 2125,
											"end": 2149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2125,
											"end": 2149,
											"name": "tag",
											"source": 16,
											"value": "265"
										},
										{
											"begin": 2125,
											"end": 2149,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2120,
											"end": 2123,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2113,
											"end": 2150,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2038,
											"end": 2156,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2038,
											"end": 2156,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2038,
											"end": 2156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2162,
											"end": 2384,
											"name": "tag",
											"source": 16,
											"value": "47"
										},
										{
											"begin": 2162,
											"end": 2384,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2255,
											"end": 2259,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2295,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2282,
											"end": 2291,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2278,
											"end": 2296,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2270,
											"end": 2296,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2270,
											"end": 2296,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2306,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "267"
										},
										{
											"begin": 2374,
											"end": 2375,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2363,
											"end": 2372,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2359,
											"end": 2376,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2350,
											"end": 2356,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2306,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "208"
										},
										{
											"begin": 2306,
											"end": 2377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2306,
											"end": 2377,
											"name": "tag",
											"source": 16,
											"value": "267"
										},
										{
											"begin": 2306,
											"end": 2377,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2162,
											"end": 2384,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2162,
											"end": 2384,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2162,
											"end": 2384,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2162,
											"end": 2384,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2162,
											"end": 2384,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2390,
											"end": 2512,
											"name": "tag",
											"source": 16,
											"value": "209"
										},
										{
											"begin": 2390,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2463,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "269"
										},
										{
											"begin": 2481,
											"end": 2486,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2463,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "197"
										},
										{
											"begin": 2463,
											"end": 2487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2463,
											"end": 2487,
											"name": "tag",
											"source": 16,
											"value": "269"
										},
										{
											"begin": 2463,
											"end": 2487,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2456,
											"end": 2461,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2453,
											"end": 2488,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 2443,
											"end": 2506,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "270"
										},
										{
											"begin": 2443,
											"end": 2506,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2502,
											"end": 2503,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2499,
											"end": 2500,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2492,
											"end": 2504,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2443,
											"end": 2506,
											"name": "tag",
											"source": 16,
											"value": "270"
										},
										{
											"begin": 2443,
											"end": 2506,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2390,
											"end": 2512,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2390,
											"end": 2512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2518,
											"end": 2657,
											"name": "tag",
											"source": 16,
											"value": "210"
										},
										{
											"begin": 2518,
											"end": 2657,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2564,
											"end": 2569,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2602,
											"end": 2608,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2589,
											"end": 2609,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 2580,
											"end": 2609,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2580,
											"end": 2609,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2618,
											"end": 2651,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "272"
										},
										{
											"begin": 2645,
											"end": 2650,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2618,
											"end": 2651,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "209"
										},
										{
											"begin": 2618,
											"end": 2651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2618,
											"end": 2651,
											"name": "tag",
											"source": 16,
											"value": "272"
										},
										{
											"begin": 2618,
											"end": 2651,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2518,
											"end": 2657,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2518,
											"end": 2657,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2518,
											"end": 2657,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2518,
											"end": 2657,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2518,
											"end": 2657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2663,
											"end": 2992,
											"name": "tag",
											"source": 16,
											"value": "50"
										},
										{
											"begin": 2663,
											"end": 2992,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2722,
											"end": 2728,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2771,
											"end": 2773,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2759,
											"end": 2768,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2750,
											"end": 2757,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2746,
											"end": 2769,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2742,
											"end": 2774,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 2739,
											"end": 2858,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2739,
											"end": 2858,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "274"
										},
										{
											"begin": 2739,
											"end": 2858,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2777,
											"end": 2856,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "275"
										},
										{
											"begin": 2777,
											"end": 2856,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "200"
										},
										{
											"begin": 2777,
											"end": 2856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2777,
											"end": 2856,
											"name": "tag",
											"source": 16,
											"value": "275"
										},
										{
											"begin": 2777,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2739,
											"end": 2858,
											"name": "tag",
											"source": 16,
											"value": "274"
										},
										{
											"begin": 2739,
											"end": 2858,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2897,
											"end": 2898,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2922,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "276"
										},
										{
											"begin": 2967,
											"end": 2974,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2958,
											"end": 2964,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2947,
											"end": 2956,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 2943,
											"end": 2965,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2922,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "210"
										},
										{
											"begin": 2922,
											"end": 2975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2922,
											"end": 2975,
											"name": "tag",
											"source": 16,
											"value": "276"
										},
										{
											"begin": 2922,
											"end": 2975,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2912,
											"end": 2975,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2912,
											"end": 2975,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2868,
											"end": 2985,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2663,
											"end": 2992,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2663,
											"end": 2992,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2663,
											"end": 2992,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2663,
											"end": 2992,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2663,
											"end": 2992,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2998,
											"end": 3102,
											"name": "tag",
											"source": 16,
											"value": "211"
										},
										{
											"begin": 2998,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3043,
											"end": 3050,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3072,
											"end": 3096,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "278"
										},
										{
											"begin": 3090,
											"end": 3095,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3072,
											"end": 3096,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "202"
										},
										{
											"begin": 3072,
											"end": 3096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3072,
											"end": 3096,
											"name": "tag",
											"source": 16,
											"value": "278"
										},
										{
											"begin": 3072,
											"end": 3096,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3061,
											"end": 3096,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3061,
											"end": 3096,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2998,
											"end": 3102,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2998,
											"end": 3102,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2998,
											"end": 3102,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2998,
											"end": 3102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3108,
											"end": 3246,
											"name": "tag",
											"source": 16,
											"value": "212"
										},
										{
											"begin": 3108,
											"end": 3246,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3189,
											"end": 3221,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "280"
										},
										{
											"begin": 3215,
											"end": 3220,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3189,
											"end": 3221,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "211"
										},
										{
											"begin": 3189,
											"end": 3221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3189,
											"end": 3221,
											"name": "tag",
											"source": 16,
											"value": "280"
										},
										{
											"begin": 3189,
											"end": 3221,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3182,
											"end": 3187,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3179,
											"end": 3222,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 3169,
											"end": 3240,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "281"
										},
										{
											"begin": 3169,
											"end": 3240,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3236,
											"end": 3237,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3233,
											"end": 3234,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3226,
											"end": 3238,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 3169,
											"end": 3240,
											"name": "tag",
											"source": 16,
											"value": "281"
										},
										{
											"begin": 3169,
											"end": 3240,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3108,
											"end": 3246,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3108,
											"end": 3246,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3252,
											"end": 3407,
											"name": "tag",
											"source": 16,
											"value": "213"
										},
										{
											"begin": 3252,
											"end": 3407,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3306,
											"end": 3311,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3344,
											"end": 3350,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3331,
											"end": 3351,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 3322,
											"end": 3351,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3322,
											"end": 3351,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3360,
											"end": 3401,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "283"
										},
										{
											"begin": 3395,
											"end": 3400,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3360,
											"end": 3401,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "212"
										},
										{
											"begin": 3360,
											"end": 3401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3360,
											"end": 3401,
											"name": "tag",
											"source": 16,
											"value": "283"
										},
										{
											"begin": 3360,
											"end": 3401,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3252,
											"end": 3407,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3252,
											"end": 3407,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3252,
											"end": 3407,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3252,
											"end": 3407,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3252,
											"end": 3407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3413,
											"end": 3903,
											"name": "tag",
											"source": 16,
											"value": "55"
										},
										{
											"begin": 3413,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3489,
											"end": 3495,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3497,
											"end": 3503,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3546,
											"end": 3548,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3543,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3525,
											"end": 3532,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 3521,
											"end": 3544,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 3517,
											"end": 3549,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 3514,
											"end": 3633,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3514,
											"end": 3633,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "285"
										},
										{
											"begin": 3514,
											"end": 3633,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3552,
											"end": 3631,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "286"
										},
										{
											"begin": 3552,
											"end": 3631,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "200"
										},
										{
											"begin": 3552,
											"end": 3631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3552,
											"end": 3631,
											"name": "tag",
											"source": 16,
											"value": "286"
										},
										{
											"begin": 3552,
											"end": 3631,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3514,
											"end": 3633,
											"name": "tag",
											"source": 16,
											"value": "285"
										},
										{
											"begin": 3514,
											"end": 3633,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3672,
											"end": 3673,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3697,
											"end": 3758,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "287"
										},
										{
											"begin": 3750,
											"end": 3757,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 3741,
											"end": 3747,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3730,
											"end": 3739,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 3726,
											"end": 3748,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3697,
											"end": 3758,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "213"
										},
										{
											"begin": 3697,
											"end": 3758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3697,
											"end": 3758,
											"name": "tag",
											"source": 16,
											"value": "287"
										},
										{
											"begin": 3697,
											"end": 3758,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3687,
											"end": 3758,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3687,
											"end": 3758,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3643,
											"end": 3768,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3807,
											"end": 3809,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3833,
											"end": 3886,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "288"
										},
										{
											"begin": 3878,
											"end": 3885,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 3869,
											"end": 3875,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3858,
											"end": 3867,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 3854,
											"end": 3876,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3833,
											"end": 3886,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "210"
										},
										{
											"begin": 3833,
											"end": 3886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3833,
											"end": 3886,
											"name": "tag",
											"source": 16,
											"value": "288"
										},
										{
											"begin": 3833,
											"end": 3886,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3823,
											"end": 3886,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3823,
											"end": 3886,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3778,
											"end": 3896,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3413,
											"end": 3903,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3413,
											"end": 3903,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3413,
											"end": 3903,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3413,
											"end": 3903,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3413,
											"end": 3903,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3413,
											"end": 3903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3909,
											"end": 4025,
											"name": "tag",
											"source": 16,
											"value": "214"
										},
										{
											"begin": 3909,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3979,
											"end": 4000,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "290"
										},
										{
											"begin": 3994,
											"end": 3999,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3979,
											"end": 4000,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "206"
										},
										{
											"begin": 3979,
											"end": 4000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3979,
											"end": 4000,
											"name": "tag",
											"source": 16,
											"value": "290"
										},
										{
											"begin": 3979,
											"end": 4000,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3972,
											"end": 3977,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3969,
											"end": 4001,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 3959,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "291"
										},
										{
											"begin": 3959,
											"end": 4019,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 4015,
											"end": 4016,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4012,
											"end": 4013,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4005,
											"end": 4017,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 3959,
											"end": 4019,
											"name": "tag",
											"source": 16,
											"value": "291"
										},
										{
											"begin": 3959,
											"end": 4019,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3909,
											"end": 4025,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3909,
											"end": 4025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4031,
											"end": 4164,
											"name": "tag",
											"source": 16,
											"value": "215"
										},
										{
											"begin": 4031,
											"end": 4164,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4074,
											"end": 4079,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4112,
											"end": 4118,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4099,
											"end": 4119,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 4090,
											"end": 4119,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4090,
											"end": 4119,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "293"
										},
										{
											"begin": 4152,
											"end": 4157,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "214"
										},
										{
											"begin": 4128,
											"end": 4158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "tag",
											"source": 16,
											"value": "293"
										},
										{
											"begin": 4128,
											"end": 4158,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4031,
											"end": 4164,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4031,
											"end": 4164,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4031,
											"end": 4164,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4031,
											"end": 4164,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4031,
											"end": 4164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4170,
											"end": 4287,
											"name": "tag",
											"source": 16,
											"value": "216"
										},
										{
											"begin": 4170,
											"end": 4287,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4279,
											"end": 4280,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4276,
											"end": 4277,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4269,
											"end": 4281,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 4293,
											"end": 4410,
											"name": "tag",
											"source": 16,
											"value": "217"
										},
										{
											"begin": 4293,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4402,
											"end": 4403,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4399,
											"end": 4400,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4392,
											"end": 4404,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 4416,
											"end": 4518,
											"name": "tag",
											"source": 16,
											"value": "218"
										},
										{
											"begin": 4416,
											"end": 4518,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4457,
											"end": 4463,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4508,
											"end": 4510,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 4504,
											"end": 4511,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 4499,
											"end": 4501,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 4492,
											"end": 4497,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4488,
											"end": 4502,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4484,
											"end": 4512,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 4474,
											"end": 4512,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4474,
											"end": 4512,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4416,
											"end": 4518,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4416,
											"end": 4518,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4416,
											"end": 4518,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4416,
											"end": 4518,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4524,
											"end": 4704,
											"name": "tag",
											"source": 16,
											"value": "219"
										},
										{
											"begin": 4524,
											"end": 4704,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4572,
											"end": 4649,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4569,
											"end": 4570,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4562,
											"end": 4650,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4669,
											"end": 4673,
											"name": "PUSH",
											"source": 16,
											"value": "41"
										},
										{
											"begin": 4666,
											"end": 4667,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 4659,
											"end": 4674,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4693,
											"end": 4697,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 4690,
											"end": 4691,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4683,
											"end": 4698,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 4710,
											"end": 4991,
											"name": "tag",
											"source": 16,
											"value": "220"
										},
										{
											"begin": 4710,
											"end": 4991,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4793,
											"end": 4820,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "299"
										},
										{
											"begin": 4815,
											"end": 4819,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4793,
											"end": 4820,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "218"
										},
										{
											"begin": 4793,
											"end": 4820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4793,
											"end": 4820,
											"name": "tag",
											"source": 16,
											"value": "299"
										},
										{
											"begin": 4793,
											"end": 4820,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4785,
											"end": 4791,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4781,
											"end": 4821,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4923,
											"end": 4929,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4911,
											"end": 4921,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4908,
											"end": 4930,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 4887,
											"end": 4905,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4875,
											"end": 4885,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4872,
											"end": 4906,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 4869,
											"end": 4931,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 4866,
											"end": 4954,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 4866,
											"end": 4954,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "300"
										},
										{
											"begin": 4866,
											"end": 4954,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 4934,
											"end": 4952,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "301"
										},
										{
											"begin": 4934,
											"end": 4952,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "219"
										},
										{
											"begin": 4934,
											"end": 4952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4934,
											"end": 4952,
											"name": "tag",
											"source": 16,
											"value": "301"
										},
										{
											"begin": 4934,
											"end": 4952,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4866,
											"end": 4954,
											"name": "tag",
											"source": 16,
											"value": "300"
										},
										{
											"begin": 4866,
											"end": 4954,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4974,
											"end": 4984,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4970,
											"end": 4972,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4963,
											"end": 4985,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4753,
											"end": 4991,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4710,
											"end": 4991,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4710,
											"end": 4991,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4710,
											"end": 4991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4997,
											"end": 5126,
											"name": "tag",
											"source": 16,
											"value": "221"
										},
										{
											"begin": 4997,
											"end": 5126,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5031,
											"end": 5037,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5058,
											"end": 5078,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "303"
										},
										{
											"begin": 5058,
											"end": 5078,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "199"
										},
										{
											"begin": 5058,
											"end": 5078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5058,
											"end": 5078,
											"name": "tag",
											"source": 16,
											"value": "303"
										},
										{
											"begin": 5058,
											"end": 5078,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5048,
											"end": 5078,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5048,
											"end": 5078,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5087,
											"end": 5120,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "304"
										},
										{
											"begin": 5115,
											"end": 5119,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5107,
											"end": 5113,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5087,
											"end": 5120,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "220"
										},
										{
											"begin": 5087,
											"end": 5120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5087,
											"end": 5120,
											"name": "tag",
											"source": 16,
											"value": "304"
										},
										{
											"begin": 5087,
											"end": 5120,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4997,
											"end": 5126,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4997,
											"end": 5126,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4997,
											"end": 5126,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4997,
											"end": 5126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5132,
											"end": 5439,
											"name": "tag",
											"source": 16,
											"value": "222"
										},
										{
											"begin": 5132,
											"end": 5439,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5193,
											"end": 5197,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5283,
											"end": 5301,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5275,
											"end": 5281,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5272,
											"end": 5302,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 5269,
											"end": 5325,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5269,
											"end": 5325,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "306"
										},
										{
											"begin": 5269,
											"end": 5325,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5305,
											"end": 5323,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "307"
										},
										{
											"begin": 5305,
											"end": 5323,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "219"
										},
										{
											"begin": 5305,
											"end": 5323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5305,
											"end": 5323,
											"name": "tag",
											"source": 16,
											"value": "307"
										},
										{
											"begin": 5305,
											"end": 5323,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5269,
											"end": 5325,
											"name": "tag",
											"source": 16,
											"value": "306"
										},
										{
											"begin": 5269,
											"end": 5325,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5343,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "308"
										},
										{
											"begin": 5365,
											"end": 5371,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5343,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "218"
										},
										{
											"begin": 5343,
											"end": 5372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5343,
											"end": 5372,
											"name": "tag",
											"source": 16,
											"value": "308"
										},
										{
											"begin": 5343,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5335,
											"end": 5372,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5335,
											"end": 5372,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5427,
											"end": 5431,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 5421,
											"end": 5425,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5417,
											"end": 5432,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5409,
											"end": 5432,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5409,
											"end": 5432,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5132,
											"end": 5439,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5132,
											"end": 5439,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5132,
											"end": 5439,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5132,
											"end": 5439,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5445,
											"end": 5593,
											"name": "tag",
											"source": 16,
											"value": "223"
										},
										{
											"begin": 5445,
											"end": 5593,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5543,
											"end": 5549,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5538,
											"end": 5541,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5533,
											"end": 5536,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 5520,
											"end": 5550,
											"name": "CALLDATACOPY",
											"source": 16
										},
										{
											"begin": 5584,
											"end": 5585,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5575,
											"end": 5581,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 5570,
											"end": 5573,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 5566,
											"end": 5582,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5559,
											"end": 5586,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5445,
											"end": 5593,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5445,
											"end": 5593,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5445,
											"end": 5593,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5445,
											"end": 5593,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5599,
											"end": 6022,
											"name": "tag",
											"source": 16,
											"value": "224"
										},
										{
											"begin": 5599,
											"end": 6022,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5676,
											"end": 5681,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5701,
											"end": 5766,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "311"
										},
										{
											"begin": 5717,
											"end": 5765,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "312"
										},
										{
											"begin": 5758,
											"end": 5764,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 5717,
											"end": 5765,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "222"
										},
										{
											"begin": 5717,
											"end": 5765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5717,
											"end": 5765,
											"name": "tag",
											"source": 16,
											"value": "312"
										},
										{
											"begin": 5717,
											"end": 5765,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5701,
											"end": 5766,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "221"
										},
										{
											"begin": 5701,
											"end": 5766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5701,
											"end": 5766,
											"name": "tag",
											"source": 16,
											"value": "311"
										},
										{
											"begin": 5701,
											"end": 5766,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5692,
											"end": 5766,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5692,
											"end": 5766,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5789,
											"end": 5795,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5782,
											"end": 5787,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5775,
											"end": 5796,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5827,
											"end": 5831,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 5820,
											"end": 5825,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5816,
											"end": 5832,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5865,
											"end": 5868,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 5856,
											"end": 5862,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 5851,
											"end": 5854,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 5847,
											"end": 5863,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5844,
											"end": 5869,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 5841,
											"end": 5953,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5841,
											"end": 5953,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "313"
										},
										{
											"begin": 5841,
											"end": 5953,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5872,
											"end": 5951,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "314"
										},
										{
											"begin": 5872,
											"end": 5951,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "217"
										},
										{
											"begin": 5872,
											"end": 5951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5872,
											"end": 5951,
											"name": "tag",
											"source": 16,
											"value": "314"
										},
										{
											"begin": 5872,
											"end": 5951,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5841,
											"end": 5953,
											"name": "tag",
											"source": 16,
											"value": "313"
										},
										{
											"begin": 5841,
											"end": 5953,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5962,
											"end": 6016,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "315"
										},
										{
											"begin": 6009,
											"end": 6015,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 6004,
											"end": 6007,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5999,
											"end": 6002,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 5962,
											"end": 6016,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "223"
										},
										{
											"begin": 5962,
											"end": 6016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5962,
											"end": 6016,
											"name": "tag",
											"source": 16,
											"value": "315"
										},
										{
											"begin": 5962,
											"end": 6016,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5682,
											"end": 6022,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5599,
											"end": 6022,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 5599,
											"end": 6022,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 5599,
											"end": 6022,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5599,
											"end": 6022,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5599,
											"end": 6022,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5599,
											"end": 6022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6041,
											"end": 6379,
											"name": "tag",
											"source": 16,
											"value": "225"
										},
										{
											"begin": 6041,
											"end": 6379,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6096,
											"end": 6101,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6145,
											"end": 6148,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6138,
											"end": 6142,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 6130,
											"end": 6136,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 6126,
											"end": 6143,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6122,
											"end": 6149,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 6112,
											"end": 6234,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "317"
										},
										{
											"begin": 6112,
											"end": 6234,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6153,
											"end": 6232,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "318"
										},
										{
											"begin": 6153,
											"end": 6232,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "216"
										},
										{
											"begin": 6153,
											"end": 6232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6153,
											"end": 6232,
											"name": "tag",
											"source": 16,
											"value": "318"
										},
										{
											"begin": 6153,
											"end": 6232,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6112,
											"end": 6234,
											"name": "tag",
											"source": 16,
											"value": "317"
										},
										{
											"begin": 6112,
											"end": 6234,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6270,
											"end": 6276,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6257,
											"end": 6277,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 6295,
											"end": 6373,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "319"
										},
										{
											"begin": 6369,
											"end": 6372,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 6361,
											"end": 6367,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6354,
											"end": 6358,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 6346,
											"end": 6352,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 6342,
											"end": 6359,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6295,
											"end": 6373,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "224"
										},
										{
											"begin": 6295,
											"end": 6373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6295,
											"end": 6373,
											"name": "tag",
											"source": 16,
											"value": "319"
										},
										{
											"begin": 6295,
											"end": 6373,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6286,
											"end": 6373,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6286,
											"end": 6373,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6102,
											"end": 6379,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6041,
											"end": 6379,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 6041,
											"end": 6379,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6041,
											"end": 6379,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6041,
											"end": 6379,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6041,
											"end": 6379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6385,
											"end": 7468,
											"name": "tag",
											"source": 16,
											"value": "73"
										},
										{
											"begin": 6385,
											"end": 7468,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6486,
											"end": 6492,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6494,
											"end": 6500,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6502,
											"end": 6508,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6510,
											"end": 6516,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6518,
											"end": 6524,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6567,
											"end": 6570,
											"name": "PUSH",
											"source": 16,
											"value": "A0"
										},
										{
											"begin": 6555,
											"end": 6564,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 6546,
											"end": 6553,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 6542,
											"end": 6565,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 6538,
											"end": 6571,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 6535,
											"end": 6655,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6535,
											"end": 6655,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "321"
										},
										{
											"begin": 6535,
											"end": 6655,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6574,
											"end": 6653,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "322"
										},
										{
											"begin": 6574,
											"end": 6653,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "200"
										},
										{
											"begin": 6574,
											"end": 6653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6574,
											"end": 6653,
											"name": "tag",
											"source": 16,
											"value": "322"
										},
										{
											"begin": 6574,
											"end": 6653,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6535,
											"end": 6655,
											"name": "tag",
											"source": 16,
											"value": "321"
										},
										{
											"begin": 6535,
											"end": 6655,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6694,
											"end": 6695,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6719,
											"end": 6772,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "323"
										},
										{
											"begin": 6764,
											"end": 6771,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 6755,
											"end": 6761,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6744,
											"end": 6753,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 6740,
											"end": 6762,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6719,
											"end": 6772,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "205"
										},
										{
											"begin": 6719,
											"end": 6772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6719,
											"end": 6772,
											"name": "tag",
											"source": 16,
											"value": "323"
										},
										{
											"begin": 6719,
											"end": 6772,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6709,
											"end": 6772,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 6709,
											"end": 6772,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6665,
											"end": 6782,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6821,
											"end": 6823,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 6847,
											"end": 6900,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "324"
										},
										{
											"begin": 6892,
											"end": 6899,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 6883,
											"end": 6889,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6872,
											"end": 6881,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 6868,
											"end": 6890,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6847,
											"end": 6900,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "205"
										},
										{
											"begin": 6847,
											"end": 6900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6847,
											"end": 6900,
											"name": "tag",
											"source": 16,
											"value": "324"
										},
										{
											"begin": 6847,
											"end": 6900,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6837,
											"end": 6900,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 6837,
											"end": 6900,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6792,
											"end": 6910,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6949,
											"end": 6951,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 6975,
											"end": 7028,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "325"
										},
										{
											"begin": 7020,
											"end": 7027,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 7011,
											"end": 7017,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7000,
											"end": 7009,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 6996,
											"end": 7018,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6975,
											"end": 7028,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "210"
										},
										{
											"begin": 6975,
											"end": 7028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6975,
											"end": 7028,
											"name": "tag",
											"source": 16,
											"value": "325"
										},
										{
											"begin": 6975,
											"end": 7028,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6965,
											"end": 7028,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 6965,
											"end": 7028,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6920,
											"end": 7038,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7077,
											"end": 7079,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 7103,
											"end": 7153,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "326"
										},
										{
											"begin": 7145,
											"end": 7152,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 7136,
											"end": 7142,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7125,
											"end": 7134,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 7121,
											"end": 7143,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7103,
											"end": 7153,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "215"
										},
										{
											"begin": 7103,
											"end": 7153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7103,
											"end": 7153,
											"name": "tag",
											"source": 16,
											"value": "326"
										},
										{
											"begin": 7103,
											"end": 7153,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7093,
											"end": 7153,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 7093,
											"end": 7153,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7048,
											"end": 7163,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7230,
											"end": 7233,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 7219,
											"end": 7228,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 7215,
											"end": 7234,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7202,
											"end": 7235,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 7262,
											"end": 7280,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7254,
											"end": 7260,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7251,
											"end": 7281,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 7248,
											"end": 7365,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 7248,
											"end": 7365,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "327"
										},
										{
											"begin": 7248,
											"end": 7365,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 7284,
											"end": 7363,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "328"
										},
										{
											"begin": 7284,
											"end": 7363,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "201"
										},
										{
											"begin": 7284,
											"end": 7363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7284,
											"end": 7363,
											"name": "tag",
											"source": 16,
											"value": "328"
										},
										{
											"begin": 7284,
											"end": 7363,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7248,
											"end": 7365,
											"name": "tag",
											"source": 16,
											"value": "327"
										},
										{
											"begin": 7248,
											"end": 7365,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7389,
											"end": 7451,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "329"
										},
										{
											"begin": 7443,
											"end": 7450,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 7434,
											"end": 7440,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7423,
											"end": 7432,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 7419,
											"end": 7441,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7389,
											"end": 7451,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "225"
										},
										{
											"begin": 7389,
											"end": 7451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7389,
											"end": 7451,
											"name": "tag",
											"source": 16,
											"value": "329"
										},
										{
											"begin": 7389,
											"end": 7451,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7379,
											"end": 7451,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7379,
											"end": 7451,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7173,
											"end": 7461,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6385,
											"end": 7468,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 6385,
											"end": 7468,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 6385,
											"end": 7468,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6385,
											"end": 7468,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 6385,
											"end": 7468,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 6385,
											"end": 7468,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6385,
											"end": 7468,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 6385,
											"end": 7468,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6385,
											"end": 7468,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7474,
											"end": 7617,
											"name": "tag",
											"source": 16,
											"value": "226"
										},
										{
											"begin": 7474,
											"end": 7617,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7531,
											"end": 7536,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7562,
											"end": 7568,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7556,
											"end": 7569,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 7547,
											"end": 7569,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7547,
											"end": 7569,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7578,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "331"
										},
										{
											"begin": 7605,
											"end": 7610,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7578,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "209"
										},
										{
											"begin": 7578,
											"end": 7611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7578,
											"end": 7611,
											"name": "tag",
											"source": 16,
											"value": "331"
										},
										{
											"begin": 7578,
											"end": 7611,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7474,
											"end": 7617,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 7474,
											"end": 7617,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7474,
											"end": 7617,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7474,
											"end": 7617,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7474,
											"end": 7617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7623,
											"end": 7974,
											"name": "tag",
											"source": 16,
											"value": "99"
										},
										{
											"begin": 7623,
											"end": 7974,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7693,
											"end": 7699,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7742,
											"end": 7744,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 7730,
											"end": 7739,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7721,
											"end": 7728,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 7717,
											"end": 7740,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 7713,
											"end": 7745,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 7710,
											"end": 7829,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 7710,
											"end": 7829,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "333"
										},
										{
											"begin": 7710,
											"end": 7829,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 7748,
											"end": 7827,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "334"
										},
										{
											"begin": 7748,
											"end": 7827,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "200"
										},
										{
											"begin": 7748,
											"end": 7827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7748,
											"end": 7827,
											"name": "tag",
											"source": 16,
											"value": "334"
										},
										{
											"begin": 7748,
											"end": 7827,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7710,
											"end": 7829,
											"name": "tag",
											"source": 16,
											"value": "333"
										},
										{
											"begin": 7710,
											"end": 7829,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7868,
											"end": 7869,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7893,
											"end": 7957,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "335"
										},
										{
											"begin": 7949,
											"end": 7956,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 7940,
											"end": 7946,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7929,
											"end": 7938,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 7925,
											"end": 7947,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7893,
											"end": 7957,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "226"
										},
										{
											"begin": 7893,
											"end": 7957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7893,
											"end": 7957,
											"name": "tag",
											"source": 16,
											"value": "335"
										},
										{
											"begin": 7893,
											"end": 7957,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7883,
											"end": 7957,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7883,
											"end": 7957,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7839,
											"end": 7967,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7623,
											"end": 7974,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 7623,
											"end": 7974,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7623,
											"end": 7974,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7623,
											"end": 7974,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7623,
											"end": 7974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7980,
											"end": 8312,
											"name": "tag",
											"source": 16,
											"value": "101"
										},
										{
											"begin": 7980,
											"end": 8312,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8101,
											"end": 8105,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8139,
											"end": 8141,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 8128,
											"end": 8137,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8124,
											"end": 8142,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8116,
											"end": 8142,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8116,
											"end": 8142,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8152,
											"end": 8223,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "337"
										},
										{
											"begin": 8220,
											"end": 8221,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8209,
											"end": 8218,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 8205,
											"end": 8222,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8196,
											"end": 8202,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 8152,
											"end": 8223,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "198"
										},
										{
											"begin": 8152,
											"end": 8223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8152,
											"end": 8223,
											"name": "tag",
											"source": 16,
											"value": "337"
										},
										{
											"begin": 8152,
											"end": 8223,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8233,
											"end": 8305,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "338"
										},
										{
											"begin": 8301,
											"end": 8303,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 8290,
											"end": 8299,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 8286,
											"end": 8304,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8277,
											"end": 8283,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 8233,
											"end": 8305,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "198"
										},
										{
											"begin": 8233,
											"end": 8305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8233,
											"end": 8305,
											"name": "tag",
											"source": 16,
											"value": "338"
										},
										{
											"begin": 8233,
											"end": 8305,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7980,
											"end": 8312,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 7980,
											"end": 8312,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 7980,
											"end": 8312,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7980,
											"end": 8312,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7980,
											"end": 8312,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7980,
											"end": 8312,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8318,
											"end": 8486,
											"name": "tag",
											"source": 16,
											"value": "227"
										},
										{
											"begin": 8318,
											"end": 8486,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8401,
											"end": 8412,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8435,
											"end": 8441,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8430,
											"end": 8433,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8423,
											"end": 8442,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8475,
											"end": 8479,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 8470,
											"end": 8473,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8466,
											"end": 8480,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8451,
											"end": 8480,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8451,
											"end": 8480,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8318,
											"end": 8486,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 8318,
											"end": 8486,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 8318,
											"end": 8486,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8318,
											"end": 8486,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8318,
											"end": 8486,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8492,
											"end": 8606,
											"name": "tag",
											"source": 16,
											"value": "228"
										},
										{
											"begin": 8492,
											"end": 8606,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8492,
											"end": 8606,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8492,
											"end": 8606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8612,
											"end": 8974,
											"name": "tag",
											"source": 16,
											"value": "229"
										},
										{
											"begin": 8612,
											"end": 8974,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8753,
											"end": 8756,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8774,
											"end": 8839,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "342"
										},
										{
											"begin": 8837,
											"end": 8838,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8832,
											"end": 8835,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 8774,
											"end": 8839,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "227"
										},
										{
											"begin": 8774,
											"end": 8839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8774,
											"end": 8839,
											"name": "tag",
											"source": 16,
											"value": "342"
										},
										{
											"begin": 8774,
											"end": 8839,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8767,
											"end": 8839,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 8767,
											"end": 8839,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8848,
											"end": 8941,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "343"
										},
										{
											"begin": 8937,
											"end": 8940,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8848,
											"end": 8941,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "228"
										},
										{
											"begin": 8848,
											"end": 8941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8848,
											"end": 8941,
											"name": "tag",
											"source": 16,
											"value": "343"
										},
										{
											"begin": 8848,
											"end": 8941,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8966,
											"end": 8967,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8961,
											"end": 8964,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8957,
											"end": 8968,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8950,
											"end": 8968,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8950,
											"end": 8968,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8612,
											"end": 8974,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 8612,
											"end": 8974,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8612,
											"end": 8974,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8612,
											"end": 8974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8980,
											"end": 9827,
											"name": "tag",
											"source": 16,
											"value": "103"
										},
										{
											"begin": 8980,
											"end": 9827,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9251,
											"end": 9255,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9289,
											"end": 9292,
											"name": "PUSH",
											"source": 16,
											"value": "A0"
										},
										{
											"begin": 9278,
											"end": 9287,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9274,
											"end": 9293,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9266,
											"end": 9293,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9266,
											"end": 9293,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9303,
											"end": 9374,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "345"
										},
										{
											"begin": 9371,
											"end": 9372,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9360,
											"end": 9369,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 9356,
											"end": 9373,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9347,
											"end": 9353,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 9303,
											"end": 9374,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "208"
										},
										{
											"begin": 9303,
											"end": 9374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9303,
											"end": 9374,
											"name": "tag",
											"source": 16,
											"value": "345"
										},
										{
											"begin": 9303,
											"end": 9374,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9384,
											"end": 9456,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "346"
										},
										{
											"begin": 9452,
											"end": 9454,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 9441,
											"end": 9450,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 9437,
											"end": 9455,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9428,
											"end": 9434,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 9384,
											"end": 9456,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "208"
										},
										{
											"begin": 9384,
											"end": 9456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9384,
											"end": 9456,
											"name": "tag",
											"source": 16,
											"value": "346"
										},
										{
											"begin": 9384,
											"end": 9456,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9466,
											"end": 9538,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "347"
										},
										{
											"begin": 9534,
											"end": 9536,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 9523,
											"end": 9532,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 9519,
											"end": 9537,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9510,
											"end": 9516,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 9466,
											"end": 9538,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "198"
										},
										{
											"begin": 9466,
											"end": 9538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9466,
											"end": 9538,
											"name": "tag",
											"source": 16,
											"value": "347"
										},
										{
											"begin": 9466,
											"end": 9538,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9548,
											"end": 9614,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "348"
										},
										{
											"begin": 9610,
											"end": 9612,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 9599,
											"end": 9608,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 9595,
											"end": 9613,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9586,
											"end": 9592,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 9548,
											"end": 9614,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "207"
										},
										{
											"begin": 9548,
											"end": 9614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9548,
											"end": 9614,
											"name": "tag",
											"source": 16,
											"value": "348"
										},
										{
											"begin": 9548,
											"end": 9614,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9662,
											"end": 9671,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 9656,
											"end": 9660,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 9652,
											"end": 9672,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 9646,
											"end": 9649,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 9635,
											"end": 9644,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 9631,
											"end": 9650,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9624,
											"end": 9673,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9690,
											"end": 9820,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "349"
										},
										{
											"begin": 9815,
											"end": 9819,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 9690,
											"end": 9820,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "229"
										},
										{
											"begin": 9690,
											"end": 9820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9690,
											"end": 9820,
											"name": "tag",
											"source": 16,
											"value": "349"
										},
										{
											"begin": 9690,
											"end": 9820,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9682,
											"end": 9820,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9682,
											"end": 9820,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8980,
											"end": 9827,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 8980,
											"end": 9827,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 8980,
											"end": 9827,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8980,
											"end": 9827,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8980,
											"end": 9827,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8980,
											"end": 9827,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8980,
											"end": 9827,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8980,
											"end": 9827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9833,
											"end": 9980,
											"name": "tag",
											"source": 16,
											"value": "230"
										},
										{
											"begin": 9833,
											"end": 9980,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9934,
											"end": 9945,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9971,
											"end": 9974,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 9956,
											"end": 9974,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9956,
											"end": 9974,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9833,
											"end": 9980,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 9833,
											"end": 9980,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 9833,
											"end": 9980,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9833,
											"end": 9980,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9833,
											"end": 9980,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9986,
											"end": 10384,
											"name": "tag",
											"source": 16,
											"value": "231"
										},
										{
											"begin": 9986,
											"end": 10384,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10145,
											"end": 10148,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10166,
											"end": 10249,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "352"
										},
										{
											"begin": 10247,
											"end": 10248,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10242,
											"end": 10245,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 10166,
											"end": 10249,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "230"
										},
										{
											"begin": 10166,
											"end": 10249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10166,
											"end": 10249,
											"name": "tag",
											"source": 16,
											"value": "352"
										},
										{
											"begin": 10166,
											"end": 10249,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10159,
											"end": 10249,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 10159,
											"end": 10249,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10258,
											"end": 10351,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "353"
										},
										{
											"begin": 10347,
											"end": 10350,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10258,
											"end": 10351,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "228"
										},
										{
											"begin": 10258,
											"end": 10351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10258,
											"end": 10351,
											"name": "tag",
											"source": 16,
											"value": "353"
										},
										{
											"begin": 10258,
											"end": 10351,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10376,
											"end": 10377,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10371,
											"end": 10374,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10367,
											"end": 10378,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10360,
											"end": 10378,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10360,
											"end": 10378,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9986,
											"end": 10384,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 9986,
											"end": 10384,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9986,
											"end": 10384,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9986,
											"end": 10384,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10390,
											"end": 10769,
											"name": "tag",
											"source": 16,
											"value": "115"
										},
										{
											"begin": 10390,
											"end": 10769,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10574,
											"end": 10577,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10596,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "355"
										},
										{
											"begin": 10739,
											"end": 10742,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10596,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "231"
										},
										{
											"begin": 10596,
											"end": 10743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10596,
											"end": 10743,
											"name": "tag",
											"source": 16,
											"value": "355"
										},
										{
											"begin": 10596,
											"end": 10743,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10589,
											"end": 10743,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 10589,
											"end": 10743,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10760,
											"end": 10763,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10753,
											"end": 10763,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10753,
											"end": 10763,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10390,
											"end": 10769,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 10390,
											"end": 10769,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10390,
											"end": 10769,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10390,
											"end": 10769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10775,
											"end": 10944,
											"name": "tag",
											"source": 16,
											"value": "232"
										},
										{
											"begin": 10775,
											"end": 10944,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10859,
											"end": 10870,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10893,
											"end": 10899,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10888,
											"end": 10891,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10881,
											"end": 10900,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 10933,
											"end": 10937,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 10928,
											"end": 10931,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10924,
											"end": 10938,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10909,
											"end": 10938,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10909,
											"end": 10938,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10775,
											"end": 10944,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 10775,
											"end": 10944,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 10775,
											"end": 10944,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10775,
											"end": 10944,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10775,
											"end": 10944,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10950,
											"end": 11106,
											"name": "tag",
											"source": 16,
											"value": "233"
										},
										{
											"begin": 10950,
											"end": 11106,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11090,
											"end": 11098,
											"name": "PUSH",
											"source": 16,
											"value": "4661696C65640000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11086,
											"end": 11087,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11078,
											"end": 11084,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11074,
											"end": 11088,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11067,
											"end": 11099,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 10950,
											"end": 11106,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10950,
											"end": 11106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11112,
											"end": 11477,
											"name": "tag",
											"source": 16,
											"value": "234"
										},
										{
											"begin": 11112,
											"end": 11477,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11254,
											"end": 11257,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11275,
											"end": 11341,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "359"
										},
										{
											"begin": 11339,
											"end": 11340,
											"name": "PUSH",
											"source": 16,
											"value": "6"
										},
										{
											"begin": 11334,
											"end": 11337,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 11275,
											"end": 11341,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "232"
										},
										{
											"begin": 11275,
											"end": 11341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11275,
											"end": 11341,
											"name": "tag",
											"source": 16,
											"value": "359"
										},
										{
											"begin": 11275,
											"end": 11341,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11268,
											"end": 11341,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 11268,
											"end": 11341,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11350,
											"end": 11443,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "360"
										},
										{
											"begin": 11439,
											"end": 11442,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11350,
											"end": 11443,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "233"
										},
										{
											"begin": 11350,
											"end": 11443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11350,
											"end": 11443,
											"name": "tag",
											"source": 16,
											"value": "360"
										},
										{
											"begin": 11350,
											"end": 11443,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11468,
											"end": 11470,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 11463,
											"end": 11466,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11459,
											"end": 11471,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11452,
											"end": 11471,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 11452,
											"end": 11471,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11112,
											"end": 11477,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 11112,
											"end": 11477,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 11112,
											"end": 11477,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11112,
											"end": 11477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11483,
											"end": 11902,
											"name": "tag",
											"source": 16,
											"value": "121"
										},
										{
											"begin": 11483,
											"end": 11902,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11649,
											"end": 11653,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11687,
											"end": 11689,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 11676,
											"end": 11685,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11672,
											"end": 11690,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11664,
											"end": 11690,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 11664,
											"end": 11690,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11736,
											"end": 11745,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11730,
											"end": 11734,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11726,
											"end": 11746,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 11722,
											"end": 11723,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11711,
											"end": 11720,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 11707,
											"end": 11724,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11700,
											"end": 11747,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 11764,
											"end": 11895,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "362"
										},
										{
											"begin": 11890,
											"end": 11894,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11764,
											"end": 11895,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "234"
										},
										{
											"begin": 11764,
											"end": 11895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11764,
											"end": 11895,
											"name": "tag",
											"source": 16,
											"value": "362"
										},
										{
											"begin": 11764,
											"end": 11895,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11756,
											"end": 11895,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 11756,
											"end": 11895,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11483,
											"end": 11902,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 11483,
											"end": 11902,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 11483,
											"end": 11902,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11483,
											"end": 11902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11908,
											"end": 12006,
											"name": "tag",
											"source": 16,
											"value": "235"
										},
										{
											"begin": 11908,
											"end": 12006,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11959,
											"end": 11965,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11993,
											"end": 11998,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11987,
											"end": 11999,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 11977,
											"end": 11999,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 11977,
											"end": 11999,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11908,
											"end": 12006,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 11908,
											"end": 12006,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 11908,
											"end": 12006,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11908,
											"end": 12006,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12012,
											"end": 12151,
											"name": "tag",
											"source": 16,
											"value": "236"
										},
										{
											"begin": 12012,
											"end": 12151,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12101,
											"end": 12107,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12096,
											"end": 12099,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12091,
											"end": 12094,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12085,
											"end": 12108,
											"name": "MCOPY",
											"source": 16
										},
										{
											"begin": 12142,
											"end": 12143,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12133,
											"end": 12139,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12128,
											"end": 12131,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12124,
											"end": 12140,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12117,
											"end": 12144,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 12012,
											"end": 12151,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12012,
											"end": 12151,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12012,
											"end": 12151,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12012,
											"end": 12151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12157,
											"end": 12530,
											"name": "tag",
											"source": 16,
											"value": "237"
										},
										{
											"begin": 12157,
											"end": 12530,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12243,
											"end": 12246,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12271,
											"end": 12309,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "366"
										},
										{
											"begin": 12303,
											"end": 12308,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12271,
											"end": 12309,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "235"
										},
										{
											"begin": 12271,
											"end": 12309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12271,
											"end": 12309,
											"name": "tag",
											"source": 16,
											"value": "366"
										},
										{
											"begin": 12271,
											"end": 12309,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12325,
											"end": 12395,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "367"
										},
										{
											"begin": 12388,
											"end": 12394,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12383,
											"end": 12386,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 12325,
											"end": 12395,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "227"
										},
										{
											"begin": 12325,
											"end": 12395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12325,
											"end": 12395,
											"name": "tag",
											"source": 16,
											"value": "367"
										},
										{
											"begin": 12325,
											"end": 12395,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12318,
											"end": 12395,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 12318,
											"end": 12395,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12404,
											"end": 12469,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "368"
										},
										{
											"begin": 12462,
											"end": 12468,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12457,
											"end": 12460,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 12450,
											"end": 12454,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 12443,
											"end": 12448,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 12439,
											"end": 12455,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12404,
											"end": 12469,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "236"
										},
										{
											"begin": 12404,
											"end": 12469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12404,
											"end": 12469,
											"name": "tag",
											"source": 16,
											"value": "368"
										},
										{
											"begin": 12404,
											"end": 12469,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12494,
											"end": 12523,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "369"
										},
										{
											"begin": 12516,
											"end": 12522,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12494,
											"end": 12523,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "218"
										},
										{
											"begin": 12494,
											"end": 12523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12494,
											"end": 12523,
											"name": "tag",
											"source": 16,
											"value": "369"
										},
										{
											"begin": 12494,
											"end": 12523,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12489,
											"end": 12492,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 12485,
											"end": 12524,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12478,
											"end": 12524,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 12478,
											"end": 12524,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12247,
											"end": 12530,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12157,
											"end": 12530,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 12157,
											"end": 12530,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 12157,
											"end": 12530,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12157,
											"end": 12530,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12157,
											"end": 12530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12536,
											"end": 13275,
											"name": "tag",
											"source": 16,
											"value": "160"
										},
										{
											"begin": 12536,
											"end": 13275,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12753,
											"end": 12757,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12791,
											"end": 12794,
											"name": "PUSH",
											"source": 16,
											"value": "A0"
										},
										{
											"begin": 12780,
											"end": 12789,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12776,
											"end": 12795,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12768,
											"end": 12795,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12768,
											"end": 12795,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12805,
											"end": 12876,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "371"
										},
										{
											"begin": 12873,
											"end": 12874,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12862,
											"end": 12871,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12858,
											"end": 12875,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12849,
											"end": 12855,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 12805,
											"end": 12876,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "208"
										},
										{
											"begin": 12805,
											"end": 12876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12805,
											"end": 12876,
											"name": "tag",
											"source": 16,
											"value": "371"
										},
										{
											"begin": 12805,
											"end": 12876,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12886,
											"end": 12958,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "372"
										},
										{
											"begin": 12954,
											"end": 12956,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 12943,
											"end": 12952,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12939,
											"end": 12957,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12930,
											"end": 12936,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 12886,
											"end": 12958,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "208"
										},
										{
											"begin": 12886,
											"end": 12958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12886,
											"end": 12958,
											"name": "tag",
											"source": 16,
											"value": "372"
										},
										{
											"begin": 12886,
											"end": 12958,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12968,
											"end": 13040,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "373"
										},
										{
											"begin": 13036,
											"end": 13038,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 13025,
											"end": 13034,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 13021,
											"end": 13039,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13012,
											"end": 13018,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 12968,
											"end": 13040,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "198"
										},
										{
											"begin": 12968,
											"end": 13040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12968,
											"end": 13040,
											"name": "tag",
											"source": 16,
											"value": "373"
										},
										{
											"begin": 12968,
											"end": 13040,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13050,
											"end": 13116,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "374"
										},
										{
											"begin": 13112,
											"end": 13114,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 13101,
											"end": 13110,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 13097,
											"end": 13115,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13088,
											"end": 13094,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 13050,
											"end": 13116,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "207"
										},
										{
											"begin": 13050,
											"end": 13116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13050,
											"end": 13116,
											"name": "tag",
											"source": 16,
											"value": "374"
										},
										{
											"begin": 13050,
											"end": 13116,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13164,
											"end": 13173,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 13158,
											"end": 13162,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 13154,
											"end": 13174,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 13148,
											"end": 13151,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 13137,
											"end": 13146,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 13133,
											"end": 13152,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13126,
											"end": 13175,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 13192,
											"end": 13268,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "375"
										},
										{
											"begin": 13263,
											"end": 13267,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 13254,
											"end": 13260,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 13192,
											"end": 13268,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "237"
										},
										{
											"begin": 13192,
											"end": 13268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13192,
											"end": 13268,
											"name": "tag",
											"source": 16,
											"value": "375"
										},
										{
											"begin": 13192,
											"end": 13268,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13184,
											"end": 13268,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 13184,
											"end": 13268,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12536,
											"end": 13275,
											"name": "SWAP7",
											"source": 16
										},
										{
											"begin": 12536,
											"end": 13275,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 12536,
											"end": 13275,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12536,
											"end": 13275,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12536,
											"end": 13275,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12536,
											"end": 13275,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12536,
											"end": 13275,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12536,
											"end": 13275,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12536,
											"end": 13275,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										}
									]
								}
							},
							"sourceList": [
								"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol",
								"@lukso/lsp-smart-contracts/contracts/LSP7DigitalAsset/ILSP7DigitalAsset.sol",
								"@lukso/lsp7-contracts/contracts/ILSP7DigitalAsset.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"AIAirdrop.sol",
								"_error.sol",
								"_event.sol",
								"_ownable.sol",
								"_pausable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"_claimCounter()": "fb2228fe",
							"amountToClaim()": "205306b4",
							"claim(address)": "1e83409a",
							"claimed(address)": "c884ef83",
							"getBalance()": "12065fe0",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"renounceOwnership()": "715018a6",
							"time()": "16ada547",
							"tokenToClaim()": "4875590a",
							"transferBalance(address,uint256)": "56a6d9ef",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a",
							"updateAmountToClaim(uint256)": "53a4cff4",
							"updateTokenToClaim(address)": "af66ef65",
							"withdraw()": "3ccfd60b",
							"withdrawLSP7(address,address,uint256,bool,bytes)": "b8de4343"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenToClaim\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lastTimeClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userBalance\",\"type\":\"uint256\"}],\"name\":\"ClaimedAlready\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"claimedTime\",\"type\":\"uint256\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"amountToClaimUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenToClaimUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_claimCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountToClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"time\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenToClaim\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"updateAmountToClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"updateTokenToClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_LSP7Token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_force\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"withdrawLSP7\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aratta Labs\",\"custom:emoji\":\"\\ud83e\\udd16\",\"custom:security-contact\":\"atenyun@gmail.com\",\"details\":\"You will find the deployed contract addresses in the repo\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Airdrop\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claim(address)\":{\"notice\":\"Add wallet to the cliamed pool\"},\"getBalance()\":{\"notice\":\"Return the balance of this contract\"},\"pause()\":{\"notice\":\"Pause\"},\"transferBalance(address,uint256)\":{\"notice\":\"Transfer balance from this contract to input address\"},\"unpause()\":{\"notice\":\"Unpause\"},\"updateAmountToClaim(uint256)\":{\"notice\":\"Update token claim count\"},\"withdraw()\":{\"notice\":\"Withdraw the balance from this contract and transfer it to the owner's address\"},\"withdrawLSP7(address,address,uint256,bool,bytes)\":{\"notice\":\"Withdraw LSP7 token\"}},\"notice\":\"Airdroping LSP7 token by AI agent on LUKSO\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"AIAirdrop.sol\":\"AIAirdrop\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0xa47c9e3eba0c733a1685b9fa309f753540c89ad2dca73236a2c953e7f5680e7b\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://59076395f660838919a2068cb7792c0fa70533642bbc5b4e3cc3cbb2c9ec7b50\",\"dweb:/ipfs/QmQqew3mDuyHCBdd4v1JiwRiKEbzk3LeHchzTHSdyhYg5b\"]},\"@lukso/lsp-smart-contracts/contracts/LSP7DigitalAsset/ILSP7DigitalAsset.sol\":{\"keccak256\":\"0x1500da59b41e37677458dcc3652bb5a72f58a7920dbc41f6cf60f7beadd6731d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e5bd2b8d469213eae3cd7013dc05b4c37ec183977dddb2b659ab8f9b852d7b26\",\"dweb:/ipfs/QmbNt4JEugWbRRCAge1HCM2j4HExEZzGRsgDmiATZoYvp6\"]},\"@lukso/lsp7-contracts/contracts/ILSP7DigitalAsset.sol\":{\"keccak256\":\"0xe809a376f430ba79bf7554b3274617103f1d0434546b2d4fe68019e3079a53d0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f955f4d89c5a99f791af4a3fc7201ba0299627fca221d97a66a562eeb4860c04\",\"dweb:/ipfs/QmcAqBHYFwk6VXevUeSjefFag6EhndrXQP1D4tGjxtgUMT\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0x45f2d503ebecf25ea4b038d02a7ed96898bd197bec585d0ba3560bfb4b509a82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c87b73d7c9c7773c8d2b06e3f38d88a3980c04016bb44967ecacfa5ac45bc62b\",\"dweb:/ipfs/QmbQVT9fpAxMQ492735rZzUK2e73ayqdZz2fGPgey8jCVR\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"AIAirdrop.sol\":{\"keccak256\":\"0x9452c8396170617c241445d2670cfb0adeb7629447c1b7671a533c9be765d94c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://241d42d80e93d5142cb2a987c69f248fd8159d47e47d498def75ef0e8cd03a6c\",\"dweb:/ipfs/QmYhQ9aN4fzmUZbFW3ZSu7NkasWVEY5yyc45dyE3dcN3pg\"]},\"_error.sol\":{\"keccak256\":\"0x03ae05258e88ec699ab810dcb59536f9aa94bf41425dd75e5e62a7730ada98dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a6b785ecb58614413887c8b96149ee3588a619bd86bf28f9bda18bedc6b734e\",\"dweb:/ipfs/QmVZYsbVDS4C9ykdPJKfXw1wekAMzbbYMqLFn9Lri9GNBK\"]},\"_event.sol\":{\"keccak256\":\"0xa569615a03f868cd06de841fa3a389aab6fdca87bdcb4667642f101d1eab1c29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c04ca43626dd03f2f5b2e6b6b32a9ef5d6f378f71dc7135cfd66deea5adeee57\",\"dweb:/ipfs/Qmc2iDtLLbjpa5qZ7vWwCYJ9TqvN7UxVdKsrz5perK23JB\"]},\"_ownable.sol\":{\"keccak256\":\"0xd0eb4b66f1088976a798a35ea6f276723448d778c424898ed9a3895dd16e0395\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7ff7967a53aa14549700c15740d8afa60437287dfbdd386fa338001156afcfd\",\"dweb:/ipfs/QmNqebzo3Jex1uFWNTRh3p185YkVZtt28Rsv1mB2nfBWBw\"]},\"_pausable.sol\":{\"keccak256\":\"0xbcfe48dd83c79dc58f3e692bf0c564ca9732a9782290fbc463b51866075fda5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef18a3571179803f34e036529e8e0249a24aa86f315a6425bff7a12e08a2466a\",\"dweb:/ipfs/QmPcB7VKFa6S4Me9a7cxa8ukA5HZfr86uDyDeDrjJqetqe\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 5432,
								"contract": "AIAirdrop.sol:AIAirdrop",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 5580,
								"contract": "AIAirdrop.sol:AIAirdrop",
								"label": "_paused",
								"offset": 20,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 5135,
								"contract": "AIAirdrop.sol:AIAirdrop",
								"label": "_claimCounter",
								"offset": 0,
								"slot": "1",
								"type": "t_struct(Counter)264_storage"
							},
							{
								"astId": 5137,
								"contract": "AIAirdrop.sol:AIAirdrop",
								"label": "tokenToClaim",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 5140,
								"contract": "AIAirdrop.sol:AIAirdrop",
								"label": "amountToClaim",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 5144,
								"contract": "AIAirdrop.sol:AIAirdrop",
								"label": "claimed",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(Counter)264_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 263,
										"contract": "AIAirdrop.sol:AIAirdrop",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"claim(address)": {
								"notice": "Add wallet to the cliamed pool"
							},
							"getBalance()": {
								"notice": "Return the balance of this contract"
							},
							"pause()": {
								"notice": "Pause"
							},
							"transferBalance(address,uint256)": {
								"notice": "Transfer balance from this contract to input address"
							},
							"unpause()": {
								"notice": "Unpause"
							},
							"updateAmountToClaim(uint256)": {
								"notice": "Update token claim count"
							},
							"withdraw()": {
								"notice": "Withdraw the balance from this contract and transfer it to the owner's address"
							},
							"withdrawLSP7(address,address,uint256,bool,bytes)": {
								"notice": "Withdraw LSP7 token"
							}
						},
						"notice": "Airdroping LSP7 token by AI agent on LUKSO",
						"version": 1
					}
				}
			},
			"_ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"_ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"_ownable.sol\":{\"keccak256\":\"0xd0eb4b66f1088976a798a35ea6f276723448d778c424898ed9a3895dd16e0395\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7ff7967a53aa14549700c15740d8afa60437287dfbdd386fa338001156afcfd\",\"dweb:/ipfs/QmNqebzo3Jex1uFWNTRh3p185YkVZtt28Rsv1mB2nfBWBw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 5432,
								"contract": "_ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"_pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"errors": {
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							]
						},
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"_pausable.sol\":\"Pausable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"_pausable.sol\":{\"keccak256\":\"0xbcfe48dd83c79dc58f3e692bf0c564ca9732a9782290fbc463b51866075fda5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef18a3571179803f34e036529e8e0249a24aa86f315a6425bff7a12e08a2466a\",\"dweb:/ipfs/QmPcB7VKFa6S4Me9a7cxa8ukA5HZfr86uDyDeDrjJqetqe\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 5580,
								"contract": "_pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol": {
				"ast": {
					"absolutePath": "@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol",
					"exportedSymbols": {
						"IERC165": [
							1596
						],
						"IERC725Y": [
							50
						]
					},
					"id": 51,
					"license": "CC0-1.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 51,
							"sourceUnit": 1597,
							"src": "75:80:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1596,
										"src": "83:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "IERC165",
										"nameLocations": [
											"502:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1596,
										"src": "502:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "502:7:0"
								}
							],
							"canonicalName": "IERC725Y",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "157:322:0",
								"text": " @title The interface for ERC725Y sub-standard, a generic data key/value store.\n @dev ERC725Y provides the ability to set arbitrary data key/value pairs that can be changed over time.\n It is intended to standardise certain data key/value pairs to allow automated read and writes from/to the contract storage."
							},
							"fullyImplemented": false,
							"id": 50,
							"linearizedBaseContracts": [
								50,
								1596
							],
							"name": "IERC725Y",
							"nameLocation": "490:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 7,
										"nodeType": "StructuredDocumentation",
										"src": "516:373:0",
										"text": " @notice The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`.\n @dev Emitted when data at a specific `dataKey` was changed to a new value `dataValue`.\n @param dataKey The data key for which a bytes value is set.\n @param dataValue The value to set for the given data key."
									},
									"eventSelector": "ece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b2",
									"id": 13,
									"name": "DataChanged",
									"nameLocation": "900:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "dataKey",
												"nameLocation": "928:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "912:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 8,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "912:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": false,
												"mutability": "mutable",
												"name": "dataValue",
												"nameLocation": "943:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "937:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 10,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "937:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "911:42:0"
									},
									"src": "894:60:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "960:361:0",
										"text": " @notice Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`.\n @dev Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.\n @param dataKey The data key for which to retrieve the value.\n @return dataValue The bytes value stored under the specified data key."
									},
									"functionSelector": "54f6127f",
									"id": 21,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getData",
									"nameLocation": "1335:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "dataKey",
												"nameLocation": "1360:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1352:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 15,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1352:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1342:31:0"
									},
									"returnParameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "dataValue",
												"nameLocation": "1410:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1397:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 18,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1397:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1396:24:0"
									},
									"scope": 50,
									"src": "1326:95:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1427:353:0",
										"text": " @notice Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`.\n @dev Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.\n @param dataKeys The array of keys which values to retrieve\n @return dataValues The array of data stored at multiple keys"
									},
									"functionSelector": "dedff9c6",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getDataBatch",
									"nameLocation": "1794:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "dataKeys",
												"nameLocation": "1833:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "1816:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 23,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "1816:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 24,
													"nodeType": "ArrayTypeName",
													"src": "1816:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1806:41:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "dataValues",
												"nameLocation": "1886:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "1871:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 27,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "1871:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 28,
													"nodeType": "ArrayTypeName",
													"src": "1871:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1870:27:0"
									},
									"scope": 50,
									"src": "1785:113:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1904:536:0",
										"text": " @notice Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`.\n @dev Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`.\n The function is marked as payable to enable flexibility on child contracts. For instance to implement\n a fee mechanism for setting specific data.\n @param dataKey The data key for which to set a new value.\n @param dataValue The new bytes value to set."
									},
									"functionSelector": "7f23690c",
									"id": 39,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setData",
									"nameLocation": "2454:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "dataKey",
												"nameLocation": "2470:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "2462:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 33,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2462:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "dataValue",
												"nameLocation": "2492:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "2479:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 35,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2479:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2461:41:0"
									},
									"returnParameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2519:0:0"
									},
									"scope": 50,
									"src": "2445:75:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 40,
										"nodeType": "StructuredDocumentation",
										"src": "2526:478:0",
										"text": " @notice Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`.\n @dev Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.\n @param dataKeys An array of data keys to set bytes values for.\n @param dataValues An array of bytes values to set for each `dataKeys`."
									},
									"functionSelector": "97902421",
									"id": 49,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setDataBatch",
									"nameLocation": "3018:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "dataKeys",
												"nameLocation": "3057:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "3040:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 41,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "3040:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 42,
													"nodeType": "ArrayTypeName",
													"src": "3040:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "dataValues",
												"nameLocation": "3090:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "3075:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 44,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "3075:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 45,
													"nodeType": "ArrayTypeName",
													"src": "3075:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3030:76:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3123:0:0"
									},
									"scope": 50,
									"src": "3009:115:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 51,
							"src": "480:2646:0",
							"usedErrors": [],
							"usedEvents": [
								13
							]
						}
					],
					"src": "36:3091:0"
				},
				"id": 0
			},
			"@lukso/lsp-smart-contracts/contracts/LSP7DigitalAsset/ILSP7DigitalAsset.sol": {
				"ast": {
					"absolutePath": "@lukso/lsp-smart-contracts/contracts/LSP7DigitalAsset/ILSP7DigitalAsset.sol",
					"exportedSymbols": {
						"IERC165": [
							1596
						],
						"IERC725Y": [
							50
						],
						"ILSP7DigitalAsset": [
							228
						]
					},
					"id": 54,
					"license": "Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 52,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:1"
						},
						{
							"absolutePath": "@lukso/lsp7-contracts/contracts/ILSP7DigitalAsset.sol",
							"file": "@lukso/lsp7-contracts/contracts/ILSP7DigitalAsset.sol",
							"id": 53,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 54,
							"sourceUnit": 229,
							"src": "64:63:1",
							"symbolAliases": [],
							"unitAlias": ""
						}
					],
					"src": "39:89:1"
				},
				"id": 1
			},
			"@lukso/lsp7-contracts/contracts/ILSP7DigitalAsset.sol": {
				"ast": {
					"absolutePath": "@lukso/lsp7-contracts/contracts/ILSP7DigitalAsset.sol",
					"exportedSymbols": {
						"IERC165": [
							1596
						],
						"IERC725Y": [
							50
						],
						"ILSP7DigitalAsset": [
							228
						]
					},
					"id": 229,
					"license": "Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 55,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "40:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"id": 57,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 229,
							"sourceUnit": 1597,
							"src": "79:80:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 56,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1596,
										"src": "87:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol",
							"file": "@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol",
							"id": 59,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 229,
							"sourceUnit": 51,
							"src": "160:89:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 58,
										"name": "IERC725Y",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 50,
										"src": "173:8:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 61,
										"name": "IERC165",
										"nameLocations": [
											"374:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1596,
										"src": "374:7:2"
									},
									"id": 62,
									"nodeType": "InheritanceSpecifier",
									"src": "374:7:2"
								},
								{
									"baseName": {
										"id": 63,
										"name": "IERC725Y",
										"nameLocations": [
											"383:8:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 50,
										"src": "383:8:2"
									},
									"id": 64,
									"nodeType": "InheritanceSpecifier",
									"src": "383:8:2"
								}
							],
							"canonicalName": "ILSP7DigitalAsset",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 60,
								"nodeType": "StructuredDocumentation",
								"src": "251:91:2",
								"text": " @title Interface of the LSP7 - Digital Asset standard, a fungible digital asset."
							},
							"fullyImplemented": false,
							"id": 228,
							"linearizedBaseContracts": [
								228,
								50,
								1596
							],
							"name": "ILSP7DigitalAsset",
							"nameLocation": "353:17:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "417:693:2",
										"text": " @dev Emitted when the `from` transferred successfully `amount` of tokens to `to`.\n @param operator The address of the operator that executed the transfer.\n @param from The address which tokens were sent from (balance decreased by `-amount`).\n @param to The address that received the tokens (balance increased by `+amount`).\n @param amount The amount of tokens transferred.\n @param force if the transferred enforced the `to` recipient address to be a contract that implements the LSP1 standard or not.\n @param data Any additional data included by the caller during the transfer, and sent in the LSP1 hooks to the `from` and `to` addresses."
									},
									"eventSelector": "3997e418d2cef0b3b0e907b1e39605c3f7d32dbd061e82ea5b4a770d46a160a6",
									"id": 79,
									"name": "Transfer",
									"nameLocation": "1121:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1155:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "1139:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1139:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1189:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "1173:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1173:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "1203:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1239:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "1231:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 72,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1231:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"indexed": false,
												"mutability": "mutable",
												"name": "force",
												"nameLocation": "1260:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "1255:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 74,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1255:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1281:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "1275:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 76,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1275:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1129:162:2"
									},
									"src": "1115:177:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 80,
										"nodeType": "StructuredDocumentation",
										"src": "1298:371:2",
										"text": " @dev Emitted when `tokenOwner` enables `operator` for `amount` tokens.\n @param operator The address authorized as an operator\n @param tokenOwner The token owner\n @param amount The amount of tokens `operator` address has access to from `tokenOwner`\n @param operatorNotificationData The data to notify the operator about via LSP1."
									},
									"eventSelector": "f772a43bfdf4729b196e3fb54a818b91a2ca6c49d10b2e16278752f9f515c25d",
									"id": 90,
									"name": "OperatorAuthorizationChanged",
									"nameLocation": "1680:28:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1734:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1718:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 81,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1718:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 84,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenOwner",
												"nameLocation": "1768:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1752:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 83,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1752:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 86,
												"indexed": true,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1804:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1788:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 85,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1788:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 88,
												"indexed": false,
												"mutability": "mutable",
												"name": "operatorNotificationData",
												"nameLocation": "1826:24:2",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1820:30:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 87,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1820:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1708:148:2"
									},
									"src": "1674:183:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "1863:409:2",
										"text": " @dev Emitted when `tokenOwner` disables `operator` for `amount` tokens and set its {`authorizedAmountFor(...)`} to `0`.\n @param operator The address revoked from operating\n @param tokenOwner The token owner\n @param notified Bool indicating whether the operator has been notified or not\n @param operatorNotificationData The data to notify the operator about via LSP1."
									},
									"eventSelector": "0ebf5762d8855cbe012d2ca42fb33a81175e17c8a8751f8859931ba453bd4167",
									"id": 101,
									"name": "OperatorRevoked",
									"nameLocation": "2283:15:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2324:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "2308:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenOwner",
												"nameLocation": "2358:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "2342:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"indexed": true,
												"mutability": "mutable",
												"name": "notified",
												"nameLocation": "2391:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "2378:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 96,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2378:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"indexed": false,
												"mutability": "mutable",
												"name": "operatorNotificationData",
												"nameLocation": "2415:24:2",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "2409:30:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 98,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2409:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2298:147:2"
									},
									"src": "2277:169:2"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "2478:578:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n If the asset contract has been set to be non-divisible via the `isNonDivisible_` parameter in\n the `constructor`, the decimals returned wiil be `0`. Otherwise `18` is the common value.\n @custom:notice This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {balanceOf} and {transfer}.\n @return the number of decimals. If `0` is returned, the asset is non-divisible."
									},
									"functionSelector": "313ce567",
									"id": 107,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3070:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3078:2:2"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "3104:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 104,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3104:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3103:7:2"
									},
									"scope": 228,
									"src": "3061:50:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 108,
										"nodeType": "StructuredDocumentation",
										"src": "3117:147:2",
										"text": " @dev Returns the number of existing tokens that have been minted in this contract.\n @return The number of existing tokens."
									},
									"functionSelector": "18160ddd",
									"id": 113,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3278:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3289:2:2"
									},
									"returnParameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "3315:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3315:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3314:9:2"
									},
									"scope": 228,
									"src": "3269:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 114,
										"nodeType": "StructuredDocumentation",
										"src": "3362:546:2",
										"text": " @dev Get the number of tokens owned by `tokenOwner`.\n If the token is divisible (the {decimals} function returns `18`), the amount returned should be divided\n by 1e18 to get a better picture of the actual balance of the `tokenOwner`.\n _Example:_\n ```\n balanceOf(someAddress) -> 42_000_000_000_000_000_000 / 1e18 = 42 tokens\n ```\n @param tokenOwner The address of the token holder to query the balance for.\n @return The amount of tokens owned by `tokenOwner`."
									},
									"functionSelector": "70a08231",
									"id": 121,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3922:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "tokenOwner",
												"nameLocation": "3940:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "3932:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3932:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3931:20:2"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "3975:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3975:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3974:9:2"
									},
									"scope": 228,
									"src": "3913:71:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 122,
										"nodeType": "StructuredDocumentation",
										"src": "4025:692:2",
										"text": " @dev Sets an `amount` of tokens that an `operator` has access from the caller's balance (allowance). See {authorizedAmountFor}.\n Notify the operator based on the LSP1-UniversalReceiver standard\n @param operator The address to authorize as an operator.\n @param amount The allowance amount of tokens operator has access to.\n @param operatorNotificationData The data to notify the operator about via LSP1.\n @custom:requirements\n - `operator` cannot be the zero address.\n @custom:events {OperatorAuthorizationChanged} when allowance is given to a new operator or\n an existing operator's allowance is updated."
									},
									"functionSelector": "b49506fd",
									"id": 131,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "authorizeOperator",
									"nameLocation": "4731:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4766:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "4758:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4758:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4792:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "4784:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4784:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "operatorNotificationData",
												"nameLocation": "4821:24:2",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "4808:37:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 127,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4808:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4748:103:2"
									},
									"returnParameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4860:0:2"
									},
									"scope": 228,
									"src": "4722:139:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "4867:794:2",
										"text": " @dev Enables `tokenOwner` to remove `operator` for its tokens, disallowing it to send any amount of tokens on its behalf.\n This function also allows the `operator` to remove itself if it is the caller of this function\n @param operator The address to revoke as an operator.\n @param tokenOwner The address of the token owner.\n @param notify Boolean indicating whether to notify the operator or not.\n @param operatorNotificationData The data to notify the operator about via LSP1.\n @custom:requirements\n - caller MUST be `operator` or `tokenOwner`\n - `operator` cannot be the zero address.\n @custom:events {OperatorRevoked} event with address of the operator being revoked for the caller (token holder)."
									},
									"functionSelector": "30d0dc37",
									"id": 143,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeOperator",
									"nameLocation": "5675:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5707:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "5699:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5699:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "tokenOwner",
												"nameLocation": "5733:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "5725:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "notify",
												"nameLocation": "5758:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "5753:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 137,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5753:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "operatorNotificationData",
												"nameLocation": "5787:24:2",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "5774:37:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 139,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5774:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5689:128:2"
									},
									"returnParameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5826:0:2"
									},
									"scope": 228,
									"src": "5666:161:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 144,
										"nodeType": "StructuredDocumentation",
										"src": "5833:970:2",
										"text": " @custom:info This function in the LSP7 contract can be used as a prevention mechanism\n against double spending allowance vulnerability.\n @notice Increase the allowance of `operator` by +`addedAmount`\n @dev Atomically increases the allowance granted to `operator` by the caller.\n This is an alternative approach to {authorizeOperator} that can be used as a mitigation\n for the double spending allowance problem.\n Notify the operator based on the LSP1-UniversalReceiver standard\n @param operator The operator to increase the allowance for `msg.sender`\n @param addedAmount The additional amount to add on top of the current operator's allowance\n @custom:requirements\n  - `operator` cannot be the same address as `msg.sender`\n  - `operator` cannot be the zero address.\n @custom:events {OperatorAuthorizationChanged} indicating the updated allowance"
									},
									"functionSelector": "2bc1da82",
									"id": 153,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "6817:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6852:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "6844:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6844:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "addedAmount",
												"nameLocation": "6878:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "6870:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6870:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "operatorNotificationData",
												"nameLocation": "6912:24:2",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "6899:37:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 149,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6899:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6834:108:2"
									},
									"returnParameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6951:0:2"
									},
									"scope": 228,
									"src": "6808:144:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 154,
										"nodeType": "StructuredDocumentation",
										"src": "6958:1262:2",
										"text": " @custom:info This function in the LSP7 contract can be used as a prevention mechanism\n against the double spending allowance vulnerability.\n @notice Decrease the allowance of `operator` by -`subtractedAmount`\n @dev Atomically decreases the allowance granted to `operator` by the caller.\n This is an alternative approach to {authorizeOperator} that can be used as a mitigation\n for the double spending allowance problem.\n Notify the operator based on the LSP1-UniversalReceiver standard\n @custom:events\n  - {OperatorAuthorizationChanged} event indicating the updated allowance after decreasing it.\n  - {OperatorRevoked} event if `subtractedAmount` is the full allowance,\n    indicating `operator` does not have any alauthorizedAmountForlowance left for `msg.sender`.\n @param operator The operator to decrease allowance for `msg.sender`\n @param tokenOwner The address of the token owner.\n @param subtractedAmount The amount to decrease by in the operator's allowance.\n @custom:requirements\n  - `operator` cannot be the zero address.\n  - `operator` must have allowance for the caller of at least `subtractedAmount`."
									},
									"functionSelector": "78381670",
									"id": 165,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "8234:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8269:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "8261:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8261:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "tokenOwner",
												"nameLocation": "8295:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "8287:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8287:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "subtractedAmount",
												"nameLocation": "8323:16:2",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "8315:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8315:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "operatorNotificationData",
												"nameLocation": "8362:24:2",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "8349:37:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 161,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8349:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8251:141:2"
									},
									"returnParameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8401:0:2"
									},
									"scope": 228,
									"src": "8225:177:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 166,
										"nodeType": "StructuredDocumentation",
										"src": "8408:648:2",
										"text": " @dev Get the amount of tokens `operator` address has access to from `tokenOwner`.\n Operators can send and burn tokens on behalf of their owners.\n @param operator The operator's address to query the authorized amount for.\n @param tokenOwner The token owner that `operator` has allowance on.\n @return The amount of tokens the `operator`'s address has access on the `tokenOwner`'s balance.\n @custom:info If this function is called with the same address for `operator` and `tokenOwner`, it will simply read the `tokenOwner`'s balance\n (since a tokenOwner is its own operator)."
									},
									"functionSelector": "65aeaa95",
									"id": 175,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "authorizedAmountFor",
									"nameLocation": "9070:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "9107:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "9099:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9099:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "tokenOwner",
												"nameLocation": "9133:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "9125:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9125:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9089:60:2"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "9173:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9173:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9172:9:2"
									},
									"scope": 228,
									"src": "9061:121:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "9188:293:2",
										"text": " @dev Returns all `operator` addresses that are allowed to transfer or burn on behalf of `tokenOwner`.\n @param tokenOwner The token owner to get the operators for.\n @return An array of operators allowed to transfer or burn tokens on behalf of `tokenOwner`."
									},
									"functionSelector": "d72fc29a",
									"id": 184,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOperatorsOf",
									"nameLocation": "9495:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "tokenOwner",
												"nameLocation": "9527:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "9519:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9519:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9509:34:2"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "9567:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 180,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "9567:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 181,
													"nodeType": "ArrayTypeName",
													"src": "9567:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9566:18:2"
									},
									"scope": 228,
									"src": "9486:99:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 185,
										"nodeType": "StructuredDocumentation",
										"src": "9626:2317:2",
										"text": " @dev Transfers an `amount` of tokens from the `from` address to the `to` address and notify both sender and recipients via the LSP1 {`universalReceiver(...)`} function.\n If the tokens are transferred by an operator on behalf of a token holder, the allowance for the operator will be decreased by `amount` once the token transfer\n has been completed (See {authorizedAmountFor}).\n @param from The sender address.\n @param to The recipient address.\n @param amount The amount of tokens to transfer.\n @param force When set to `true`, the `to` address CAN be any address. When set to `false`, the `to` address MUST be a contract that supports the LSP1 UniversalReceiver standard.\n @param data Any additional data the caller wants included in the emitted event, and sent in the hooks of the `from` and `to` addresses.\n @custom:requirements\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` and `to` cannot be the same address (`from` cannot send tokens to itself).\n - `from` MUST have a balance of at least `amount` tokens.\n - If the caller is not `from`, it must be an operator for `from` with an allowance of at least `amount` of tokens.\n @custom:events\n - {Transfer} event when tokens get successfully transferred.\n - if the transfer is triggered by an operator, either the {OperatorAuthorizationChanged} event will be emitted with the updated allowance or the {OperatorRevoked}\n event will be emitted if the operator has no more allowance left.\n @custom:hint The `force` parameter **MUST be set to `true`** to transfer tokens to Externally Owned Accounts (EOAs)\n or contracts that do not implement the LSP1 Universal Receiver Standard. Otherwise the function will revert making the transfer fail.\n @custom:info if the `to` address is a contract that implements LSP1, it will always be notified via its `universalReceiver(...)` function, regardless if `force` is set to `true` or `false`.\n @custom:warning Be aware that when either the sender or the recipient can have logic that revert in their `universalReceiver(...)` function when being notified.\n This even if the `force` was set to `true`."
									},
									"functionSelector": "760d9bba",
									"id": 198,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "11957:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11983:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "11975:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11975:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12005:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "11997:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11997:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12025:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "12017:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12017:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "force",
												"nameLocation": "12046:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "12041:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 192,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12041:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "12074:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "12061:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 194,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12061:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11965:119:2"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12093:0:2"
									},
									"scope": 228,
									"src": "11948:146:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 199,
										"nodeType": "StructuredDocumentation",
										"src": "12100:1246:2",
										"text": " @dev Same as {`transfer(...)`} but transfer multiple tokens based on the arrays of `from`, `to`, `amount`.\n @custom:info If any transfer in the batch fail or revert, the whole call will revert.\n @param from An array of sending addresses.\n @param to An array of receiving addresses.\n @param amount An array of amount of tokens to transfer for each `from -> to` transfer.\n @param force For each transfer, when set to `true`, the `to` address CAN be any address. When set to `false`, the `to` address MUST be a contract that supports the LSP1 UniversalReceiver standard.\n @param data An array of additional data the caller wants included in the emitted event, and sent in the hooks to `from` and `to` addresses.\n @custom:requirements\n - `from`, `to`, `amount` lists MUST be of the same length.\n - no values in `from` can be the zero address.\n - no values in `to` can be the zero address.\n - each `amount` tokens MUST be owned by `from`.\n - for each transfer, if the caller is not `from`, it MUST be an operator for `from` with access to at least `amount` tokens.\n @custom:events {Transfer} event **for each token transfer**."
									},
									"functionSelector": "2d7667c9",
									"id": 217,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferBatch",
									"nameLocation": "13360:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13400:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "13383:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 200,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "13383:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 201,
													"nodeType": "ArrayTypeName",
													"src": "13383:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13431:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "13414:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 203,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "13414:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 204,
													"nodeType": "ArrayTypeName",
													"src": "13414:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13460:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "13443:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 206,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "13443:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 207,
													"nodeType": "ArrayTypeName",
													"src": "13443:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "force",
												"nameLocation": "13490:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "13476:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
													"typeString": "bool[]"
												},
												"typeName": {
													"baseType": {
														"id": 209,
														"name": "bool",
														"nodeType": "ElementaryTypeName",
														"src": "13476:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 210,
													"nodeType": "ArrayTypeName",
													"src": "13476:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
														"typeString": "bool[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13520:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "13505:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 212,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "13505:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 213,
													"nodeType": "ArrayTypeName",
													"src": "13505:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13373:157:2"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13539:0:2"
									},
									"scope": 228,
									"src": "13351:189:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "13546:460:2",
										"text": " @notice Executing the following batch of abi-encoded function calls on the contract: `data`.\n @dev Allows a caller to batch different function calls in one call. Perform a `delegatecall` on self, to call different functions with preserving the context.\n @param data An array of ABI encoded function calls to be called on the contract.\n @return results An array of abi-encoded data returned by the functions executed."
									},
									"functionSelector": "6963d438",
									"id": 227,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "batchCalls",
									"nameLocation": "14020:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14057:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "14040:21:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 219,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "14040:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 220,
													"nodeType": "ArrayTypeName",
													"src": "14040:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14030:37:2"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "results",
												"nameLocation": "14101:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "14086:22:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 223,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "14086:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 224,
													"nodeType": "ArrayTypeName",
													"src": "14086:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14085:24:2"
									},
									"scope": 228,
									"src": "14011:99:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 229,
							"src": "343:13769:2",
							"usedErrors": [],
							"usedEvents": [
								13,
								79,
								90,
								101
							]
						}
					],
					"src": "40:14073:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							258
						]
					},
					"id": 259,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 230,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 231,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 258,
							"linearizedBaseContracts": [
								258
							],
							"name": "Context",
							"nameLocation": "642:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 239,
										"nodeType": "Block",
										"src": "718:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 236,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 235,
												"id": 238,
												"nodeType": "Return",
												"src": "728:17:3"
											}
										]
									},
									"id": 240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:3"
									},
									"returnParameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "709:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:3"
									},
									"scope": 258,
									"src": "656:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 248,
										"nodeType": "Block",
										"src": "825:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 245,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 244,
												"id": 247,
												"nodeType": "Return",
												"src": "835:15:3"
											}
										]
									},
									"id": 249,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:3"
									},
									"returnParameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "809:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 242,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:3"
									},
									"scope": 258,
									"src": "758:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 256,
										"nodeType": "Block",
										"src": "935:25:3",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 254,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 253,
												"id": 255,
												"nodeType": "Return",
												"src": "945:8:3"
											}
										]
									},
									"id": 257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:3"
									},
									"returnParameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "926:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:3"
									},
									"scope": 258,
									"src": "863:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 259,
							"src": "624:338:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
					"exportedSymbols": {
						"Counters": [
							332
						]
					},
					"id": 333,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 260,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "90:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Counters",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 261,
								"nodeType": "StructuredDocumentation",
								"src": "117:318:4",
								"text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
							},
							"fullyImplemented": true,
							"id": 332,
							"linearizedBaseContracts": [
								332
							],
							"name": "Counters",
							"nameLocation": "445:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Counters.Counter",
									"id": 264,
									"members": [
										{
											"constant": false,
											"id": 263,
											"mutability": "mutable",
											"name": "_value",
											"nameLocation": "812:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 264,
											"src": "804:14:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 262,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "804:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nameLocation": "468:7:4",
									"nodeType": "StructDefinition",
									"scope": 332,
									"src": "461:379:4",
									"visibility": "public"
								},
								{
									"body": {
										"id": 275,
										"nodeType": "Block",
										"src": "922:40:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 272,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 267,
														"src": "940:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$264_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 273,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "948:6:4",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 263,
													"src": "940:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 271,
												"id": 274,
												"nodeType": "Return",
												"src": "933:21:4"
											}
										]
									},
									"id": 276,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nameLocation": "857:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "881:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "865:23:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$264_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 266,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 265,
														"name": "Counter",
														"nameLocations": [
															"865:7:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 264,
														"src": "865:7:4"
													},
													"referencedDeclaration": 264,
													"src": "865:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$264_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "864:25:4"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "913:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "913:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "912:9:4"
									},
									"scope": 332,
									"src": "848:114:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 289,
										"nodeType": "Block",
										"src": "1023:74:4",
										"statements": [
											{
												"id": 288,
												"nodeType": "UncheckedBlock",
												"src": "1034:56:4",
												"statements": [
													{
														"expression": {
															"id": 286,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 282,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 279,
																	"src": "1059:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$264_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1067:6:4",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 263,
																"src": "1059:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 285,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1077:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1059:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 287,
														"nodeType": "ExpressionStatement",
														"src": "1059:19:4"
													}
												]
											}
										]
									},
									"id": 290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "979:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1005:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 290,
												"src": "989:23:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$264_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 278,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 277,
														"name": "Counter",
														"nameLocations": [
															"989:7:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 264,
														"src": "989:7:4"
													},
													"referencedDeclaration": 264,
													"src": "989:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$264_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:25:4"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1023:0:4"
									},
									"scope": 332,
									"src": "970:127:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 317,
										"nodeType": "Block",
										"src": "1158:182:4",
										"statements": [
											{
												"assignments": [
													297
												],
												"declarations": [
													{
														"constant": false,
														"id": 297,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "1177:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 317,
														"src": "1169:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 296,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1169:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 300,
												"initialValue": {
													"expression": {
														"id": 298,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "1185:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$264_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 299,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1193:6:4",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 263,
													"src": "1185:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1169:30:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 302,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 297,
																"src": "1218:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 303,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1226:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1218:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
															"id": 305,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1229:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															},
															"value": "Counter: decrement overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															}
														],
														"id": 301,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1210:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1210:49:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 307,
												"nodeType": "ExpressionStatement",
												"src": "1210:49:4"
											},
											{
												"id": 316,
												"nodeType": "UncheckedBlock",
												"src": "1270:63:4",
												"statements": [
													{
														"expression": {
															"id": 314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 308,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 293,
																	"src": "1295:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$264_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 310,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1303:6:4",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 263,
																"src": "1295:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 313,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 311,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 297,
																	"src": "1312:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1320:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1312:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1295:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 315,
														"nodeType": "ExpressionStatement",
														"src": "1295:26:4"
													}
												]
											}
										]
									},
									"id": 318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nameLocation": "1114:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1140:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "1124:23:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$264_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 292,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 291,
														"name": "Counter",
														"nameLocations": [
															"1124:7:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 264,
														"src": "1124:7:4"
													},
													"referencedDeclaration": 264,
													"src": "1124:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$264_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1123:25:4"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1158:0:4"
									},
									"scope": 332,
									"src": "1105:235:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 330,
										"nodeType": "Block",
										"src": "1397:37:4",
										"statements": [
											{
												"expression": {
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 324,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 321,
															"src": "1408:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$264_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 326,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1416:6:4",
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 263,
														"src": "1408:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 327,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1425:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1408:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 329,
												"nodeType": "ExpressionStatement",
												"src": "1408:18:4"
											}
										]
									},
									"id": 331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reset",
									"nameLocation": "1357:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1379:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "1363:23:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$264_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 320,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 319,
														"name": "Counter",
														"nameLocations": [
															"1363:7:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 264,
														"src": "1363:7:4"
													},
													"referencedDeclaration": 264,
													"src": "1363:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$264_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1362:25:4"
									},
									"returnParameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1397:0:4"
									},
									"scope": 332,
									"src": "1348:86:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 333,
							"src": "437:1000:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "90:1349:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Panic.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Panic.sol",
					"exportedSymbols": {
						"Panic": [
							384
						]
					},
					"id": 385,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 334,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "99:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Panic",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 335,
								"nodeType": "StructuredDocumentation",
								"src": "125:489:5",
								"text": " @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 384,
							"linearizedBaseContracts": [
								384
							],
							"name": "Panic",
							"nameLocation": "665:5:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "677:36:5",
										"text": "@dev generic / unspecified error"
									},
									"id": 339,
									"mutability": "constant",
									"name": "GENERIC",
									"nameLocation": "744:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 384,
									"src": "718:40:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 337,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "718:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 338,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "754:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 340,
										"nodeType": "StructuredDocumentation",
										"src": "764:37:5",
										"text": "@dev used by the assert() builtin"
									},
									"id": 343,
									"mutability": "constant",
									"name": "ASSERT",
									"nameLocation": "832:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 384,
									"src": "806:39:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 341,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "806:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783031",
										"id": 342,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "841:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "0x01"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 344,
										"nodeType": "StructuredDocumentation",
										"src": "851:41:5",
										"text": "@dev arithmetic underflow or overflow"
									},
									"id": 347,
									"mutability": "constant",
									"name": "UNDER_OVERFLOW",
									"nameLocation": "923:14:5",
									"nodeType": "VariableDeclaration",
									"scope": 384,
									"src": "897:47:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 345,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "897:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783131",
										"id": 346,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "940:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_17_by_1",
											"typeString": "int_const 17"
										},
										"value": "0x11"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 348,
										"nodeType": "StructuredDocumentation",
										"src": "950:35:5",
										"text": "@dev division or modulo by zero"
									},
									"id": 351,
									"mutability": "constant",
									"name": "DIVISION_BY_ZERO",
									"nameLocation": "1016:16:5",
									"nodeType": "VariableDeclaration",
									"scope": 384,
									"src": "990:49:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 349,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "990:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783132",
										"id": 350,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1035:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "0x12"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 352,
										"nodeType": "StructuredDocumentation",
										"src": "1045:30:5",
										"text": "@dev enum conversion error"
									},
									"id": 355,
									"mutability": "constant",
									"name": "ENUM_CONVERSION_ERROR",
									"nameLocation": "1106:21:5",
									"nodeType": "VariableDeclaration",
									"scope": 384,
									"src": "1080:54:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 353,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1080:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783231",
										"id": 354,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1130:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_33_by_1",
											"typeString": "int_const 33"
										},
										"value": "0x21"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "1140:36:5",
										"text": "@dev invalid encoding in storage"
									},
									"id": 359,
									"mutability": "constant",
									"name": "STORAGE_ENCODING_ERROR",
									"nameLocation": "1207:22:5",
									"nodeType": "VariableDeclaration",
									"scope": 384,
									"src": "1181:55:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 357,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1181:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783232",
										"id": 358,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1232:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_34_by_1",
											"typeString": "int_const 34"
										},
										"value": "0x22"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "1242:24:5",
										"text": "@dev empty array pop"
									},
									"id": 363,
									"mutability": "constant",
									"name": "EMPTY_ARRAY_POP",
									"nameLocation": "1297:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 384,
									"src": "1271:48:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 361,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1271:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783331",
										"id": 362,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1315:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_49_by_1",
											"typeString": "int_const 49"
										},
										"value": "0x31"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "1325:35:5",
										"text": "@dev array out of bounds access"
									},
									"id": 367,
									"mutability": "constant",
									"name": "ARRAY_OUT_OF_BOUNDS",
									"nameLocation": "1391:19:5",
									"nodeType": "VariableDeclaration",
									"scope": 384,
									"src": "1365:52:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 365,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1365:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783332",
										"id": 366,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1413:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50_by_1",
											"typeString": "int_const 50"
										},
										"value": "0x32"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 368,
										"nodeType": "StructuredDocumentation",
										"src": "1423:65:5",
										"text": "@dev resource error (too large allocation or too large array)"
									},
									"id": 371,
									"mutability": "constant",
									"name": "RESOURCE_ERROR",
									"nameLocation": "1519:14:5",
									"nodeType": "VariableDeclaration",
									"scope": 384,
									"src": "1493:47:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 369,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1493:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783431",
										"id": 370,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1536:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65_by_1",
											"typeString": "int_const 65"
										},
										"value": "0x41"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 372,
										"nodeType": "StructuredDocumentation",
										"src": "1546:42:5",
										"text": "@dev calling invalid internal function"
									},
									"id": 375,
									"mutability": "constant",
									"name": "INVALID_INTERNAL_FUNCTION",
									"nameLocation": "1619:25:5",
									"nodeType": "VariableDeclaration",
									"scope": 384,
									"src": "1593:58:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 373,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1593:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783531",
										"id": 374,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1647:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81_by_1",
											"typeString": "int_const 81"
										},
										"value": "0x51"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 382,
										"nodeType": "Block",
										"src": "1819:151:5",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1854:110:5",
													"nodeType": "YulBlock",
													"src": "1854:110:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1875:4:5",
																		"nodeType": "YulLiteral",
																		"src": "1875:4:5",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1881:10:5",
																		"nodeType": "YulLiteral",
																		"src": "1881:10:5",
																		"type": "",
																		"value": "0x4e487b71"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1868:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1868:6:5"
																},
																"nativeSrc": "1868:24:5",
																"nodeType": "YulFunctionCall",
																"src": "1868:24:5"
															},
															"nativeSrc": "1868:24:5",
															"nodeType": "YulExpressionStatement",
															"src": "1868:24:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1912:4:5",
																		"nodeType": "YulLiteral",
																		"src": "1912:4:5",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "code",
																		"nativeSrc": "1918:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "1918:4:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1905:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1905:6:5"
																},
																"nativeSrc": "1905:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1905:18:5"
															},
															"nativeSrc": "1905:18:5",
															"nodeType": "YulExpressionStatement",
															"src": "1905:18:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1943:4:5",
																		"nodeType": "YulLiteral",
																		"src": "1943:4:5",
																		"type": "",
																		"value": "0x1c"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1949:4:5",
																		"nodeType": "YulLiteral",
																		"src": "1949:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1936:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1936:6:5"
																},
																"nativeSrc": "1936:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1936:18:5"
															},
															"nativeSrc": "1936:18:5",
															"nodeType": "YulExpressionStatement",
															"src": "1936:18:5"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 378,
														"isOffset": false,
														"isSlot": false,
														"src": "1918:4:5",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 381,
												"nodeType": "InlineAssembly",
												"src": "1829:135:5"
											}
										]
									},
									"documentation": {
										"id": 376,
										"nodeType": "StructuredDocumentation",
										"src": "1658:113:5",
										"text": "@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."
									},
									"id": 383,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "panic",
									"nameLocation": "1785:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "code",
												"nameLocation": "1799:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "1791:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1791:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1790:14:5"
									},
									"returnParameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1819:0:5"
									},
									"scope": 384,
									"src": "1776:194:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 385,
							"src": "657:1315:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "99:1874:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							3202
						],
						"SafeCast": [
							4967
						],
						"SignedMath": [
							5111
						],
						"Strings": [
							1584
						]
					},
					"id": 1585,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 386,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 388,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1585,
							"sourceUnit": 3203,
							"src": "127:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 387,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3202,
										"src": "135:4:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeCast.sol",
							"file": "./math/SafeCast.sol",
							"id": 390,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1585,
							"sourceUnit": 4968,
							"src": "165:45:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 389,
										"name": "SafeCast",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 4967,
										"src": "173:8:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 392,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1585,
							"sourceUnit": 5112,
							"src": "211:49:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 391,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 5111,
										"src": "219:10:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 393,
								"nodeType": "StructuredDocumentation",
								"src": "262:34:6",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1584,
							"linearizedBaseContracts": [
								1584
							],
							"name": "Strings",
							"nameLocation": "305:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 395,
									"libraryName": {
										"id": 394,
										"name": "SafeCast",
										"nameLocations": [
											"325:8:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 4967,
										"src": "325:8:6"
									},
									"nodeType": "UsingForDirective",
									"src": "319:21:6"
								},
								{
									"constant": true,
									"id": 398,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "371:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 1584,
									"src": "346:56:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 396,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "346:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 397,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "384:18:6",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 401,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "431:14:6",
									"nodeType": "VariableDeclaration",
									"scope": 1584,
									"src": "408:42:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 399,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "408:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 400,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "448:2:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 402,
										"nodeType": "StructuredDocumentation",
										"src": "457:81:6",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 408,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "549:28:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "586:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "578:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "578:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "601:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "593:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "593:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "577:31:6"
									},
									"src": "543:66:6"
								},
								{
									"documentation": {
										"id": 409,
										"nodeType": "StructuredDocumentation",
										"src": "615:108:6",
										"text": " @dev The string being parsed contains characters that are not in scope of the given base."
									},
									"errorSelector": "94e2737e",
									"id": 411,
									"name": "StringsInvalidChar",
									"nameLocation": "734:18:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "752:2:6"
									},
									"src": "728:27:6"
								},
								{
									"documentation": {
										"id": 412,
										"nodeType": "StructuredDocumentation",
										"src": "761:84:6",
										"text": " @dev The string being parsed is not a properly formatted address."
									},
									"errorSelector": "1d15ae44",
									"id": 414,
									"name": "StringsInvalidAddressFormat",
									"nameLocation": "856:27:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "883:2:6"
									},
									"src": "850:36:6"
								},
								{
									"body": {
										"id": 461,
										"nodeType": "Block",
										"src": "1058:561:6",
										"statements": [
											{
												"id": 460,
												"nodeType": "UncheckedBlock",
												"src": "1068:545:6",
												"statements": [
													{
														"assignments": [
															423
														],
														"declarations": [
															{
																"constant": false,
																"id": 423,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "1100:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 460,
																"src": "1092:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 422,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1092:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 430,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 426,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 417,
																		"src": "1120:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 424,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3202,
																		"src": "1109:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$3202_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 425,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1114:5:6",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2974,
																	"src": "1109:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 427,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1109:17:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 428,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1129:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1109:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1092:38:6"
													},
													{
														"assignments": [
															432
														],
														"declarations": [
															{
																"constant": false,
																"id": 432,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "1158:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 460,
																"src": "1144:20:6",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 431,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "1144:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 437,
														"initialValue": {
															"arguments": [
																{
																	"id": 435,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 423,
																	"src": "1178:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 434,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "1167:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 433,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "1171:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1167:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1144:41:6"
													},
													{
														"assignments": [
															439
														],
														"declarations": [
															{
																"constant": false,
																"id": 439,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "1207:3:6",
																"nodeType": "VariableDeclaration",
																"scope": 460,
																"src": "1199:11:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 438,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1199:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 440,
														"nodeType": "VariableDeclarationStatement",
														"src": "1199:11:6"
													},
													{
														"AST": {
															"nativeSrc": "1249:67:6",
															"nodeType": "YulBlock",
															"src": "1249:67:6",
															"statements": [
																{
																	"nativeSrc": "1267:35:6",
																	"nodeType": "YulAssignment",
																	"src": "1267:35:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "1278:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1278:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1290:2:6",
																						"nodeType": "YulLiteral",
																						"src": "1290:2:6",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "1294:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1294:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1286:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1286:3:6"
																				},
																				"nativeSrc": "1286:15:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1286:15:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1274:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1274:3:6"
																		},
																		"nativeSrc": "1274:28:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1274:28:6"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "1267:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1267:3:6"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 432,
																"isOffset": false,
																"isSlot": false,
																"src": "1278:6:6",
																"valueSize": 1
															},
															{
																"declaration": 423,
																"isOffset": false,
																"isSlot": false,
																"src": "1294:6:6",
																"valueSize": 1
															},
															{
																"declaration": 439,
																"isOffset": false,
																"isSlot": false,
																"src": "1267:3:6",
																"valueSize": 1
															}
														],
														"flags": [
															"memory-safe"
														],
														"id": 441,
														"nodeType": "InlineAssembly",
														"src": "1224:92:6"
													},
													{
														"body": {
															"id": 456,
															"nodeType": "Block",
															"src": "1342:234:6",
															"statements": [
																{
																	"expression": {
																		"id": 444,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1360:5:6",
																		"subExpression": {
																			"id": 443,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 439,
																			"src": "1360:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 445,
																	"nodeType": "ExpressionStatement",
																	"src": "1360:5:6"
																},
																{
																	"AST": {
																		"nativeSrc": "1408:86:6",
																		"nodeType": "YulBlock",
																		"src": "1408:86:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1438:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "1438:3:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1452:5:6",
																											"nodeType": "YulIdentifier",
																											"src": "1452:5:6"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1459:2:6",
																											"nodeType": "YulLiteral",
																											"src": "1459:2:6",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1448:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "1448:3:6"
																									},
																									"nativeSrc": "1448:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "1448:14:6"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1464:10:6",
																									"nodeType": "YulIdentifier",
																									"src": "1464:10:6"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1443:4:6",
																								"nodeType": "YulIdentifier",
																								"src": "1443:4:6"
																							},
																							"nativeSrc": "1443:32:6",
																							"nodeType": "YulFunctionCall",
																							"src": "1443:32:6"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1430:7:6",
																						"nodeType": "YulIdentifier",
																						"src": "1430:7:6"
																					},
																					"nativeSrc": "1430:46:6",
																					"nodeType": "YulFunctionCall",
																					"src": "1430:46:6"
																				},
																				"nativeSrc": "1430:46:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "1430:46:6"
																			}
																		]
																	},
																	"evmVersion": "cancun",
																	"externalReferences": [
																		{
																			"declaration": 398,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1464:10:6",
																			"valueSize": 1
																		},
																		{
																			"declaration": 439,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1438:3:6",
																			"valueSize": 1
																		},
																		{
																			"declaration": 417,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1452:5:6",
																			"valueSize": 1
																		}
																	],
																	"flags": [
																		"memory-safe"
																	],
																	"id": 446,
																	"nodeType": "InlineAssembly",
																	"src": "1383:111:6"
																},
																{
																	"expression": {
																		"id": 449,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 447,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 417,
																			"src": "1511:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 448,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1520:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1511:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 450,
																	"nodeType": "ExpressionStatement",
																	"src": "1511:11:6"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 453,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 451,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 417,
																			"src": "1544:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 452,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1553:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1544:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 455,
																	"nodeType": "IfStatement",
																	"src": "1540:21:6",
																	"trueBody": {
																		"id": 454,
																		"nodeType": "Break",
																		"src": "1556:5:6"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 442,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1336:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 457,
														"nodeType": "WhileStatement",
														"src": "1329:247:6"
													},
													{
														"expression": {
															"id": 458,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 432,
															"src": "1596:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 421,
														"id": 459,
														"nodeType": "Return",
														"src": "1589:13:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 415,
										"nodeType": "StructuredDocumentation",
										"src": "892:90:6",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "996:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1013:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "1005:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1005:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1004:15:6"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "1043:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 419,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1043:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:15:6"
									},
									"scope": 1584,
									"src": "987:632:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 487,
										"nodeType": "Block",
										"src": "1795:92:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 473,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 465,
																	"src": "1826:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 474,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1834:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1826:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1844:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 478,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1826:20:6",
															"trueExpression": {
																"hexValue": "2d",
																"id": 476,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1838:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 482,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 465,
																			"src": "1872:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 480,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 5111,
																			"src": "1857:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$5111_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 481,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1868:3:6",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 5110,
																		"src": "1857:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 483,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1857:21:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 479,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 462,
																"src": "1848:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1848:31:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 471,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1812:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 470,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1812:6:6",
																"typeDescriptions": {}
															}
														},
														"id": 472,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1819:6:6",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1812:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1812:68:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 469,
												"id": 486,
												"nodeType": "Return",
												"src": "1805:75:6"
											}
										]
									},
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "1625:89:6",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 488,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1728:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1750:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "1743:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 464,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1743:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1742:14:6"
									},
									"returnParameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "1780:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 467,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1780:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1779:15:6"
									},
									"scope": 1584,
									"src": "1719:168:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 507,
										"nodeType": "Block",
										"src": "2066:100:6",
										"statements": [
											{
												"id": 506,
												"nodeType": "UncheckedBlock",
												"src": "2076:84:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 497,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 491,
																	"src": "2119:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 503,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 500,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 491,
																				"src": "2138:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 498,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3202,
																				"src": "2126:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$3202_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 499,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2131:6:6",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3145,
																			"src": "2126:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 501,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2126:18:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2147:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "2126:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 496,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	508,
																	591,
																	611
																],
																"referencedDeclaration": 591,
																"src": "2107:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 504,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2107:42:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 495,
														"id": 505,
														"nodeType": "Return",
														"src": "2100:49:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 489,
										"nodeType": "StructuredDocumentation",
										"src": "1893:94:6",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2001:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2021:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "2013:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2013:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2012:15:6"
									},
									"returnParameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "2051:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 493,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2051:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2050:15:6"
									},
									"scope": 1584,
									"src": "1992:174:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 590,
										"nodeType": "Block",
										"src": "2379:435:6",
										"statements": [
											{
												"assignments": [
													519
												],
												"declarations": [
													{
														"constant": false,
														"id": 519,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2397:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 590,
														"src": "2389:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 518,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2389:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 521,
												"initialValue": {
													"id": 520,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 511,
													"src": "2410:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2389:26:6"
											},
											{
												"assignments": [
													523
												],
												"declarations": [
													{
														"constant": false,
														"id": 523,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2438:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 590,
														"src": "2425:19:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 522,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2425:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 532,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 528,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 526,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2457:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 527,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 513,
																	"src": "2461:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2457:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 529,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2470:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2457:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 525,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2447:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 524,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2451:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2447:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2425:47:6"
											},
											{
												"expression": {
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 533,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "2482:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 535,
														"indexExpression": {
															"hexValue": "30",
															"id": 534,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2482:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 536,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2494:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2482:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 538,
												"nodeType": "ExpressionStatement",
												"src": "2482:15:6"
											},
											{
												"expression": {
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 539,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "2507:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 541,
														"indexExpression": {
															"hexValue": "31",
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2514:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2507:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 542,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2519:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2507:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 544,
												"nodeType": "ExpressionStatement",
												"src": "2507:15:6"
											},
											{
												"body": {
													"id": 573,
													"nodeType": "Block",
													"src": "2577:95:6",
													"statements": [
														{
															"expression": {
																"id": 567,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 559,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 523,
																		"src": "2591:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 561,
																	"indexExpression": {
																		"id": 560,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 546,
																		"src": "2598:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2591:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 562,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 398,
																		"src": "2603:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 566,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 565,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 563,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 519,
																			"src": "2614:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 564,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2627:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2614:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2603:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2591:40:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 568,
															"nodeType": "ExpressionStatement",
															"src": "2591:40:6"
														},
														{
															"expression": {
																"id": 571,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 569,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 519,
																	"src": "2645:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2660:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2645:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 572,
															"nodeType": "ExpressionStatement",
															"src": "2645:16:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 553,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 546,
														"src": "2565:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 554,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2569:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2565:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 574,
												"initializationExpression": {
													"assignments": [
														546
													],
													"declarations": [
														{
															"constant": false,
															"id": 546,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2545:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 574,
															"src": "2537:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 545,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2537:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 552,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 551,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2549:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 548,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 513,
																"src": "2553:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2549:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 550,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2562:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2549:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2537:26:6"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 557,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2572:3:6",
														"subExpression": {
															"id": 556,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "2574:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 558,
													"nodeType": "ExpressionStatement",
													"src": "2572:3:6"
												},
												"nodeType": "ForStatement",
												"src": "2532:140:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 575,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "2685:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 576,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2699:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2685:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 584,
												"nodeType": "IfStatement",
												"src": "2681:96:6",
												"trueBody": {
													"id": 583,
													"nodeType": "Block",
													"src": "2702:75:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 579,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 511,
																		"src": "2752:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 580,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 513,
																		"src": "2759:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 578,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 408,
																	"src": "2723:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2723:43:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 582,
															"nodeType": "RevertStatement",
															"src": "2716:50:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 587,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "2800:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 586,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2793:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 585,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2793:6:6",
															"typeDescriptions": {}
														}
													},
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2793:14:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 517,
												"id": 589,
												"nodeType": "Return",
												"src": "2786:21:6"
											}
										]
									},
									"documentation": {
										"id": 509,
										"nodeType": "StructuredDocumentation",
										"src": "2172:112:6",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 591,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2298:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2318:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "2310:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2310:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2333:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "2325:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2309:31:6"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "2364:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 515,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2364:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2363:15:6"
									},
									"scope": 1584,
									"src": "2289:525:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 610,
										"nodeType": "Block",
										"src": "3046:75:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 604,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 594,
																			"src": "3091:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 603,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3083:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 602,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "3083:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3083:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 601,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3075:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 600,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3075:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 606,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3075:22:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 607,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "3099:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 599,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															508,
															591,
															611
														],
														"referencedDeclaration": 591,
														"src": "3063:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3063:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 598,
												"id": 609,
												"nodeType": "Return",
												"src": "3056:58:6"
											}
										]
									},
									"documentation": {
										"id": 592,
										"nodeType": "StructuredDocumentation",
										"src": "2820:148:6",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2982:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "3002:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "2994:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2994:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2993:14:6"
									},
									"returnParameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "3031:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 596,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3031:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3030:15:6"
									},
									"scope": 1584,
									"src": "2973:148:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 675,
										"nodeType": "Block",
										"src": "3378:642:6",
										"statements": [
											{
												"assignments": [
													620
												],
												"declarations": [
													{
														"constant": false,
														"id": 620,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "3401:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 675,
														"src": "3388:19:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 619,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3388:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 627,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 624,
																	"name": "addr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 614,
																	"src": "3428:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 623,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	508,
																	591,
																	611
																],
																"referencedDeclaration": 611,
																"src": "3416:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (address) pure returns (string memory)"
																}
															},
															"id": 625,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3416:17:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 622,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3410:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": {
															"id": 621,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3410:5:6",
															"typeDescriptions": {}
														}
													},
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3410:24:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3388:46:6"
											},
											{
												"assignments": [
													629
												],
												"declarations": [
													{
														"constant": false,
														"id": 629,
														"mutability": "mutable",
														"name": "hashValue",
														"nameLocation": "3527:9:6",
														"nodeType": "VariableDeclaration",
														"scope": 675,
														"src": "3519:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 628,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3519:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 630,
												"nodeType": "VariableDeclarationStatement",
												"src": "3519:17:6"
											},
											{
												"AST": {
													"nativeSrc": "3571:78:6",
													"nodeType": "YulBlock",
													"src": "3571:78:6",
													"statements": [
														{
															"nativeSrc": "3585:54:6",
															"nodeType": "YulAssignment",
															"src": "3585:54:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3602:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3602:2:6",
																		"type": "",
																		"value": "96"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "buffer",
																						"nativeSrc": "3620:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3620:6:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3628:4:6",
																						"nodeType": "YulLiteral",
																						"src": "3628:4:6",
																						"type": "",
																						"value": "0x22"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3616:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3616:3:6"
																				},
																				"nativeSrc": "3616:17:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3616:17:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3635:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3635:2:6",
																				"type": "",
																				"value": "40"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "3606:9:6",
																			"nodeType": "YulIdentifier",
																			"src": "3606:9:6"
																		},
																		"nativeSrc": "3606:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3606:32:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3598:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3598:3:6"
																},
																"nativeSrc": "3598:41:6",
																"nodeType": "YulFunctionCall",
																"src": "3598:41:6"
															},
															"variableNames": [
																{
																	"name": "hashValue",
																	"nativeSrc": "3585:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "3585:9:6"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 620,
														"isOffset": false,
														"isSlot": false,
														"src": "3620:6:6",
														"valueSize": 1
													},
													{
														"declaration": 629,
														"isOffset": false,
														"isSlot": false,
														"src": "3585:9:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 631,
												"nodeType": "InlineAssembly",
												"src": "3546:103:6"
											},
											{
												"body": {
													"id": 668,
													"nodeType": "Block",
													"src": "3692:291:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 655,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 646,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 642,
																			"name": "hashValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 629,
																			"src": "3798:9:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 643,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3810:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "3798:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "37",
																		"id": 645,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3816:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_7_by_1",
																			"typeString": "int_const 7"
																		},
																		"value": "7"
																	},
																	"src": "3798:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"id": 654,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"baseExpression": {
																					"id": 649,
																					"name": "buffer",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 620,
																					"src": "3827:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 651,
																				"indexExpression": {
																					"id": 650,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 633,
																					"src": "3834:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "3827:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				}
																			],
																			"id": 648,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3821:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint8_$",
																				"typeString": "type(uint8)"
																			},
																			"typeName": {
																				"id": 647,
																				"name": "uint8",
																				"nodeType": "ElementaryTypeName",
																				"src": "3821:5:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 652,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3821:16:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "3936",
																		"id": 653,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3840:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	"src": "3821:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "3798:44:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 663,
															"nodeType": "IfStatement",
															"src": "3794:150:6",
															"trueBody": {
																"id": 662,
																"nodeType": "Block",
																"src": "3844:100:6",
																"statements": [
																	{
																		"expression": {
																			"id": 660,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 656,
																					"name": "buffer",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 620,
																					"src": "3912:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 658,
																				"indexExpression": {
																					"id": 657,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 633,
																					"src": "3919:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3912:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "^=",
																			"rightHandSide": {
																				"hexValue": "30783230",
																				"id": 659,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3925:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "0x20"
																			},
																			"src": "3912:17:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes1",
																				"typeString": "bytes1"
																			}
																		},
																		"id": 661,
																		"nodeType": "ExpressionStatement",
																		"src": "3912:17:6"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 666,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 664,
																	"name": "hashValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 629,
																	"src": "3957:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3971:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "3957:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 667,
															"nodeType": "ExpressionStatement",
															"src": "3957:15:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 638,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 636,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 633,
														"src": "3680:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 637,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3684:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3680:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 669,
												"initializationExpression": {
													"assignments": [
														633
													],
													"declarations": [
														{
															"constant": false,
															"id": 633,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3672:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 669,
															"src": "3664:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 632,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3664:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 635,
													"initialValue": {
														"hexValue": "3431",
														"id": 634,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3676:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_41_by_1",
															"typeString": "int_const 41"
														},
														"value": "41"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3664:14:6"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 640,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "3687:3:6",
														"subExpression": {
															"id": 639,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 633,
															"src": "3689:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 641,
													"nodeType": "ExpressionStatement",
													"src": "3687:3:6"
												},
												"nodeType": "ForStatement",
												"src": "3659:324:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 672,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 620,
															"src": "4006:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 671,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3999:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 670,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "3999:6:6",
															"typeDescriptions": {}
														}
													},
													"id": 673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3999:14:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 618,
												"id": 674,
												"nodeType": "Return",
												"src": "3992:21:6"
											}
										]
									},
									"documentation": {
										"id": 612,
										"nodeType": "StructuredDocumentation",
										"src": "3127:165:6",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."
									},
									"id": 676,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toChecksumHexString",
									"nameLocation": "3306:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "3334:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "3326:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3326:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3325:14:6"
									},
									"returnParameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "3363:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 616,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3363:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3362:15:6"
									},
									"scope": 1584,
									"src": "3297:723:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 712,
										"nodeType": "Block",
										"src": "4175:104:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 696,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 688,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 679,
																		"src": "4198:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 687,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4192:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 686,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "4192:5:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 689,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4192:8:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 690,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4201:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4192:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 693,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 681,
																		"src": "4217:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 692,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4211:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 691,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "4211:5:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 694,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4211:8:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 695,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4220:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4211:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4192:34:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 709,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 700,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 679,
																			"src": "4246:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4240:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 698,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "4240:5:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 701,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4240:8:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 697,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "4230:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 702,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4230:19:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 706,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 681,
																			"src": "4269:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 705,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4263:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 704,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "4263:5:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 707,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4263:8:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 703,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "4253:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 708,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4253:19:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "4230:42:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4192:80:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 685,
												"id": 711,
												"nodeType": "Return",
												"src": "4185:87:6"
											}
										]
									},
									"documentation": {
										"id": 677,
										"nodeType": "StructuredDocumentation",
										"src": "4026:66:6",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 713,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "4106:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4126:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "4112:15:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 678,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4112:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4143:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "4129:15:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 680,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4129:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4111:34:6"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "4169:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 683,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4169:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4168:6:6"
									},
									"scope": 1584,
									"src": "4097:182:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 731,
										"nodeType": "Block",
										"src": "4576:64:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 722,
															"name": "input",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "4603:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"hexValue": "30",
															"id": 723,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4610:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 726,
																		"name": "input",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 716,
																		"src": "4619:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 725,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4613:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 724,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "4613:5:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 727,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4613:12:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 728,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4626:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4613:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 721,
														"name": "parseUint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															732,
															763
														],
														"referencedDeclaration": 763,
														"src": "4593:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (string memory,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4593:40:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 720,
												"id": 730,
												"nodeType": "Return",
												"src": "4586:47:6"
											}
										]
									},
									"documentation": {
										"id": 714,
										"nodeType": "StructuredDocumentation",
										"src": "4285:214:6",
										"text": " @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"
									},
									"id": 732,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "parseUint",
									"nameLocation": "4513:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "input",
												"nameLocation": "4537:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "4523:19:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 715,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4523:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4522:21:6"
									},
									"returnParameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "4567:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4567:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4566:9:6"
									},
									"scope": 1584,
									"src": "4504:136:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 762,
										"nodeType": "Block",
										"src": "5038:153:6",
										"statements": [
											{
												"assignments": [
													745,
													747
												],
												"declarations": [
													{
														"constant": false,
														"id": 745,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5054:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 762,
														"src": "5049:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 744,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5049:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 747,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "5071:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 762,
														"src": "5063:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 746,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5063:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 753,
												"initialValue": {
													"arguments": [
														{
															"id": 749,
															"name": "input",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "5093:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 750,
															"name": "begin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 737,
															"src": "5100:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 751,
															"name": "end",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "5107:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 748,
														"name": "tryParseUint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															784,
															821
														],
														"referencedDeclaration": 821,
														"src": "5080:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
															"typeString": "function (string memory,uint256,uint256) pure returns (bool,uint256)"
														}
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5080:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5048:63:6"
											},
											{
												"condition": {
													"id": 755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5125:8:6",
													"subExpression": {
														"id": 754,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 745,
														"src": "5126:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 759,
												"nodeType": "IfStatement",
												"src": "5121:41:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 756,
															"name": "StringsInvalidChar",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "5142:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 757,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5142:20:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 758,
													"nodeType": "RevertStatement",
													"src": "5135:27:6"
												}
											},
											{
												"expression": {
													"id": 760,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 747,
													"src": "5179:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 743,
												"id": 761,
												"nodeType": "Return",
												"src": "5172:12:6"
											}
										]
									},
									"documentation": {
										"id": 733,
										"nodeType": "StructuredDocumentation",
										"src": "4646:287:6",
										"text": " @dev Variant of {parseUint} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"
									},
									"id": 763,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "parseUint",
									"nameLocation": "4947:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "input",
												"nameLocation": "4971:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "4957:19:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 734,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4957:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "begin",
												"nameLocation": "4986:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "4978:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4978:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "end",
												"nameLocation": "5001:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "4993:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4993:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4956:49:6"
									},
									"returnParameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "5029:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 741,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5029:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5028:9:6"
									},
									"scope": 1584,
									"src": "4938:253:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "5512:83:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 774,
															"name": "input",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 766,
															"src": "5558:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"hexValue": "30",
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5565:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 778,
																		"name": "input",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 766,
																		"src": "5574:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 777,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5568:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 776,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "5568:5:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 779,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5568:12:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 780,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5581:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5568:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 773,
														"name": "_tryParseUintUncheckedBounds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 891,
														"src": "5529:28:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
															"typeString": "function (string memory,uint256,uint256) pure returns (bool,uint256)"
														}
													},
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:59:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 772,
												"id": 782,
												"nodeType": "Return",
												"src": "5522:66:6"
											}
										]
									},
									"documentation": {
										"id": 764,
										"nodeType": "StructuredDocumentation",
										"src": "5197:215:6",
										"text": " @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryParseUint",
									"nameLocation": "5426:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "input",
												"nameLocation": "5453:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "5439:19:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 765,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5439:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5438:21:6"
									},
									"returnParameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5488:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "5483:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 768,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5483:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5505:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "5497:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5497:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5482:29:6"
									},
									"scope": 1584,
									"src": "5417:178:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 820,
										"nodeType": "Block",
										"src": "5997:144:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 804,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 798,
															"name": "end",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "6011:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 801,
																		"name": "input",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 787,
																		"src": "6023:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 800,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6017:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 799,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "6017:5:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 802,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6017:12:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 803,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6030:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "6017:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6011:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 807,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 805,
															"name": "begin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 789,
															"src": "6040:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 806,
															"name": "end",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "6048:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6040:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6011:40:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 813,
												"nodeType": "IfStatement",
												"src": "6007:63:6",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 809,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6061:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6068:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 811,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6060:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 797,
													"id": 812,
													"nodeType": "Return",
													"src": "6053:17:6"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 815,
															"name": "input",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "6116:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 816,
															"name": "begin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 789,
															"src": "6123:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 817,
															"name": "end",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "6130:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 814,
														"name": "_tryParseUintUncheckedBounds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 891,
														"src": "6087:28:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
															"typeString": "function (string memory,uint256,uint256) pure returns (bool,uint256)"
														}
													},
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6087:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 797,
												"id": 819,
												"nodeType": "Return",
												"src": "6080:54:6"
											}
										]
									},
									"documentation": {
										"id": 785,
										"nodeType": "StructuredDocumentation",
										"src": "5601:238:6",
										"text": " @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."
									},
									"id": 821,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryParseUint",
									"nameLocation": "5853:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "input",
												"nameLocation": "5889:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "5875:19:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 786,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5875:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "begin",
												"nameLocation": "5912:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "5904:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5904:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "end",
												"nameLocation": "5935:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "5927:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 790,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5927:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5865:79:6"
									},
									"returnParameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5973:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "5968:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 793,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5968:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5990:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "5982:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5982:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5967:29:6"
									},
									"scope": 1584,
									"src": "5844:297:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 890,
										"nodeType": "Block",
										"src": "6521:347:6",
										"statements": [
											{
												"assignments": [
													836
												],
												"declarations": [
													{
														"constant": false,
														"id": 836,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "6544:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 890,
														"src": "6531:19:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 835,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6531:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 841,
												"initialValue": {
													"arguments": [
														{
															"id": 839,
															"name": "input",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 824,
															"src": "6559:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 838,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6553:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": {
															"id": 837,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6553:5:6",
															"typeDescriptions": {}
														}
													},
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6553:12:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6531:34:6"
											},
											{
												"assignments": [
													843
												],
												"declarations": [
													{
														"constant": false,
														"id": 843,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "6584:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 890,
														"src": "6576:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 842,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6576:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 845,
												"initialValue": {
													"hexValue": "30",
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6593:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6576:18:6"
											},
											{
												"body": {
													"id": 884,
													"nodeType": "Block",
													"src": "6642:189:6",
													"statements": [
														{
															"assignments": [
																857
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 857,
																	"mutability": "mutable",
																	"name": "chr",
																	"nameLocation": "6662:3:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 884,
																	"src": "6656:9:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 856,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "6656:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 867,
															"initialValue": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 862,
																						"name": "buffer",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 836,
																						"src": "6711:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					},
																					{
																						"id": 863,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 847,
																						"src": "6719:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 861,
																					"name": "_unsafeReadBytesOffset",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1583,
																					"src": "6688:22:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
																						"typeString": "function (bytes memory,uint256) pure returns (bytes32)"
																					}
																				},
																				"id": 864,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6688:33:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			],
																			"id": 860,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6681:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes1_$",
																				"typeString": "type(bytes1)"
																			},
																			"typeName": {
																				"id": 859,
																				"name": "bytes1",
																				"nodeType": "ElementaryTypeName",
																				"src": "6681:6:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 865,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6681:41:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes1",
																			"typeString": "bytes1"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes1",
																			"typeString": "bytes1"
																		}
																	],
																	"id": 858,
																	"name": "_tryParseChr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1571,
																	"src": "6668:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$",
																		"typeString": "function (bytes1) pure returns (uint8)"
																	}
																},
																"id": 866,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6668:55:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6656:67:6"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 870,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 868,
																	"name": "chr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 857,
																	"src": "6741:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "39",
																	"id": 869,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6747:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_9_by_1",
																		"typeString": "int_const 9"
																	},
																	"value": "9"
																},
																"src": "6741:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 875,
															"nodeType": "IfStatement",
															"src": "6737:30:6",
															"trueBody": {
																"expression": {
																	"components": [
																		{
																			"hexValue": "66616c7365",
																			"id": 871,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6758:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "false"
																		},
																		{
																			"hexValue": "30",
																			"id": 872,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6765:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"id": 873,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "6757:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																		"typeString": "tuple(bool,int_const 0)"
																	}
																},
																"functionReturnParameters": 834,
																"id": 874,
																"nodeType": "Return",
																"src": "6750:17:6"
															}
														},
														{
															"expression": {
																"id": 878,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 876,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 843,
																	"src": "6781:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "*=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 877,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6791:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "6781:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 879,
															"nodeType": "ExpressionStatement",
															"src": "6781:12:6"
														},
														{
															"expression": {
																"id": 882,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 880,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 843,
																	"src": "6807:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 881,
																	"name": "chr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 857,
																	"src": "6817:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "6807:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 883,
															"nodeType": "ExpressionStatement",
															"src": "6807:13:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 850,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 847,
														"src": "6628:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 851,
														"name": "end",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 828,
														"src": "6632:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6628:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 885,
												"initializationExpression": {
													"assignments": [
														847
													],
													"declarations": [
														{
															"constant": false,
															"id": 847,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6617:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 885,
															"src": "6609:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 846,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6609:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 849,
													"initialValue": {
														"id": 848,
														"name": "begin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "6621:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6609:17:6"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 854,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "6637:3:6",
														"subExpression": {
															"id": 853,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 847,
															"src": "6639:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 855,
													"nodeType": "ExpressionStatement",
													"src": "6637:3:6"
												},
												"nodeType": "ForStatement",
												"src": "6604:227:6"
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 886,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6848:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"id": 887,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 843,
															"src": "6854:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 888,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "6847:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 834,
												"id": 889,
												"nodeType": "Return",
												"src": "6840:21:6"
											}
										]
									},
									"documentation": {
										"id": 822,
										"nodeType": "StructuredDocumentation",
										"src": "6147:201:6",
										"text": " @dev Implementation of {tryParseUint} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."
									},
									"id": 891,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_tryParseUintUncheckedBounds",
									"nameLocation": "6362:28:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "input",
												"nameLocation": "6414:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "6400:19:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 823,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6400:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "begin",
												"nameLocation": "6437:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "6429:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 825,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6429:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "end",
												"nameLocation": "6460:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "6452:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 827,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6452:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6390:79:6"
									},
									"returnParameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "6497:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "6492:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 830,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6492:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6514:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "6506:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6506:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6491:29:6"
									},
									"scope": 1584,
									"src": "6353:515:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 909,
										"nodeType": "Block",
										"src": "7165:63:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 900,
															"name": "input",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 894,
															"src": "7191:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"hexValue": "30",
															"id": 901,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7198:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 904,
																		"name": "input",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 894,
																		"src": "7207:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 903,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7201:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 902,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "7201:5:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 905,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7201:12:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7214:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "7201:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 899,
														"name": "parseInt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															910,
															941
														],
														"referencedDeclaration": 941,
														"src": "7182:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$",
															"typeString": "function (string memory,uint256,uint256) pure returns (int256)"
														}
													},
													"id": 907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7182:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 898,
												"id": 908,
												"nodeType": "Return",
												"src": "7175:46:6"
											}
										]
									},
									"documentation": {
										"id": 892,
										"nodeType": "StructuredDocumentation",
										"src": "6874:216:6",
										"text": " @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."
									},
									"id": 910,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "parseInt",
									"nameLocation": "7104:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "input",
												"nameLocation": "7127:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "7113:19:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7113:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7112:21:6"
									},
									"returnParameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "7157:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 896,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "7157:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7156:8:6"
									},
									"scope": 1584,
									"src": "7095:133:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 940,
										"nodeType": "Block",
										"src": "7633:151:6",
										"statements": [
											{
												"assignments": [
													923,
													925
												],
												"declarations": [
													{
														"constant": false,
														"id": 923,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7649:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 940,
														"src": "7644:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 922,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7644:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 925,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "7665:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 940,
														"src": "7658:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 924,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "7658:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 931,
												"initialValue": {
													"arguments": [
														{
															"id": 927,
															"name": "input",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 913,
															"src": "7686:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 928,
															"name": "begin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "7693:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 929,
															"name": "end",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 917,
															"src": "7700:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 926,
														"name": "tryParseInt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															962,
															1004
														],
														"referencedDeclaration": 1004,
														"src": "7674:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$",
															"typeString": "function (string memory,uint256,uint256) pure returns (bool,int256)"
														}
													},
													"id": 930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7674:30:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_int256_$",
														"typeString": "tuple(bool,int256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7643:61:6"
											},
											{
												"condition": {
													"id": 933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7718:8:6",
													"subExpression": {
														"id": 932,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 923,
														"src": "7719:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 937,
												"nodeType": "IfStatement",
												"src": "7714:41:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 934,
															"name": "StringsInvalidChar",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "7735:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 935,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7735:20:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 936,
													"nodeType": "RevertStatement",
													"src": "7728:27:6"
												}
											},
											{
												"expression": {
													"id": 938,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 925,
													"src": "7772:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 921,
												"id": 939,
												"nodeType": "Return",
												"src": "7765:12:6"
											}
										]
									},
									"documentation": {
										"id": 911,
										"nodeType": "StructuredDocumentation",
										"src": "7234:296:6",
										"text": " @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."
									},
									"id": 941,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "parseInt",
									"nameLocation": "7544:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "input",
												"nameLocation": "7567:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "7553:19:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 912,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7553:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "begin",
												"nameLocation": "7582:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "7574:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7574:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "end",
												"nameLocation": "7597:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "7589:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7589:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7552:49:6"
									},
									"returnParameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "7625:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 919,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "7625:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7624:8:6"
									},
									"scope": 1584,
									"src": "7535:249:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 961,
										"nodeType": "Block",
										"src": "8175:82:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 952,
															"name": "input",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 944,
															"src": "8220:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"hexValue": "30",
															"id": 953,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8227:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 956,
																		"name": "input",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 944,
																		"src": "8236:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 955,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8230:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 954,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "8230:5:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 957,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8230:12:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 958,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8243:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8230:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 951,
														"name": "_tryParseIntUncheckedBounds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1125,
														"src": "8192:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$",
															"typeString": "function (string memory,uint256,uint256) pure returns (bool,int256)"
														}
													},
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8192:58:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_int256_$",
														"typeString": "tuple(bool,int256)"
													}
												},
												"functionReturnParameters": 950,
												"id": 960,
												"nodeType": "Return",
												"src": "8185:65:6"
											}
										]
									},
									"documentation": {
										"id": 942,
										"nodeType": "StructuredDocumentation",
										"src": "7790:287:6",
										"text": " @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."
									},
									"id": 962,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryParseInt",
									"nameLocation": "8091:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "input",
												"nameLocation": "8117:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "8103:19:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 943,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8103:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8102:21:6"
									},
									"returnParameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8152:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "8147:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 946,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8147:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8168:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "8161:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 948,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "8161:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8146:28:6"
									},
									"scope": 1584,
									"src": "8082:175:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 967,
									"mutability": "constant",
									"name": "ABS_MIN_INT256",
									"nameLocation": "8288:14:6",
									"nodeType": "VariableDeclaration",
									"scope": 1584,
									"src": "8263:50:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 963,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8263:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
											"typeString": "int_const 5789...(69 digits omitted)...9968"
										},
										"id": 966,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "32",
											"id": 964,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "8305:1:6",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_2_by_1",
												"typeString": "int_const 2"
											},
											"value": "2"
										},
										"nodeType": "BinaryOperation",
										"operator": "**",
										"rightExpression": {
											"hexValue": "323535",
											"id": 965,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "8310:3:6",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_255_by_1",
												"typeString": "int_const 255"
											},
											"value": "255"
										},
										"src": "8305:8:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
											"typeString": "int_const 5789...(69 digits omitted)...9968"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1003,
										"nodeType": "Block",
										"src": "8779:143:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 987,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 981,
															"name": "end",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 974,
															"src": "8793:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 984,
																		"name": "input",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 970,
																		"src": "8805:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 983,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8799:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 982,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "8799:5:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 985,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8799:12:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 986,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8812:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8799:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8793:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 990,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 988,
															"name": "begin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 972,
															"src": "8822:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 989,
															"name": "end",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 974,
															"src": "8830:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8822:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8793:40:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 996,
												"nodeType": "IfStatement",
												"src": "8789:63:6",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 992,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8843:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 993,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8850:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 994,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8842:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 980,
													"id": 995,
													"nodeType": "Return",
													"src": "8835:17:6"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 998,
															"name": "input",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "8897:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 999,
															"name": "begin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 972,
															"src": "8904:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1000,
															"name": "end",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 974,
															"src": "8911:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 997,
														"name": "_tryParseIntUncheckedBounds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1125,
														"src": "8869:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$",
															"typeString": "function (string memory,uint256,uint256) pure returns (bool,int256)"
														}
													},
													"id": 1001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8869:46:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_int256_$",
														"typeString": "tuple(bool,int256)"
													}
												},
												"functionReturnParameters": 980,
												"id": 1002,
												"nodeType": "Return",
												"src": "8862:53:6"
											}
										]
									},
									"documentation": {
										"id": 968,
										"nodeType": "StructuredDocumentation",
										"src": "8320:303:6",
										"text": " @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."
									},
									"id": 1004,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryParseInt",
									"nameLocation": "8637:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "input",
												"nameLocation": "8672:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "8658:19:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 969,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8658:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "begin",
												"nameLocation": "8695:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "8687:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 971,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8687:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "end",
												"nameLocation": "8718:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "8710:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 973,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8710:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8648:79:6"
									},
									"returnParameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8756:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "8751:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 976,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8751:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8772:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "8765:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 978,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "8765:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8750:28:6"
									},
									"scope": 1584,
									"src": "8628:294:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1124,
										"nodeType": "Block",
										"src": "9299:812:6",
										"statements": [
											{
												"assignments": [
													1019
												],
												"declarations": [
													{
														"constant": false,
														"id": 1019,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "9322:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1124,
														"src": "9309:19:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1018,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "9309:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1024,
												"initialValue": {
													"arguments": [
														{
															"id": 1022,
															"name": "input",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1007,
															"src": "9337:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1021,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9331:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": {
															"id": 1020,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "9331:5:6",
															"typeDescriptions": {}
														}
													},
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9331:12:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9309:34:6"
											},
											{
												"assignments": [
													1026
												],
												"declarations": [
													{
														"constant": false,
														"id": 1026,
														"mutability": "mutable",
														"name": "sign",
														"nameLocation": "9407:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1124,
														"src": "9400:11:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														},
														"typeName": {
															"id": 1025,
															"name": "bytes1",
															"nodeType": "ElementaryTypeName",
															"src": "9400:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes1",
																"typeString": "bytes1"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1042,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1029,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1027,
															"name": "begin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1009,
															"src": "9414:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1028,
															"name": "end",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1011,
															"src": "9423:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9414:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1037,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1019,
																		"src": "9471:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1038,
																		"name": "begin",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1009,
																		"src": "9479:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1036,
																	"name": "_unsafeReadBytesOffset",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1583,
																	"src": "9448:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory,uint256) pure returns (bytes32)"
																	}
																},
																"id": 1039,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9448:37:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 1035,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9441:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_bytes1_$",
																"typeString": "type(bytes1)"
															},
															"typeName": {
																"id": 1034,
																"name": "bytes1",
																"nodeType": "ElementaryTypeName",
																"src": "9441:6:6",
																"typeDescriptions": {}
															}
														},
														"id": 1040,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9441:45:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"id": 1041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "9414:72:6",
													"trueExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1032,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9436:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1031,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9429:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_bytes1_$",
																"typeString": "type(bytes1)"
															},
															"typeName": {
																"id": 1030,
																"name": "bytes1",
																"nodeType": "ElementaryTypeName",
																"src": "9429:6:6",
																"typeDescriptions": {}
															}
														},
														"id": 1033,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9429:9:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9400:86:6"
											},
											{
												"assignments": [
													1044
												],
												"declarations": [
													{
														"constant": false,
														"id": 1044,
														"mutability": "mutable",
														"name": "positiveSign",
														"nameLocation": "9572:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1124,
														"src": "9567:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1043,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9567:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1051,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													},
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1045,
														"name": "sign",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1026,
														"src": "9587:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "2b",
																"id": 1048,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9602:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8",
																	"typeString": "literal_string \"+\""
																},
																"value": "+"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8",
																	"typeString": "literal_string \"+\""
																}
															],
															"id": 1047,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9595:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_bytes1_$",
																"typeString": "type(bytes1)"
															},
															"typeName": {
																"id": 1046,
																"name": "bytes1",
																"nodeType": "ElementaryTypeName",
																"src": "9595:6:6",
																"typeDescriptions": {}
															}
														},
														"id": 1049,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9595:11:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"src": "9587:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9567:39:6"
											},
											{
												"assignments": [
													1053
												],
												"declarations": [
													{
														"constant": false,
														"id": 1053,
														"mutability": "mutable",
														"name": "negativeSign",
														"nameLocation": "9621:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1124,
														"src": "9616:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1052,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9616:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1060,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													},
													"id": 1059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1054,
														"name": "sign",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1026,
														"src": "9636:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "2d",
																"id": 1057,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9651:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																}
															],
															"id": 1056,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9644:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_bytes1_$",
																"typeString": "type(bytes1)"
															},
															"typeName": {
																"id": 1055,
																"name": "bytes1",
																"nodeType": "ElementaryTypeName",
																"src": "9644:6:6",
																"typeDescriptions": {}
															}
														},
														"id": 1058,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9644:11:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"src": "9636:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9616:39:6"
											},
											{
												"assignments": [
													1062
												],
												"declarations": [
													{
														"constant": false,
														"id": 1062,
														"mutability": "mutable",
														"name": "offset",
														"nameLocation": "9673:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1124,
														"src": "9665:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1061,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9665:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1069,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1065,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1063,
																		"name": "positiveSign",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1044,
																		"src": "9683:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"id": 1064,
																		"name": "negativeSign",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1053,
																		"src": "9699:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "9683:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 1066,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "9682:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1067,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9713:6:6",
														"memberName": "toUint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4966,
														"src": "9682:37:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$",
															"typeString": "function (bool) pure returns (uint256)"
														}
													},
													"id": 1068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9682:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9665:56:6"
											},
											{
												"assignments": [
													1071,
													1073
												],
												"declarations": [
													{
														"constant": false,
														"id": 1071,
														"mutability": "mutable",
														"name": "absSuccess",
														"nameLocation": "9738:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1124,
														"src": "9733:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1070,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9733:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1073,
														"mutability": "mutable",
														"name": "absValue",
														"nameLocation": "9758:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 1124,
														"src": "9750:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1072,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9750:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1081,
												"initialValue": {
													"arguments": [
														{
															"id": 1075,
															"name": "input",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1007,
															"src": "9783:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1078,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1076,
																"name": "begin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1009,
																"src": "9790:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1077,
																"name": "offset",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1062,
																"src": "9798:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9790:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1079,
															"name": "end",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1011,
															"src": "9806:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1074,
														"name": "tryParseUint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															784,
															821
														],
														"referencedDeclaration": 821,
														"src": "9770:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
															"typeString": "function (string memory,uint256,uint256) pure returns (bool,uint256)"
														}
													},
													"id": 1080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9770:40:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9732:78:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1082,
														"name": "absSuccess",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1071,
														"src": "9825:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1085,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1083,
															"name": "absValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "9839:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1084,
															"name": "ABS_MIN_INT256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "9850:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9839:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9825:39:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1108,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1102,
																"name": "absSuccess",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1071,
																"src": "9967:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"id": 1103,
																"name": "negativeSign",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1053,
																"src": "9981:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "9967:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1105,
																"name": "absValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1073,
																"src": "9997:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1106,
																"name": "ABS_MIN_INT256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 967,
																"src": "10009:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9997:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "9967:56:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"expression": {
															"components": [
																{
																	"hexValue": "66616c7365",
																	"id": 1118,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10095:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																{
																	"hexValue": "30",
																	"id": 1119,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10102:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"id": 1120,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "10094:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																"typeString": "tuple(bool,int_const 0)"
															}
														},
														"functionReturnParameters": 1017,
														"id": 1121,
														"nodeType": "Return",
														"src": "10087:17:6"
													},
													"id": 1122,
													"nodeType": "IfStatement",
													"src": "9963:141:6",
													"trueBody": {
														"id": 1117,
														"nodeType": "Block",
														"src": "10025:56:6",
														"statements": [
															{
																"expression": {
																	"components": [
																		{
																			"hexValue": "74727565",
																			"id": 1109,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10047:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		},
																		{
																			"expression": {
																				"arguments": [
																					{
																						"id": 1112,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "10058:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_int256_$",
																							"typeString": "type(int256)"
																						},
																						"typeName": {
																							"id": 1111,
																							"name": "int256",
																							"nodeType": "ElementaryTypeName",
																							"src": "10058:6:6",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_type$_t_int256_$",
																							"typeString": "type(int256)"
																						}
																					],
																					"id": 1110,
																					"name": "type",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967269,
																					"src": "10053:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																						"typeString": "function () pure"
																					}
																				},
																				"id": 1113,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10053:12:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_meta_type_t_int256",
																					"typeString": "type(int256)"
																				}
																			},
																			"id": 1114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "10066:3:6",
																			"memberName": "min",
																			"nodeType": "MemberAccess",
																			"src": "10053:16:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 1115,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10046:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_bool_$_t_int256_$",
																		"typeString": "tuple(bool,int256)"
																	}
																},
																"functionReturnParameters": 1017,
																"id": 1116,
																"nodeType": "Return",
																"src": "10039:31:6"
															}
														]
													}
												},
												"id": 1123,
												"nodeType": "IfStatement",
												"src": "9821:283:6",
												"trueBody": {
													"id": 1101,
													"nodeType": "Block",
													"src": "9866:91:6",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1087,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9888:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"condition": {
																			"id": 1088,
																			"name": "negativeSign",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1053,
																			"src": "9894:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"arguments": [
																				{
																					"id": 1096,
																					"name": "absValue",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1073,
																					"src": "9936:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1095,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "9929:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int256_$",
																					"typeString": "type(int256)"
																				},
																				"typeName": {
																					"id": 1094,
																					"name": "int256",
																					"nodeType": "ElementaryTypeName",
																					"src": "9929:6:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1097,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9929:16:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"id": 1098,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "9894:51:6",
																		"trueExpression": {
																			"id": 1093,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "-",
																			"prefix": true,
																			"src": "9909:17:6",
																			"subExpression": {
																				"arguments": [
																					{
																						"id": 1091,
																						"name": "absValue",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1073,
																						"src": "9917:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 1090,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "9910:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_int256_$",
																						"typeString": "type(int256)"
																					},
																					"typeName": {
																						"id": 1089,
																						"name": "int256",
																						"nodeType": "ElementaryTypeName",
																						"src": "9910:6:6",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1092,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9910:16:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"id": 1099,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9887:59:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_int256_$",
																	"typeString": "tuple(bool,int256)"
																}
															},
															"functionReturnParameters": 1017,
															"id": 1100,
															"nodeType": "Return",
															"src": "9880:66:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1005,
										"nodeType": "StructuredDocumentation",
										"src": "8928:200:6",
										"text": " @dev Implementation of {tryParseInt} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."
									},
									"id": 1125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_tryParseIntUncheckedBounds",
									"nameLocation": "9142:27:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "input",
												"nameLocation": "9193:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "9179:19:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1006,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9179:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "begin",
												"nameLocation": "9216:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "9208:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1008,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9208:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "end",
												"nameLocation": "9239:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "9231:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1010,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9231:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9169:79:6"
									},
									"returnParameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "9276:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "9271:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1013,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9271:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9292:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "9285:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1015,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "9285:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9270:28:6"
									},
									"scope": 1584,
									"src": "9133:978:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1143,
										"nodeType": "Block",
										"src": "10456:67:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1134,
															"name": "input",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1128,
															"src": "10486:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1135,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10493:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1138,
																		"name": "input",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1128,
																		"src": "10502:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1137,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10496:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1136,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "10496:5:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1139,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10496:12:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10509:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "10496:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1133,
														"name": "parseHexUint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1144,
															1175
														],
														"referencedDeclaration": 1175,
														"src": "10473:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (string memory,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10473:43:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1132,
												"id": 1142,
												"nodeType": "Return",
												"src": "10466:50:6"
											}
										]
									},
									"documentation": {
										"id": 1126,
										"nodeType": "StructuredDocumentation",
										"src": "10117:259:6",
										"text": " @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."
									},
									"id": 1144,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "parseHexUint",
									"nameLocation": "10390:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "input",
												"nameLocation": "10417:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "10403:19:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1127,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10403:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10402:21:6"
									},
									"returnParameters": {
										"id": 1132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "10447:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10447:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10446:9:6"
									},
									"scope": 1584,
									"src": "10381:142:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1174,
										"nodeType": "Block",
										"src": "10937:156:6",
										"statements": [
											{
												"assignments": [
													1157,
													1159
												],
												"declarations": [
													{
														"constant": false,
														"id": 1157,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "10953:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1174,
														"src": "10948:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1156,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "10948:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1159,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "10970:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 1174,
														"src": "10962:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1158,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10962:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1165,
												"initialValue": {
													"arguments": [
														{
															"id": 1161,
															"name": "input",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "10995:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 1162,
															"name": "begin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1149,
															"src": "11002:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1163,
															"name": "end",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1151,
															"src": "11009:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1160,
														"name": "tryParseHexUint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1196,
															1233
														],
														"referencedDeclaration": 1233,
														"src": "10979:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
															"typeString": "function (string memory,uint256,uint256) pure returns (bool,uint256)"
														}
													},
													"id": 1164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10979:34:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10947:66:6"
											},
											{
												"condition": {
													"id": 1167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "11027:8:6",
													"subExpression": {
														"id": 1166,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1157,
														"src": "11028:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1171,
												"nodeType": "IfStatement",
												"src": "11023:41:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1168,
															"name": "StringsInvalidChar",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "11044:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1169,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11044:20:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1170,
													"nodeType": "RevertStatement",
													"src": "11037:27:6"
												}
											},
											{
												"expression": {
													"id": 1172,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1159,
													"src": "11081:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1155,
												"id": 1173,
												"nodeType": "Return",
												"src": "11074:12:6"
											}
										]
									},
									"documentation": {
										"id": 1145,
										"nodeType": "StructuredDocumentation",
										"src": "10529:300:6",
										"text": " @dev Variant of {parseHexUint} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."
									},
									"id": 1175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "parseHexUint",
									"nameLocation": "10843:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "input",
												"nameLocation": "10870:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "10856:19:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1146,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10856:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "begin",
												"nameLocation": "10885:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "10877:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10877:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "end",
												"nameLocation": "10900:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "10892:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10892:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10855:49:6"
									},
									"returnParameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "10928:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10928:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10927:9:6"
									},
									"scope": 1584,
									"src": "10834:259:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1195,
										"nodeType": "Block",
										"src": "11420:86:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1186,
															"name": "input",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1178,
															"src": "11469:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1187,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11476:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1190,
																		"name": "input",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1178,
																		"src": "11485:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1189,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11479:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1188,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "11479:5:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1191,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11479:12:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11492:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "11479:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1185,
														"name": "_tryParseHexUintUncheckedBounds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1336,
														"src": "11437:31:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
															"typeString": "function (string memory,uint256,uint256) pure returns (bool,uint256)"
														}
													},
													"id": 1193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11437:62:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 1184,
												"id": 1194,
												"nodeType": "Return",
												"src": "11430:69:6"
											}
										]
									},
									"documentation": {
										"id": 1176,
										"nodeType": "StructuredDocumentation",
										"src": "11099:218:6",
										"text": " @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."
									},
									"id": 1196,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryParseHexUint",
									"nameLocation": "11331:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1178,
												"mutability": "mutable",
												"name": "input",
												"nameLocation": "11361:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "11347:19:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1177,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11347:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11346:21:6"
									},
									"returnParameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "11396:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "11391:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1180,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11391:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11413:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "11405:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11405:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11390:29:6"
									},
									"scope": 1584,
									"src": "11322:184:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1232,
										"nodeType": "Block",
										"src": "11914:147:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1216,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1210,
															"name": "end",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1203,
															"src": "11928:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1213,
																		"name": "input",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1199,
																		"src": "11940:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1212,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11934:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1211,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "11934:5:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1214,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11934:12:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11947:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "11934:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "11928:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1219,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1217,
															"name": "begin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1201,
															"src": "11957:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1218,
															"name": "end",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1203,
															"src": "11965:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "11957:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "11928:40:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1225,
												"nodeType": "IfStatement",
												"src": "11924:63:6",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 1221,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11978:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 1222,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11985:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 1223,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "11977:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 1209,
													"id": 1224,
													"nodeType": "Return",
													"src": "11970:17:6"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1227,
															"name": "input",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1199,
															"src": "12036:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 1228,
															"name": "begin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1201,
															"src": "12043:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1229,
															"name": "end",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1203,
															"src": "12050:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1226,
														"name": "_tryParseHexUintUncheckedBounds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1336,
														"src": "12004:31:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
															"typeString": "function (string memory,uint256,uint256) pure returns (bool,uint256)"
														}
													},
													"id": 1230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12004:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 1209,
												"id": 1231,
												"nodeType": "Return",
												"src": "11997:57:6"
											}
										]
									},
									"documentation": {
										"id": 1197,
										"nodeType": "StructuredDocumentation",
										"src": "11512:241:6",
										"text": " @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."
									},
									"id": 1233,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryParseHexUint",
									"nameLocation": "11767:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "input",
												"nameLocation": "11806:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "11792:19:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1198,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11792:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "begin",
												"nameLocation": "11829:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "11821:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11821:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "end",
												"nameLocation": "11852:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "11844:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11844:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11782:79:6"
									},
									"returnParameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1206,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "11890:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "11885:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1205,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11885:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11907:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "11899:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11899:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11884:29:6"
									},
									"scope": 1584,
									"src": "11758:303:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1335,
										"nodeType": "Block",
										"src": "12447:880:6",
										"statements": [
											{
												"assignments": [
													1248
												],
												"declarations": [
													{
														"constant": false,
														"id": 1248,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "12470:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1335,
														"src": "12457:19:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1247,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "12457:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1253,
												"initialValue": {
													"arguments": [
														{
															"id": 1251,
															"name": "input",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1236,
															"src": "12485:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1250,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12479:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": {
															"id": 1249,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "12479:5:6",
															"typeDescriptions": {}
														}
													},
													"id": 1252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12479:12:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12457:34:6"
											},
											{
												"assignments": [
													1255
												],
												"declarations": [
													{
														"constant": false,
														"id": 1255,
														"mutability": "mutable",
														"name": "hasPrefix",
														"nameLocation": "12544:9:6",
														"nodeType": "VariableDeclaration",
														"scope": 1335,
														"src": "12539:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1254,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "12539:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1275,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1260,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1256,
																	"name": "end",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1240,
																	"src": "12557:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1257,
																		"name": "begin",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1238,
																		"src": "12563:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1258,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12571:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "12563:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12557:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1261,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "12556:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes2",
															"typeString": "bytes2"
														},
														"id": 1273,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1265,
																			"name": "buffer",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1248,
																			"src": "12607:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		{
																			"id": 1266,
																			"name": "begin",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1238,
																			"src": "12615:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1264,
																		"name": "_unsafeReadBytesOffset",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1583,
																		"src": "12584:22:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory,uint256) pure returns (bytes32)"
																		}
																	},
																	"id": 1267,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12584:37:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 1263,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12577:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes2_$",
																	"typeString": "type(bytes2)"
																},
																"typeName": {
																	"id": 1262,
																	"name": "bytes2",
																	"nodeType": "ElementaryTypeName",
																	"src": "12577:6:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12577:45:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes2",
																"typeString": "bytes2"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "3078",
																	"id": 1271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12633:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837",
																		"typeString": "literal_string \"0x\""
																	},
																	"value": "0x"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837",
																		"typeString": "literal_string \"0x\""
																	}
																],
																"id": 1270,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12626:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes2_$",
																	"typeString": "type(bytes2)"
																},
																"typeName": {
																	"id": 1269,
																	"name": "bytes2",
																	"nodeType": "ElementaryTypeName",
																	"src": "12626:6:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1272,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12626:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes2",
																"typeString": "bytes2"
															}
														},
														"src": "12577:61:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "12556:82:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12539:99:6"
											},
											{
												"assignments": [
													1277
												],
												"declarations": [
													{
														"constant": false,
														"id": 1277,
														"mutability": "mutable",
														"name": "offset",
														"nameLocation": "12727:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1335,
														"src": "12719:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1276,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12719:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1283,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 1278,
																"name": "hasPrefix",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1255,
																"src": "12736:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12746:6:6",
															"memberName": "toUint",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4966,
															"src": "12736:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$",
																"typeString": "function (bool) pure returns (uint256)"
															}
														},
														"id": 1280,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12736:18:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "32",
														"id": 1281,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12757:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "12736:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12719:39:6"
											},
											{
												"assignments": [
													1285
												],
												"declarations": [
													{
														"constant": false,
														"id": 1285,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12777:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1335,
														"src": "12769:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1284,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12769:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1287,
												"initialValue": {
													"hexValue": "30",
													"id": 1286,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12786:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12769:18:6"
											},
											{
												"body": {
													"id": 1329,
													"nodeType": "Block",
													"src": "12844:446:6",
													"statements": [
														{
															"assignments": [
																1301
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1301,
																	"mutability": "mutable",
																	"name": "chr",
																	"nameLocation": "12864:3:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1329,
																	"src": "12858:9:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 1300,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "12858:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1311,
															"initialValue": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 1306,
																						"name": "buffer",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1248,
																						"src": "12913:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					},
																					{
																						"id": 1307,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1289,
																						"src": "12921:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 1305,
																					"name": "_unsafeReadBytesOffset",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1583,
																					"src": "12890:22:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
																						"typeString": "function (bytes memory,uint256) pure returns (bytes32)"
																					}
																				},
																				"id": 1308,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12890:33:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			],
																			"id": 1304,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12883:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes1_$",
																				"typeString": "type(bytes1)"
																			},
																			"typeName": {
																				"id": 1303,
																				"name": "bytes1",
																				"nodeType": "ElementaryTypeName",
																				"src": "12883:6:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1309,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12883:41:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes1",
																			"typeString": "bytes1"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes1",
																			"typeString": "bytes1"
																		}
																	],
																	"id": 1302,
																	"name": "_tryParseChr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1571,
																	"src": "12870:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$",
																		"typeString": "function (bytes1) pure returns (uint8)"
																	}
																},
																"id": 1310,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12870:55:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12858:67:6"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 1314,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1312,
																	"name": "chr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1301,
																	"src": "12943:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "3135",
																	"id": 1313,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12949:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_15_by_1",
																		"typeString": "int_const 15"
																	},
																	"value": "15"
																},
																"src": "12943:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1319,
															"nodeType": "IfStatement",
															"src": "12939:31:6",
															"trueBody": {
																"expression": {
																	"components": [
																		{
																			"hexValue": "66616c7365",
																			"id": 1315,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12961:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "false"
																		},
																		{
																			"hexValue": "30",
																			"id": 1316,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12968:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"id": 1317,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "12960:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																		"typeString": "tuple(bool,int_const 0)"
																	}
																},
																"functionReturnParameters": 1246,
																"id": 1318,
																"nodeType": "Return",
																"src": "12953:17:6"
															}
														},
														{
															"expression": {
																"id": 1322,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1320,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1285,
																	"src": "12984:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "*=",
																"rightHandSide": {
																	"hexValue": "3136",
																	"id": 1321,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12994:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12984:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1323,
															"nodeType": "ExpressionStatement",
															"src": "12984:12:6"
														},
														{
															"id": 1328,
															"nodeType": "UncheckedBlock",
															"src": "13010:270:6",
															"statements": [
																{
																	"expression": {
																		"id": 1326,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1324,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1285,
																			"src": "13252:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 1325,
																			"name": "chr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1301,
																			"src": "13262:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "13252:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1327,
																	"nodeType": "ExpressionStatement",
																	"src": "13252:13:6"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1294,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1289,
														"src": "12830:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1295,
														"name": "end",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1240,
														"src": "12834:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12830:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1330,
												"initializationExpression": {
													"assignments": [
														1289
													],
													"declarations": [
														{
															"constant": false,
															"id": 1289,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "12810:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 1330,
															"src": "12802:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1288,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12802:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1293,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1292,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1290,
															"name": "begin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1238,
															"src": "12814:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1291,
															"name": "offset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1277,
															"src": "12822:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "12814:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "12802:26:6"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1298,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "12839:3:6",
														"subExpression": {
															"id": 1297,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1289,
															"src": "12841:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1299,
													"nodeType": "ExpressionStatement",
													"src": "12839:3:6"
												},
												"nodeType": "ForStatement",
												"src": "12797:493:6"
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 1331,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13307:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"id": 1332,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1285,
															"src": "13313:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1333,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "13306:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 1246,
												"id": 1334,
												"nodeType": "Return",
												"src": "13299:21:6"
											}
										]
									},
									"documentation": {
										"id": 1234,
										"nodeType": "StructuredDocumentation",
										"src": "12067:204:6",
										"text": " @dev Implementation of {tryParseHexUint} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."
									},
									"id": 1336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_tryParseHexUintUncheckedBounds",
									"nameLocation": "12285:31:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "input",
												"nameLocation": "12340:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "12326:19:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1235,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12326:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "begin",
												"nameLocation": "12363:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "12355:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12355:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "end",
												"nameLocation": "12386:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "12378:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12378:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12316:79:6"
									},
									"returnParameters": {
										"id": 1246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "12423:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "12418:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1242,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12418:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12440:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "12432:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12432:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12417:29:6"
									},
									"scope": 1584,
									"src": "12276:1051:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1354,
										"nodeType": "Block",
										"src": "13625:67:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1345,
															"name": "input",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1339,
															"src": "13655:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13662:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1349,
																		"name": "input",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1339,
																		"src": "13671:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1348,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13665:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1347,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "13665:5:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1350,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13665:12:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13678:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "13665:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1344,
														"name": "parseAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1355,
															1386
														],
														"referencedDeclaration": 1386,
														"src": "13642:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$",
															"typeString": "function (string memory,uint256,uint256) pure returns (address)"
														}
													},
													"id": 1352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13642:43:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1343,
												"id": 1353,
												"nodeType": "Return",
												"src": "13635:50:6"
											}
										]
									},
									"documentation": {
										"id": 1337,
										"nodeType": "StructuredDocumentation",
										"src": "13333:212:6",
										"text": " @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"
									},
									"id": 1355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "parseAddress",
									"nameLocation": "13559:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "input",
												"nameLocation": "13586:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "13572:19:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1338,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13572:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13571:21:6"
									},
									"returnParameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "13616:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13616:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13615:9:6"
									},
									"scope": 1584,
									"src": "13550:142:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1385,
										"nodeType": "Block",
										"src": "14058:165:6",
										"statements": [
											{
												"assignments": [
													1368,
													1370
												],
												"declarations": [
													{
														"constant": false,
														"id": 1368,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "14074:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1385,
														"src": "14069:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1367,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "14069:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1370,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "14091:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 1385,
														"src": "14083:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1369,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14083:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1376,
												"initialValue": {
													"arguments": [
														{
															"id": 1372,
															"name": "input",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1358,
															"src": "14116:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 1373,
															"name": "begin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1360,
															"src": "14123:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1374,
															"name": "end",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1362,
															"src": "14130:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1371,
														"name": "tryParseAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1407,
															1511
														],
														"referencedDeclaration": 1511,
														"src": "14100:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$",
															"typeString": "function (string memory,uint256,uint256) pure returns (bool,address)"
														}
													},
													"id": 1375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14100:34:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_address_$",
														"typeString": "tuple(bool,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14068:66:6"
											},
											{
												"condition": {
													"id": 1378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "14148:8:6",
													"subExpression": {
														"id": 1377,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1368,
														"src": "14149:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1382,
												"nodeType": "IfStatement",
												"src": "14144:50:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1379,
															"name": "StringsInvalidAddressFormat",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "14165:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1380,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14165:29:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1381,
													"nodeType": "RevertStatement",
													"src": "14158:36:6"
												}
											},
											{
												"expression": {
													"id": 1383,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1370,
													"src": "14211:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1366,
												"id": 1384,
												"nodeType": "Return",
												"src": "14204:12:6"
											}
										]
									},
									"documentation": {
										"id": 1356,
										"nodeType": "StructuredDocumentation",
										"src": "13698:252:6",
										"text": " @dev Variant of {parseAddress} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"
									},
									"id": 1386,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "parseAddress",
									"nameLocation": "13964:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "input",
												"nameLocation": "13991:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "13977:19:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1357,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13977:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1360,
												"mutability": "mutable",
												"name": "begin",
												"nameLocation": "14006:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "13998:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13998:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "end",
												"nameLocation": "14021:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "14013:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14013:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13976:49:6"
									},
									"returnParameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "14049:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14049:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14048:9:6"
									},
									"scope": 1584,
									"src": "13955:268:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1406,
										"nodeType": "Block",
										"src": "14523:70:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1397,
															"name": "input",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1389,
															"src": "14556:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1398,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14563:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1401,
																		"name": "input",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1389,
																		"src": "14572:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14566:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1399,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "14566:5:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1402,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14566:12:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "14579:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "14566:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1396,
														"name": "tryParseAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1407,
															1511
														],
														"referencedDeclaration": 1511,
														"src": "14540:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$",
															"typeString": "function (string memory,uint256,uint256) pure returns (bool,address)"
														}
													},
													"id": 1404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14540:46:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_address_$",
														"typeString": "tuple(bool,address)"
													}
												},
												"functionReturnParameters": 1395,
												"id": 1405,
												"nodeType": "Return",
												"src": "14533:53:6"
											}
										]
									},
									"documentation": {
										"id": 1387,
										"nodeType": "StructuredDocumentation",
										"src": "14229:191:6",
										"text": " @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress} requirements."
									},
									"id": 1407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryParseAddress",
									"nameLocation": "14434:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "input",
												"nameLocation": "14464:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "14450:19:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1388,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "14450:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14449:21:6"
									},
									"returnParameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1392,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "14499:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "14494:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1391,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14494:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14516:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "14508:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1393,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14508:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14493:29:6"
									},
									"scope": 1584,
									"src": "14425:168:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1510,
										"nodeType": "Block",
										"src": "14963:733:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1427,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1421,
															"name": "end",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1414,
															"src": "14977:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1424,
																		"name": "input",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1410,
																		"src": "14989:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14983:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1422,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "14983:5:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1425,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14983:12:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1426,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "14996:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "14983:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "14977:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1430,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1428,
															"name": "begin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1412,
															"src": "15006:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1429,
															"name": "end",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1414,
															"src": "15014:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "15006:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14977:40:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1439,
												"nodeType": "IfStatement",
												"src": "14973:72:6",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 1432,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15027:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1435,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15042:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1434,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15034:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1433,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15034:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1436,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15034:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"id": 1437,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "15026:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_address_$",
															"typeString": "tuple(bool,address)"
														}
													},
													"functionReturnParameters": 1420,
													"id": 1438,
													"nodeType": "Return",
													"src": "15019:26:6"
												}
											},
											{
												"assignments": [
													1441
												],
												"declarations": [
													{
														"constant": false,
														"id": 1441,
														"mutability": "mutable",
														"name": "hasPrefix",
														"nameLocation": "15061:9:6",
														"nodeType": "VariableDeclaration",
														"scope": 1510,
														"src": "15056:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1440,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "15056:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1464,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1446,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1442,
																	"name": "end",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1414,
																	"src": "15074:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1445,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1443,
																		"name": "begin",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1412,
																		"src": "15080:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1444,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15088:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "15080:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15074:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1447,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "15073:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes2",
															"typeString": "bytes2"
														},
														"id": 1462,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1453,
																					"name": "input",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1410,
																					"src": "15130:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1452,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "15124:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																					"typeString": "type(bytes storage pointer)"
																				},
																				"typeName": {
																					"id": 1451,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "15124:5:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1454,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15124:12:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		{
																			"id": 1455,
																			"name": "begin",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1412,
																			"src": "15138:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1450,
																		"name": "_unsafeReadBytesOffset",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1583,
																		"src": "15101:22:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory,uint256) pure returns (bytes32)"
																		}
																	},
																	"id": 1456,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "15101:43:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 1449,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15094:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes2_$",
																	"typeString": "type(bytes2)"
																},
																"typeName": {
																	"id": 1448,
																	"name": "bytes2",
																	"nodeType": "ElementaryTypeName",
																	"src": "15094:6:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15094:51:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes2",
																"typeString": "bytes2"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "3078",
																	"id": 1460,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15156:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837",
																		"typeString": "literal_string \"0x\""
																	},
																	"value": "0x"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837",
																		"typeString": "literal_string \"0x\""
																	}
																],
																"id": 1459,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15149:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes2_$",
																	"typeString": "type(bytes2)"
																},
																"typeName": {
																	"id": 1458,
																	"name": "bytes2",
																	"nodeType": "ElementaryTypeName",
																	"src": "15149:6:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1461,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15149:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes2",
																"typeString": "bytes2"
															}
														},
														"src": "15094:67:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15073:88:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15056:105:6"
											},
											{
												"assignments": [
													1466
												],
												"declarations": [
													{
														"constant": false,
														"id": 1466,
														"mutability": "mutable",
														"name": "expectedLength",
														"nameLocation": "15250:14:6",
														"nodeType": "VariableDeclaration",
														"scope": 1510,
														"src": "15242:22:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1465,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "15242:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1474,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3430",
														"id": 1467,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15267:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_40_by_1",
															"typeString": "int_const 40"
														},
														"value": "40"
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1472,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 1468,
																	"name": "hasPrefix",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1441,
																	"src": "15272:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1469,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "15282:6:6",
																"memberName": "toUint",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4966,
																"src": "15272:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$",
																	"typeString": "function (bool) pure returns (uint256)"
																}
															},
															"id": 1470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15272:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "32",
															"id": 1471,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15293:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15272:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15267:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15242:52:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1477,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1475,
															"name": "end",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1414,
															"src": "15359:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1476,
															"name": "begin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1412,
															"src": "15365:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "15359:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1478,
														"name": "expectedLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1466,
														"src": "15374:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15359:29:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1508,
													"nodeType": "Block",
													"src": "15639:51:6",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1501,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15661:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1504,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "15676:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1503,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "15668:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1502,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "15668:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1505,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15668:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"id": 1506,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "15660:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_address_$",
																	"typeString": "tuple(bool,address)"
																}
															},
															"functionReturnParameters": 1420,
															"id": 1507,
															"nodeType": "Return",
															"src": "15653:26:6"
														}
													]
												},
												"id": 1509,
												"nodeType": "IfStatement",
												"src": "15355:335:6",
												"trueBody": {
													"id": 1500,
													"nodeType": "Block",
													"src": "15390:243:6",
													"statements": [
														{
															"assignments": [
																1481,
																1483
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1481,
																	"mutability": "mutable",
																	"name": "s",
																	"nameLocation": "15511:1:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1500,
																	"src": "15506:6:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 1480,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "15506:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 1483,
																	"mutability": "mutable",
																	"name": "v",
																	"nameLocation": "15522:1:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1500,
																	"src": "15514:9:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1482,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "15514:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1489,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1485,
																		"name": "input",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1410,
																		"src": "15559:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"id": 1486,
																		"name": "begin",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1412,
																		"src": "15566:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1487,
																		"name": "end",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1414,
																		"src": "15573:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1484,
																	"name": "_tryParseHexUintUncheckedBounds",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1336,
																	"src": "15527:31:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
																		"typeString": "function (string memory,uint256,uint256) pure returns (bool,uint256)"
																	}
																},
																"id": 1488,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15527:50:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																	"typeString": "tuple(bool,uint256)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "15505:72:6"
														},
														{
															"expression": {
																"components": [
																	{
																		"id": 1490,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1481,
																		"src": "15599:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 1495,
																						"name": "v",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1483,
																						"src": "15618:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 1494,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "15610:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint160_$",
																						"typeString": "type(uint160)"
																					},
																					"typeName": {
																						"id": 1493,
																						"name": "uint160",
																						"nodeType": "ElementaryTypeName",
																						"src": "15610:7:6",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1496,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "15610:10:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			],
																			"id": 1492,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "15602:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1491,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "15602:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1497,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15602:19:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"id": 1498,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "15598:24:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_address_$",
																	"typeString": "tuple(bool,address)"
																}
															},
															"functionReturnParameters": 1420,
															"id": 1499,
															"nodeType": "Return",
															"src": "15591:31:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1408,
										"nodeType": "StructuredDocumentation",
										"src": "14599:203:6",
										"text": " @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress} requirements."
									},
									"id": 1511,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryParseAddress",
									"nameLocation": "14816:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "input",
												"nameLocation": "14855:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1511,
												"src": "14841:19:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1409,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "14841:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "begin",
												"nameLocation": "14878:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1511,
												"src": "14870:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14870:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1414,
												"mutability": "mutable",
												"name": "end",
												"nameLocation": "14901:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1511,
												"src": "14893:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1413,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14893:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14831:79:6"
									},
									"returnParameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1417,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "14939:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1511,
												"src": "14934:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1416,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14934:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1419,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14956:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1511,
												"src": "14948:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14948:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14933:29:6"
									},
									"scope": 1584,
									"src": "14807:889:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1570,
										"nodeType": "Block",
										"src": "15765:461:6",
										"statements": [
											{
												"assignments": [
													1519
												],
												"declarations": [
													{
														"constant": false,
														"id": 1519,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "15781:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 1570,
														"src": "15775:11:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 1518,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "15775:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1524,
												"initialValue": {
													"arguments": [
														{
															"id": 1522,
															"name": "chr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1513,
															"src": "15795:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes1",
																"typeString": "bytes1"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes1",
																"typeString": "bytes1"
															}
														],
														"id": 1521,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "15789:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint8_$",
															"typeString": "type(uint8)"
														},
														"typeName": {
															"id": 1520,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "15789:5:6",
															"typeDescriptions": {}
														}
													},
													"id": 1523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15789:10:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15775:24:6"
											},
											{
												"id": 1567,
												"nodeType": "UncheckedBlock",
												"src": "15959:238:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 1527,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1525,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1519,
																	"src": "15987:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "3437",
																	"id": 1526,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15995:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_47_by_1",
																		"typeString": "int_const 47"
																	},
																	"value": "47"
																},
																"src": "15987:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 1530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1528,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1519,
																	"src": "16001:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "3538",
																	"id": 1529,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16009:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_58_by_1",
																		"typeString": "int_const 58"
																	},
																	"value": "58"
																},
																"src": "16001:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "15987:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1542,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"id": 1538,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1536,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1519,
																		"src": "16047:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "3936",
																		"id": 1537,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16055:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	"src": "16047:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"id": 1541,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1539,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1519,
																		"src": "16061:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"hexValue": "313033",
																		"id": 1540,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16069:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_103_by_1",
																			"typeString": "int_const 103"
																		},
																		"value": "103"
																	},
																	"src": "16061:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "16047:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		"id": 1549,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1547,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1519,
																			"src": "16108:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "3634",
																			"id": 1548,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "16116:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "16108:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		"id": 1552,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1550,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1519,
																			"src": "16122:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"hexValue": "3731",
																			"id": 1551,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "16130:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_71_by_1",
																				"typeString": "int_const 71"
																			},
																			"value": "71"
																		},
																		"src": "16122:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "16108:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"expression": {
																		"expression": {
																			"arguments": [
																				{
																					"id": 1560,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "16176:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					},
																					"typeName": {
																						"id": 1559,
																						"name": "uint8",
																						"nodeType": "ElementaryTypeName",
																						"src": "16176:5:6",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					}
																				],
																				"id": 1558,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "16171:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1561,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16171:11:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint8",
																				"typeString": "type(uint8)"
																			}
																		},
																		"id": 1562,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "16183:3:6",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "16171:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"functionReturnParameters": 1517,
																	"id": 1563,
																	"nodeType": "Return",
																	"src": "16164:22:6"
																},
																"id": 1564,
																"nodeType": "IfStatement",
																"src": "16104:82:6",
																"trueBody": {
																	"expression": {
																		"id": 1556,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1554,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1519,
																			"src": "16134:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "3535",
																			"id": 1555,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "16143:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_55_by_1",
																				"typeString": "int_const 55"
																			},
																			"value": "55"
																		},
																		"src": "16134:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 1557,
																	"nodeType": "ExpressionStatement",
																	"src": "16134:11:6"
																}
															},
															"id": 1565,
															"nodeType": "IfStatement",
															"src": "16043:143:6",
															"trueBody": {
																"expression": {
																	"id": 1545,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1543,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1519,
																		"src": "16074:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "-=",
																	"rightHandSide": {
																		"hexValue": "3837",
																		"id": 1544,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16083:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_87_by_1",
																			"typeString": "int_const 87"
																		},
																		"value": "87"
																	},
																	"src": "16074:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"id": 1546,
																"nodeType": "ExpressionStatement",
																"src": "16074:11:6"
															}
														},
														"id": 1566,
														"nodeType": "IfStatement",
														"src": "15983:203:6",
														"trueBody": {
															"expression": {
																"id": 1534,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1532,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1519,
																	"src": "16013:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "3438",
																	"id": 1533,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16022:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_48_by_1",
																		"typeString": "int_const 48"
																	},
																	"value": "48"
																},
																"src": "16013:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 1535,
															"nodeType": "ExpressionStatement",
															"src": "16013:11:6"
														}
													}
												]
											},
											{
												"expression": {
													"id": 1568,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1519,
													"src": "16214:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 1517,
												"id": 1569,
												"nodeType": "Return",
												"src": "16207:12:6"
											}
										]
									},
									"id": 1571,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_tryParseChr",
									"nameLocation": "15711:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "chr",
												"nameLocation": "15731:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1571,
												"src": "15724:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes1",
													"typeString": "bytes1"
												},
												"typeName": {
													"id": 1512,
													"name": "bytes1",
													"nodeType": "ElementaryTypeName",
													"src": "15724:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15723:12:6"
									},
									"returnParameters": {
										"id": 1517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1571,
												"src": "15758:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1515,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "15758:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15757:7:6"
									},
									"scope": 1584,
									"src": "15702:524:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1582,
										"nodeType": "Block",
										"src": "16611:225:6",
										"statements": [
											{
												"AST": {
													"nativeSrc": "16760:70:6",
													"nodeType": "YulBlock",
													"src": "16760:70:6",
													"statements": [
														{
															"nativeSrc": "16774:46:6",
															"nodeType": "YulAssignment",
															"src": "16774:46:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "16793:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "16793:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "16805:4:6",
																						"nodeType": "YulLiteral",
																						"src": "16805:4:6",
																						"type": "",
																						"value": "0x20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16811:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "16811:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16801:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "16801:3:6"
																				},
																				"nativeSrc": "16801:17:6",
																				"nodeType": "YulFunctionCall",
																				"src": "16801:17:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16789:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "16789:3:6"
																		},
																		"nativeSrc": "16789:30:6",
																		"nodeType": "YulFunctionCall",
																		"src": "16789:30:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "16783:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "16783:5:6"
																},
																"nativeSrc": "16783:37:6",
																"nodeType": "YulFunctionCall",
																"src": "16783:37:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "16774:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "16774:5:6"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1574,
														"isOffset": false,
														"isSlot": false,
														"src": "16793:6:6",
														"valueSize": 1
													},
													{
														"declaration": 1576,
														"isOffset": false,
														"isSlot": false,
														"src": "16811:6:6",
														"valueSize": 1
													},
													{
														"declaration": 1579,
														"isOffset": false,
														"isSlot": false,
														"src": "16774:5:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1581,
												"nodeType": "InlineAssembly",
												"src": "16735:95:6"
											}
										]
									},
									"documentation": {
										"id": 1572,
										"nodeType": "StructuredDocumentation",
										"src": "16232:268:6",
										"text": " @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."
									},
									"id": 1583,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_unsafeReadBytesOffset",
									"nameLocation": "16514:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "buffer",
												"nameLocation": "16550:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "16537:19:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1573,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16537:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1576,
												"mutability": "mutable",
												"name": "offset",
												"nameLocation": "16566:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "16558:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16558:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16536:37:6"
									},
									"returnParameters": {
										"id": 1580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1579,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16604:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "16596:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1578,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "16596:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16595:15:6"
									},
									"scope": 1584,
									"src": "16505:331:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1585,
							"src": "297:16541:6",
							"usedErrors": [
								408,
								411,
								414
							],
							"usedEvents": []
						}
					],
					"src": "101:16738:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1596
						]
					},
					"id": 1597,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1586,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1587,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:7",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1596,
							"linearizedBaseContracts": [
								1596
							],
							"name": "IERC165",
							"nameLocation": "432:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1588,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:7",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1595,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1590,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1595,
												"src": "818:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1589,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:7"
									},
									"returnParameters": {
										"id": 1594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1593,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1595,
												"src": "861:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1592,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:7"
									},
									"scope": 1596,
									"src": "791:76:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1597,
							"src": "422:447:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							3202
						],
						"Panic": [
							384
						],
						"SafeCast": [
							4967
						]
					},
					"id": 3203,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1598,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Panic.sol",
							"file": "../Panic.sol",
							"id": 1600,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3203,
							"sourceUnit": 385,
							"src": "129:35:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1599,
										"name": "Panic",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 384,
										"src": "137:5:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeCast.sol",
							"file": "./SafeCast.sol",
							"id": 1602,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3203,
							"sourceUnit": 4968,
							"src": "165:40:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1601,
										"name": "SafeCast",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 4967,
										"src": "173:8:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1603,
								"nodeType": "StructuredDocumentation",
								"src": "207:73:8",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3202,
							"linearizedBaseContracts": [
								3202
							],
							"name": "Math",
							"nameLocation": "289:4:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 1608,
									"members": [
										{
											"id": 1604,
											"name": "Floor",
											"nameLocation": "324:5:8",
											"nodeType": "EnumValue",
											"src": "324:5:8"
										},
										{
											"id": 1605,
											"name": "Ceil",
											"nameLocation": "367:4:8",
											"nodeType": "EnumValue",
											"src": "367:4:8"
										},
										{
											"id": 1606,
											"name": "Trunc",
											"nameLocation": "409:5:8",
											"nodeType": "EnumValue",
											"src": "409:5:8"
										},
										{
											"id": 1607,
											"name": "Expand",
											"nameLocation": "439:6:8",
											"nodeType": "EnumValue",
											"src": "439:6:8"
										}
									],
									"name": "Rounding",
									"nameLocation": "305:8:8",
									"nodeType": "EnumDefinition",
									"src": "300:169:8"
								},
								{
									"body": {
										"id": 1639,
										"nodeType": "Block",
										"src": "677:140:8",
										"statements": [
											{
												"id": 1638,
												"nodeType": "UncheckedBlock",
												"src": "687:124:8",
												"statements": [
													{
														"assignments": [
															1621
														],
														"declarations": [
															{
																"constant": false,
																"id": 1621,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "719:1:8",
																"nodeType": "VariableDeclaration",
																"scope": 1638,
																"src": "711:9:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1620,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "711:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1625,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1624,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1622,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1611,
																"src": "723:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1623,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1613,
																"src": "727:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "723:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "711:17:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1628,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1626,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1621,
																"src": "746:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1627,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1611,
																"src": "750:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "746:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1633,
														"nodeType": "IfStatement",
														"src": "742:28:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "761:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1630,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "768:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1631,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "760:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1619,
															"id": 1632,
															"nodeType": "Return",
															"src": "753:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1634,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "792:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1635,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1621,
																	"src": "798:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1636,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "791:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1619,
														"id": 1637,
														"nodeType": "Return",
														"src": "784:16:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1609,
										"nodeType": "StructuredDocumentation",
										"src": "475:106:8",
										"text": " @dev Returns the addition of two unsigned integers, with an success flag (no overflow)."
									},
									"id": 1640,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "595:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1611,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "610:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "602:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "602:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1613,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "621:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "613:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "613:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "601:22:8"
									},
									"returnParameters": {
										"id": 1619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1616,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "652:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "647:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1615,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "647:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1618,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "669:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "661:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "661:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "646:30:8"
									},
									"scope": 3202,
									"src": "586:231:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1667,
										"nodeType": "Block",
										"src": "1028:113:8",
										"statements": [
											{
												"id": 1666,
												"nodeType": "UncheckedBlock",
												"src": "1038:97:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1654,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1652,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1645,
																"src": "1066:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1653,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1643,
																"src": "1070:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1066:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1659,
														"nodeType": "IfStatement",
														"src": "1062:28:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1655,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1081:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1656,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1088:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1657,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1080:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1651,
															"id": 1658,
															"nodeType": "Return",
															"src": "1073:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1660,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1112:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1663,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1661,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1643,
																		"src": "1118:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1662,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1645,
																		"src": "1122:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1118:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1664,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1111:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1651,
														"id": 1665,
														"nodeType": "Return",
														"src": "1104:20:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1641,
										"nodeType": "StructuredDocumentation",
										"src": "823:109:8",
										"text": " @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow)."
									},
									"id": 1668,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "946:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1643,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "961:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "953:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1642,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "953:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1645,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "972:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "964:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "964:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "952:22:8"
									},
									"returnParameters": {
										"id": 1651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1648,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "1003:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "998:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1647,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "998:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1650,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1020:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "1012:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1012:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "997:30:8"
									},
									"scope": 3202,
									"src": "937:204:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1709,
										"nodeType": "Block",
										"src": "1355:417:8",
										"statements": [
											{
												"id": 1708,
												"nodeType": "UncheckedBlock",
												"src": "1365:401:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1682,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1680,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1671,
																"src": "1623:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1681,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1628:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1623:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1687,
														"nodeType": "IfStatement",
														"src": "1619:28:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1683,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1639:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1645:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1685,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1638:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1679,
															"id": 1686,
															"nodeType": "Return",
															"src": "1631:16:8"
														}
													},
													{
														"assignments": [
															1689
														],
														"declarations": [
															{
																"constant": false,
																"id": 1689,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1669:1:8",
																"nodeType": "VariableDeclaration",
																"scope": 1708,
																"src": "1661:9:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1688,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1661:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1693,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1692,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1690,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1671,
																"src": "1673:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1691,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1673,
																"src": "1677:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1673:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1661:17:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1696,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1694,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1689,
																	"src": "1696:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1695,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1671,
																	"src": "1700:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1696:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1697,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1673,
																"src": "1705:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1696:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1703,
														"nodeType": "IfStatement",
														"src": "1692:33:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1716:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1700,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1723:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1701,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1715:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1679,
															"id": 1702,
															"nodeType": "Return",
															"src": "1708:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1704,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1747:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1705,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1689,
																	"src": "1753:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1706,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1746:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1679,
														"id": 1707,
														"nodeType": "Return",
														"src": "1739:16:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1669,
										"nodeType": "StructuredDocumentation",
										"src": "1147:112:8",
										"text": " @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow)."
									},
									"id": 1710,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1273:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1671,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1288:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1710,
												"src": "1280:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1280:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1673,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1299:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1710,
												"src": "1291:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1291:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1279:22:8"
									},
									"returnParameters": {
										"id": 1679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1676,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "1330:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1710,
												"src": "1325:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1675,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1325:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1347:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1710,
												"src": "1339:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:30:8"
									},
									"scope": 3202,
									"src": "1264:508:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1737,
										"nodeType": "Block",
										"src": "1987:114:8",
										"statements": [
											{
												"id": 1736,
												"nodeType": "UncheckedBlock",
												"src": "1997:98:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1724,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1722,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1715,
																"src": "2025:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1723,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2030:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2025:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1729,
														"nodeType": "IfStatement",
														"src": "2021:29:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1725,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2041:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1726,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2048:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1727,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2040:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1721,
															"id": 1728,
															"nodeType": "Return",
															"src": "2033:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1730,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2072:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1733,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1731,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1713,
																		"src": "2078:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1732,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1715,
																		"src": "2082:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2078:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1734,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2071:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1721,
														"id": 1735,
														"nodeType": "Return",
														"src": "2064:20:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1711,
										"nodeType": "StructuredDocumentation",
										"src": "1778:113:8",
										"text": " @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."
									},
									"id": 1738,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1905:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1713,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1920:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1738,
												"src": "1912:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1912:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1715,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1931:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1738,
												"src": "1923:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1923:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1911:22:8"
									},
									"returnParameters": {
										"id": 1721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1718,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "1962:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1738,
												"src": "1957:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1717,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1957:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1720,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1979:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1738,
												"src": "1971:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1719,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1971:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1956:30:8"
									},
									"scope": 3202,
									"src": "1896:205:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1765,
										"nodeType": "Block",
										"src": "2326:114:8",
										"statements": [
											{
												"id": 1764,
												"nodeType": "UncheckedBlock",
												"src": "2336:98:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1752,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1750,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1743,
																"src": "2364:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1751,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2369:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2364:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1757,
														"nodeType": "IfStatement",
														"src": "2360:29:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1753,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2380:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1754,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2387:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1755,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2379:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1749,
															"id": 1756,
															"nodeType": "Return",
															"src": "2372:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1758,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2411:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1761,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1759,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1741,
																		"src": "2417:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1760,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1743,
																		"src": "2421:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2417:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1762,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2410:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1749,
														"id": 1763,
														"nodeType": "Return",
														"src": "2403:20:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1739,
										"nodeType": "StructuredDocumentation",
										"src": "2107:123:8",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."
									},
									"id": 1766,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2244:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1741,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2259:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1766,
												"src": "2251:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2251:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1743,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2270:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1766,
												"src": "2262:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2262:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2250:22:8"
									},
									"returnParameters": {
										"id": 1749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1746,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "2301:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1766,
												"src": "2296:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1745,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2296:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1748,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "2318:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1766,
												"src": "2310:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2310:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2295:30:8"
									},
									"scope": 3202,
									"src": "2235:205:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1792,
										"nodeType": "Block",
										"src": "2912:207:8",
										"statements": [
											{
												"id": 1791,
												"nodeType": "UncheckedBlock",
												"src": "2922:191:8",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1789,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1778,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1773,
																"src": "3060:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1787,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1781,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1779,
																						"name": "a",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1771,
																						"src": "3066:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "^",
																					"rightExpression": {
																						"id": 1780,
																						"name": "b",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1773,
																						"src": "3070:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "3066:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1782,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3065:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1785,
																					"name": "condition",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1769,
																					"src": "3091:9:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				],
																				"expression": {
																					"id": 1783,
																					"name": "SafeCast",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4967,
																					"src": "3075:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SafeCast_$4967_$",
																						"typeString": "type(library SafeCast)"
																					}
																				},
																				"id": 1784,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3084:6:8",
																				"memberName": "toUint",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 4966,
																				"src": "3075:15:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																					"typeString": "function (bool) pure returns (uint256)"
																				}
																			},
																			"id": 1786,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3075:26:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3065:36:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1788,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3064:38:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3060:42:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1777,
														"id": 1790,
														"nodeType": "Return",
														"src": "3053:49:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1767,
										"nodeType": "StructuredDocumentation",
										"src": "2446:374:8",
										"text": " @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."
									},
									"id": 1793,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ternary",
									"nameLocation": "2834:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1769,
												"mutability": "mutable",
												"name": "condition",
												"nameLocation": "2847:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1793,
												"src": "2842:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1768,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2842:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1771,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2866:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1793,
												"src": "2858:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2858:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1773,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2877:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1793,
												"src": "2869:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1772,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2869:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2841:38:8"
									},
									"returnParameters": {
										"id": 1777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1776,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1793,
												"src": "2903:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1775,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2903:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2902:9:8"
									},
									"scope": 3202,
									"src": "2825:294:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1811,
										"nodeType": "Block",
										"src": "3256:44:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1804,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1796,
																"src": "3281:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1805,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1798,
																"src": "3285:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3281:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1807,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1796,
															"src": "3288:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1808,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1798,
															"src": "3291:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1803,
														"name": "ternary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1793,
														"src": "3273:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3273:20:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1802,
												"id": 1810,
												"nodeType": "Return",
												"src": "3266:27:8"
											}
										]
									},
									"documentation": {
										"id": 1794,
										"nodeType": "StructuredDocumentation",
										"src": "3125:59:8",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1812,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "3198:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1796,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3210:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1812,
												"src": "3202:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3202:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1798,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3221:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1812,
												"src": "3213:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1797,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3213:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3201:22:8"
									},
									"returnParameters": {
										"id": 1802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1801,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1812,
												"src": "3247:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3247:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3246:9:8"
									},
									"scope": 3202,
									"src": "3189:111:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1830,
										"nodeType": "Block",
										"src": "3438:44:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1825,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1823,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1815,
																"src": "3463:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1824,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1817,
																"src": "3467:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3463:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1826,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1815,
															"src": "3470:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1827,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1817,
															"src": "3473:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1822,
														"name": "ternary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1793,
														"src": "3455:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3455:20:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1821,
												"id": 1829,
												"nodeType": "Return",
												"src": "3448:27:8"
											}
										]
									},
									"documentation": {
										"id": 1813,
										"nodeType": "StructuredDocumentation",
										"src": "3306:60:8",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1831,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "3380:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1815,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3392:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1831,
												"src": "3384:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1814,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3384:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1817,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3403:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1831,
												"src": "3395:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3395:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:22:8"
									},
									"returnParameters": {
										"id": 1821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1820,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1831,
												"src": "3429:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1819,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3429:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3428:9:8"
									},
									"scope": 3202,
									"src": "3371:111:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1853,
										"nodeType": "Block",
										"src": "3666:82:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1843,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1841,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1834,
																	"src": "3721:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1842,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1836,
																	"src": "3725:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3721:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1844,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3720:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1850,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1847,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1845,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1834,
																		"src": "3731:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1846,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1836,
																		"src": "3735:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3731:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1848,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3730:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 1849,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3740:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "3730:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3720:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1840,
												"id": 1852,
												"nodeType": "Return",
												"src": "3713:28:8"
											}
										]
									},
									"documentation": {
										"id": 1832,
										"nodeType": "StructuredDocumentation",
										"src": "3488:102:8",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 1854,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "3604:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1834,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3620:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "3612:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3612:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1836,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3631:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "3623:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1835,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3623:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3611:22:8"
									},
									"returnParameters": {
										"id": 1840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1839,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "3657:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3657:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3656:9:8"
									},
									"scope": 3202,
									"src": "3595:153:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1894,
										"nodeType": "Block",
										"src": "4040:633:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1864,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1859,
														"src": "4054:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1865,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4059:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4054:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1875,
												"nodeType": "IfStatement",
												"src": "4050:150:8",
												"trueBody": {
													"id": 1874,
													"nodeType": "Block",
													"src": "4062:138:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1870,
																			"name": "Panic",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 384,
																			"src": "4166:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Panic_$384_$",
																				"typeString": "type(library Panic)"
																			}
																		},
																		"id": 1871,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "4172:16:8",
																		"memberName": "DIVISION_BY_ZERO",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 351,
																		"src": "4166:22:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1867,
																		"name": "Panic",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 384,
																		"src": "4154:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Panic_$384_$",
																			"typeString": "type(library Panic)"
																		}
																	},
																	"id": 1869,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4160:5:8",
																	"memberName": "panic",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 383,
																	"src": "4154:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1872,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4154:35:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1873,
															"nodeType": "ExpressionStatement",
															"src": "4154:35:8"
														}
													]
												}
											},
											{
												"id": 1893,
												"nodeType": "UncheckedBlock",
												"src": "4583:84:8",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1891,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1880,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1878,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1857,
																			"src": "4630:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1879,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4634:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "4630:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 1876,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4967,
																		"src": "4614:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$4967_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 1877,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4623:6:8",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4966,
																	"src": "4614:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 1881,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4614:22:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1889,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1887,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1884,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1882,
																							"name": "a",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1857,
																							"src": "4641:1:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 1883,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "4645:1:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "4641:5:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1885,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4640:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 1886,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1859,
																				"src": "4650:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4640:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1888,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4654:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "4640:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1890,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4639:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4614:42:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1863,
														"id": 1892,
														"nodeType": "Return",
														"src": "4607:49:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1855,
										"nodeType": "StructuredDocumentation",
										"src": "3754:210:8",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 1895,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3978:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1857,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3994:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1895,
												"src": "3986:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3986:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1859,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4005:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1895,
												"src": "3997:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3997:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3985:22:8"
									},
									"returnParameters": {
										"id": 1863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1895,
												"src": "4031:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1861,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4031:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4030:9:8"
									},
									"scope": 3202,
									"src": "3969:704:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2031,
										"nodeType": "Block",
										"src": "5094:4128:8",
										"statements": [
											{
												"id": 2030,
												"nodeType": "UncheckedBlock",
												"src": "5104:4112:8",
												"statements": [
													{
														"assignments": [
															1908
														],
														"declarations": [
															{
																"constant": false,
																"id": 1908,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "5441:5:8",
																"nodeType": "VariableDeclaration",
																"scope": 2030,
																"src": "5433:13:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1907,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5433:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1912,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1911,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1909,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1898,
																"src": "5449:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1910,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1900,
																"src": "5453:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5449:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5433:21:8"
													},
													{
														"assignments": [
															1914
														],
														"declarations": [
															{
																"constant": false,
																"id": 1914,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "5521:5:8",
																"nodeType": "VariableDeclaration",
																"scope": 2030,
																"src": "5513:13:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1913,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5513:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1915,
														"nodeType": "VariableDeclarationStatement",
														"src": "5513:13:8"
													},
													{
														"AST": {
															"nativeSrc": "5593:122:8",
															"nodeType": "YulBlock",
															"src": "5593:122:8",
															"statements": [
																{
																	"nativeSrc": "5611:30:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5611:30:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5628:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "5628:1:8"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5631:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "5631:1:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5638:1:8",
																						"nodeType": "YulLiteral",
																						"src": "5638:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "5634:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5634:3:8"
																				},
																				"nativeSrc": "5634:6:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5634:6:8"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5621:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "5621:6:8"
																		},
																		"nativeSrc": "5621:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5621:20:8"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "5615:2:8",
																			"nodeType": "YulTypedName",
																			"src": "5615:2:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5658:43:8",
																	"nodeType": "YulAssignment",
																	"src": "5658:43:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "5675:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "5675:2:8"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5679:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "5679:5:8"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5671:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5671:3:8"
																				},
																				"nativeSrc": "5671:14:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5671:14:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "5690:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "5690:2:8"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5694:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "5694:5:8"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "5687:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "5687:2:8"
																				},
																				"nativeSrc": "5687:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5687:13:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5667:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5667:3:8"
																		},
																		"nativeSrc": "5667:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5667:34:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5658:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "5658:5:8"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1908,
																"isOffset": false,
																"isSlot": false,
																"src": "5679:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1908,
																"isOffset": false,
																"isSlot": false,
																"src": "5694:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1914,
																"isOffset": false,
																"isSlot": false,
																"src": "5658:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1898,
																"isOffset": false,
																"isSlot": false,
																"src": "5628:1:8",
																"valueSize": 1
															},
															{
																"declaration": 1900,
																"isOffset": false,
																"isSlot": false,
																"src": "5631:1:8",
																"valueSize": 1
															}
														],
														"id": 1916,
														"nodeType": "InlineAssembly",
														"src": "5584:131:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1919,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1917,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1914,
																"src": "5796:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1918,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5805:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5796:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1925,
														"nodeType": "IfStatement",
														"src": "5792:368:8",
														"trueBody": {
															"id": 1924,
															"nodeType": "Block",
															"src": "5808:352:8",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1922,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1920,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1908,
																			"src": "6126:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1921,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1902,
																			"src": "6134:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6126:19:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1906,
																	"id": 1923,
																	"nodeType": "Return",
																	"src": "6119:26:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1928,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1926,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1902,
																"src": "6270:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1927,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1914,
																"src": "6285:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6270:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1944,
														"nodeType": "IfStatement",
														"src": "6266:143:8",
														"trueBody": {
															"id": 1943,
															"nodeType": "Block",
															"src": "6292:117:8",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1935,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1933,
																							"name": "denominator",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1902,
																							"src": "6330:11:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 1934,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "6345:1:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "6330:16:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					{
																						"expression": {
																							"id": 1936,
																							"name": "Panic",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 384,
																							"src": "6348:5:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_Panic_$384_$",
																								"typeString": "type(library Panic)"
																							}
																						},
																						"id": 1937,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "6354:16:8",
																						"memberName": "DIVISION_BY_ZERO",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 351,
																						"src": "6348:22:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"expression": {
																							"id": 1938,
																							"name": "Panic",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 384,
																							"src": "6372:5:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_Panic_$384_$",
																								"typeString": "type(library Panic)"
																							}
																						},
																						"id": 1939,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "6378:14:8",
																						"memberName": "UNDER_OVERFLOW",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 347,
																						"src": "6372:20:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 1932,
																					"name": "ternary",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1793,
																					"src": "6322:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1940,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6322:71:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1929,
																				"name": "Panic",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6310:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Panic_$384_$",
																					"typeString": "type(library Panic)"
																				}
																			},
																			"id": 1931,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6316:5:8",
																			"memberName": "panic",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 383,
																			"src": "6310:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
																				"typeString": "function (uint256) pure"
																			}
																		},
																		"id": 1941,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6310:84:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1942,
																	"nodeType": "ExpressionStatement",
																	"src": "6310:84:8"
																}
															]
														}
													},
													{
														"assignments": [
															1946
														],
														"declarations": [
															{
																"constant": false,
																"id": 1946,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "6672:9:8",
																"nodeType": "VariableDeclaration",
																"scope": 2030,
																"src": "6664:17:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1945,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6664:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1947,
														"nodeType": "VariableDeclarationStatement",
														"src": "6664:17:8"
													},
													{
														"AST": {
															"nativeSrc": "6704:291:8",
															"nodeType": "YulBlock",
															"src": "6704:291:8",
															"statements": [
																{
																	"nativeSrc": "6773:38:8",
																	"nodeType": "YulAssignment",
																	"src": "6773:38:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "6793:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "6793:1:8"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "6796:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "6796:1:8"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "6799:11:8",
																				"nodeType": "YulIdentifier",
																				"src": "6799:11:8"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "6786:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "6786:6:8"
																		},
																		"nativeSrc": "6786:25:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6786:25:8"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "6773:9:8",
																			"nodeType": "YulIdentifier",
																			"src": "6773:9:8"
																		}
																	]
																},
																{
																	"nativeSrc": "6893:41:8",
																	"nodeType": "YulAssignment",
																	"src": "6893:41:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "6906:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "6906:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "6916:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "6916:9:8"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "6927:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "6927:5:8"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "6913:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "6913:2:8"
																				},
																				"nativeSrc": "6913:20:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6913:20:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6902:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6902:3:8"
																		},
																		"nativeSrc": "6902:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6902:32:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "6893:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "6893:5:8"
																		}
																	]
																},
																{
																	"nativeSrc": "6951:30:8",
																	"nodeType": "YulAssignment",
																	"src": "6951:30:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6964:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "6964:5:8"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "6971:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6971:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6960:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6960:3:8"
																		},
																		"nativeSrc": "6960:21:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6960:21:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6951:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "6951:5:8"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1902,
																"isOffset": false,
																"isSlot": false,
																"src": "6799:11:8",
																"valueSize": 1
															},
															{
																"declaration": 1908,
																"isOffset": false,
																"isSlot": false,
																"src": "6927:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1908,
																"isOffset": false,
																"isSlot": false,
																"src": "6951:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1908,
																"isOffset": false,
																"isSlot": false,
																"src": "6964:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1914,
																"isOffset": false,
																"isSlot": false,
																"src": "6893:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1914,
																"isOffset": false,
																"isSlot": false,
																"src": "6906:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1946,
																"isOffset": false,
																"isSlot": false,
																"src": "6773:9:8",
																"valueSize": 1
															},
															{
																"declaration": 1946,
																"isOffset": false,
																"isSlot": false,
																"src": "6916:9:8",
																"valueSize": 1
															},
															{
																"declaration": 1946,
																"isOffset": false,
																"isSlot": false,
																"src": "6971:9:8",
																"valueSize": 1
															},
															{
																"declaration": 1898,
																"isOffset": false,
																"isSlot": false,
																"src": "6793:1:8",
																"valueSize": 1
															},
															{
																"declaration": 1900,
																"isOffset": false,
																"isSlot": false,
																"src": "6796:1:8",
																"valueSize": 1
															}
														],
														"id": 1948,
														"nodeType": "InlineAssembly",
														"src": "6695:300:8"
													},
													{
														"assignments": [
															1950
														],
														"declarations": [
															{
																"constant": false,
																"id": 1950,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "7207:4:8",
																"nodeType": "VariableDeclaration",
																"scope": 2030,
																"src": "7199:12:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1949,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "7199:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1957,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1956,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1951,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1902,
																"src": "7214:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1954,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 1952,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7229:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1953,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1902,
																			"src": "7233:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7229:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1955,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7228:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7214:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "7199:46:8"
													},
													{
														"AST": {
															"nativeSrc": "7268:366:8",
															"nodeType": "YulBlock",
															"src": "7268:366:8",
															"statements": [
																{
																	"nativeSrc": "7333:37:8",
																	"nodeType": "YulAssignment",
																	"src": "7333:37:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "7352:11:8",
																				"nodeType": "YulIdentifier",
																				"src": "7352:11:8"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "7365:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "7365:4:8"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "7348:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7348:3:8"
																		},
																		"nativeSrc": "7348:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7348:22:8"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "7333:11:8",
																			"nodeType": "YulIdentifier",
																			"src": "7333:11:8"
																		}
																	]
																},
																{
																	"nativeSrc": "7437:25:8",
																	"nodeType": "YulAssignment",
																	"src": "7437:25:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "7450:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "7450:5:8"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "7457:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "7457:4:8"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "7446:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7446:3:8"
																		},
																		"nativeSrc": "7446:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7446:16:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "7437:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "7437:5:8"
																		}
																	]
																},
																{
																	"nativeSrc": "7581:39:8",
																	"nodeType": "YulAssignment",
																	"src": "7581:39:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "7601:1:8",
																								"nodeType": "YulLiteral",
																								"src": "7601:1:8",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "7604:4:8",
																								"nodeType": "YulIdentifier",
																								"src": "7604:4:8"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "7597:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "7597:3:8"
																						},
																						"nativeSrc": "7597:12:8",
																						"nodeType": "YulFunctionCall",
																						"src": "7597:12:8"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "7611:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "7611:4:8"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "7593:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "7593:3:8"
																				},
																				"nativeSrc": "7593:23:8",
																				"nodeType": "YulFunctionCall",
																				"src": "7593:23:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7618:1:8",
																				"nodeType": "YulLiteral",
																				"src": "7618:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7589:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7589:3:8"
																		},
																		"nativeSrc": "7589:31:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7589:31:8"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "7581:4:8",
																			"nodeType": "YulIdentifier",
																			"src": "7581:4:8"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1902,
																"isOffset": false,
																"isSlot": false,
																"src": "7333:11:8",
																"valueSize": 1
															},
															{
																"declaration": 1902,
																"isOffset": false,
																"isSlot": false,
																"src": "7352:11:8",
																"valueSize": 1
															},
															{
																"declaration": 1908,
																"isOffset": false,
																"isSlot": false,
																"src": "7437:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1908,
																"isOffset": false,
																"isSlot": false,
																"src": "7450:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1950,
																"isOffset": false,
																"isSlot": false,
																"src": "7365:4:8",
																"valueSize": 1
															},
															{
																"declaration": 1950,
																"isOffset": false,
																"isSlot": false,
																"src": "7457:4:8",
																"valueSize": 1
															},
															{
																"declaration": 1950,
																"isOffset": false,
																"isSlot": false,
																"src": "7581:4:8",
																"valueSize": 1
															},
															{
																"declaration": 1950,
																"isOffset": false,
																"isSlot": false,
																"src": "7604:4:8",
																"valueSize": 1
															},
															{
																"declaration": 1950,
																"isOffset": false,
																"isSlot": false,
																"src": "7611:4:8",
																"valueSize": 1
															}
														],
														"id": 1958,
														"nodeType": "InlineAssembly",
														"src": "7259:375:8"
													},
													{
														"expression": {
															"id": 1963,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1959,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1908,
																"src": "7700:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1962,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1960,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1914,
																	"src": "7709:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1961,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1950,
																	"src": "7717:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7709:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7700:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1964,
														"nodeType": "ExpressionStatement",
														"src": "7700:21:8"
													},
													{
														"assignments": [
															1966
														],
														"declarations": [
															{
																"constant": false,
																"id": 1966,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "8064:7:8",
																"nodeType": "VariableDeclaration",
																"scope": 2030,
																"src": "8056:15:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1965,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8056:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1973,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1972,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1969,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1967,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8075:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1968,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1902,
																			"src": "8079:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8075:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1970,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8074:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1971,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8094:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "8074:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8056:39:8"
													},
													{
														"expression": {
															"id": 1980,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1974,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1966,
																"src": "8312:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1979,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1975,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8323:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1978,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1976,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1902,
																		"src": "8327:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1977,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1966,
																		"src": "8341:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8327:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8323:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8312:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1981,
														"nodeType": "ExpressionStatement",
														"src": "8312:36:8"
													},
													{
														"expression": {
															"id": 1988,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1982,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1966,
																"src": "8382:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1987,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1983,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8393:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1986,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1984,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1902,
																		"src": "8397:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1985,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1966,
																		"src": "8411:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8397:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8393:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8382:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1989,
														"nodeType": "ExpressionStatement",
														"src": "8382:36:8"
													},
													{
														"expression": {
															"id": 1996,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1990,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1966,
																"src": "8454:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1995,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1991,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8465:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1994,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1992,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1902,
																		"src": "8469:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1993,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1966,
																		"src": "8483:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8469:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8465:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8454:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1997,
														"nodeType": "ExpressionStatement",
														"src": "8454:36:8"
													},
													{
														"expression": {
															"id": 2004,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1998,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1966,
																"src": "8525:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2003,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1999,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8536:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2002,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2000,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1902,
																		"src": "8540:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2001,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1966,
																		"src": "8554:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8540:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8536:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8525:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2005,
														"nodeType": "ExpressionStatement",
														"src": "8525:36:8"
													},
													{
														"expression": {
															"id": 2012,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2006,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1966,
																"src": "8598:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2011,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2007,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8609:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2010,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2008,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1902,
																		"src": "8613:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2009,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1966,
																		"src": "8627:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8613:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8609:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8598:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2013,
														"nodeType": "ExpressionStatement",
														"src": "8598:36:8"
													},
													{
														"expression": {
															"id": 2020,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2014,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1966,
																"src": "8672:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2019,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2015,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8683:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2018,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2016,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1902,
																		"src": "8687:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2017,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1966,
																		"src": "8701:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8687:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8683:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8672:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2021,
														"nodeType": "ExpressionStatement",
														"src": "8672:36:8"
													},
													{
														"expression": {
															"id": 2026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2022,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1905,
																"src": "9154:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2025,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2023,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1908,
																	"src": "9163:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2024,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1966,
																	"src": "9171:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9163:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9154:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2027,
														"nodeType": "ExpressionStatement",
														"src": "9154:24:8"
													},
													{
														"expression": {
															"id": 2028,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1905,
															"src": "9199:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1906,
														"id": 2029,
														"nodeType": "Return",
														"src": "9192:13:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1896,
										"nodeType": "StructuredDocumentation",
										"src": "4679:312:8",
										"text": " @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2032,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "5005:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1898,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "5020:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2032,
												"src": "5012:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1897,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5012:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1900,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "5031:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2032,
												"src": "5023:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5023:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1902,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "5042:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 2032,
												"src": "5034:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1901,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5034:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5011:43:8"
									},
									"returnParameters": {
										"id": 1906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1905,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "5086:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2032,
												"src": "5078:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5078:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5077:16:8"
									},
									"scope": 3202,
									"src": "4996:4226:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2068,
										"nodeType": "Block",
										"src": "9461:128:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2048,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2035,
																"src": "9485:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2049,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2037,
																"src": "9488:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2050,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2039,
																"src": "9491:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2047,
															"name": "mulDiv",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																2032,
																2069
															],
															"referencedDeclaration": 2032,
															"src": "9478:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2051,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9478:25:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2064,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2055,
																			"name": "rounding",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2042,
																			"src": "9539:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_Rounding_$1608",
																				"typeString": "enum Math.Rounding"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_enum$_Rounding_$1608",
																				"typeString": "enum Math.Rounding"
																			}
																		],
																		"id": 2054,
																		"name": "unsignedRoundsUp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3201,
																		"src": "9522:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1608_$returns$_t_bool_$",
																			"typeString": "function (enum Math.Rounding) pure returns (bool)"
																		}
																	},
																	"id": 2056,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9522:26:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2063,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 2058,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2035,
																				"src": "9559:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 2059,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2037,
																				"src": "9562:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 2060,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2039,
																				"src": "9565:11:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 2057,
																			"name": "mulmod",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967280,
																			"src": "9552:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2061,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9552:25:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2062,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9580:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9552:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "9522:59:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"expression": {
																"id": 2052,
																"name": "SafeCast",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4967,
																"src": "9506:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeCast_$4967_$",
																	"typeString": "type(library SafeCast)"
																}
															},
															"id": 2053,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9515:6:8",
															"memberName": "toUint",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4966,
															"src": "9506:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																"typeString": "function (bool) pure returns (uint256)"
															}
														},
														"id": 2065,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9506:76:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9478:104:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2046,
												"id": 2067,
												"nodeType": "Return",
												"src": "9471:111:8"
											}
										]
									},
									"documentation": {
										"id": 2033,
										"nodeType": "StructuredDocumentation",
										"src": "9228:118:8",
										"text": " @dev Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2069,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "9360:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2035,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "9375:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2069,
												"src": "9367:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2034,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9367:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2037,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "9386:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2069,
												"src": "9378:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2036,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9378:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2039,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "9397:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 2069,
												"src": "9389:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2038,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9389:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2042,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9419:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2069,
												"src": "9410:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1608",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2041,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2040,
														"name": "Rounding",
														"nameLocations": [
															"9410:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1608,
														"src": "9410:8:8"
													},
													"referencedDeclaration": 1608,
													"src": "9410:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1608",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9366:62:8"
									},
									"returnParameters": {
										"id": 2046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2045,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2069,
												"src": "9452:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2044,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9452:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9451:9:8"
									},
									"scope": 3202,
									"src": "9351:238:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2165,
										"nodeType": "Block",
										"src": "10223:1849:8",
										"statements": [
											{
												"id": 2164,
												"nodeType": "UncheckedBlock",
												"src": "10233:1833:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2081,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2079,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2074,
																"src": "10261:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2080,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10266:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10261:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2084,
														"nodeType": "IfStatement",
														"src": "10257:20:8",
														"trueBody": {
															"expression": {
																"hexValue": "30",
																"id": 2082,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10276:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2078,
															"id": 2083,
															"nodeType": "Return",
															"src": "10269:8:8"
														}
													},
													{
														"assignments": [
															2086
														],
														"declarations": [
															{
																"constant": false,
																"id": 2086,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "10756:9:8",
																"nodeType": "VariableDeclaration",
																"scope": 2164,
																"src": "10748:17:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2085,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10748:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2090,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2089,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2087,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2072,
																"src": "10768:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 2088,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2074,
																"src": "10772:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10768:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10748:25:8"
													},
													{
														"assignments": [
															2092
														],
														"declarations": [
															{
																"constant": false,
																"id": 2092,
																"mutability": "mutable",
																"name": "gcd",
																"nameLocation": "10795:3:8",
																"nodeType": "VariableDeclaration",
																"scope": 2164,
																"src": "10787:11:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2091,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10787:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2094,
														"initialValue": {
															"id": 2093,
															"name": "n",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2074,
															"src": "10801:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10787:15:8"
													},
													{
														"assignments": [
															2096
														],
														"declarations": [
															{
																"constant": false,
																"id": 2096,
																"mutability": "mutable",
																"name": "x",
																"nameLocation": "10945:1:8",
																"nodeType": "VariableDeclaration",
																"scope": 2164,
																"src": "10938:8:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"typeName": {
																	"id": 2095,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10938:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2098,
														"initialValue": {
															"hexValue": "30",
															"id": 2097,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10949:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10938:12:8"
													},
													{
														"assignments": [
															2100
														],
														"declarations": [
															{
																"constant": false,
																"id": 2100,
																"mutability": "mutable",
																"name": "y",
																"nameLocation": "10971:1:8",
																"nodeType": "VariableDeclaration",
																"scope": 2164,
																"src": "10964:8:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"typeName": {
																	"id": 2099,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10964:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2102,
														"initialValue": {
															"hexValue": "31",
															"id": 2101,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10975:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10964:12:8"
													},
													{
														"body": {
															"id": 2139,
															"nodeType": "Block",
															"src": "11014:882:8",
															"statements": [
																{
																	"assignments": [
																		2107
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 2107,
																			"mutability": "mutable",
																			"name": "quotient",
																			"nameLocation": "11040:8:8",
																			"nodeType": "VariableDeclaration",
																			"scope": 2139,
																			"src": "11032:16:8",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 2106,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "11032:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 2111,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2110,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2108,
																			"name": "gcd",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2092,
																			"src": "11051:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2109,
																			"name": "remainder",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2086,
																			"src": "11057:9:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11051:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "11032:34:8"
																},
																{
																	"expression": {
																		"id": 2122,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"components": [
																				{
																					"id": 2112,
																					"name": "gcd",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2092,
																					"src": "11086:3:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 2113,
																					"name": "remainder",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2086,
																					"src": "11091:9:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 2114,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "TupleExpression",
																			"src": "11085:16:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																				"typeString": "tuple(uint256,uint256)"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"components": [
																				{
																					"id": 2115,
																					"name": "remainder",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2086,
																					"src": "11191:9:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2120,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2116,
																						"name": "gcd",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2092,
																						"src": "11436:3:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2119,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 2117,
																							"name": "remainder",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2086,
																							"src": "11442:9:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"id": 2118,
																							"name": "quotient",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2107,
																							"src": "11454:8:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "11442:20:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11436:26:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 2121,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "11104:376:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																				"typeString": "tuple(uint256,uint256)"
																			}
																		},
																		"src": "11085:395:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2123,
																	"nodeType": "ExpressionStatement",
																	"src": "11085:395:8"
																},
																{
																	"expression": {
																		"id": 2137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"components": [
																				{
																					"id": 2124,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2096,
																					"src": "11500:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				{
																					"id": 2125,
																					"name": "y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2100,
																					"src": "11503:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"id": 2126,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "TupleExpression",
																			"src": "11499:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$",
																				"typeString": "tuple(int256,int256)"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"components": [
																				{
																					"id": 2127,
																					"name": "y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2100,
																					"src": "11585:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				{
																					"commonType": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					},
																					"id": 2135,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2128,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2096,
																						"src": "11839:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"commonType": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						},
																						"id": 2134,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 2129,
																							"name": "y",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2100,
																							"src": "11843:1:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_int256",
																								"typeString": "int256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"arguments": [
																								{
																									"id": 2132,
																									"name": "quotient",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2107,
																									"src": "11854:8:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"id": 2131,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "11847:6:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_int256_$",
																									"typeString": "type(int256)"
																								},
																								"typeName": {
																									"id": 2130,
																									"name": "int256",
																									"nodeType": "ElementaryTypeName",
																									"src": "11847:6:8",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 2133,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "11847:16:8",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_int256",
																								"typeString": "int256"
																							}
																						},
																						"src": "11843:20:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					"src": "11839:24:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"id": 2136,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "11508:373:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$",
																				"typeString": "tuple(int256,int256)"
																			}
																		},
																		"src": "11499:382:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2138,
																	"nodeType": "ExpressionStatement",
																	"src": "11499:382:8"
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2103,
																"name": "remainder",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2086,
																"src": "10998:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 2104,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11011:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10998:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2140,
														"nodeType": "WhileStatement",
														"src": "10991:905:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2141,
																"name": "gcd",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2092,
																"src": "11914:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "31",
																"id": 2142,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11921:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "11914:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2146,
														"nodeType": "IfStatement",
														"src": "11910:22:8",
														"trueBody": {
															"expression": {
																"hexValue": "30",
																"id": 2144,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11931:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2078,
															"id": 2145,
															"nodeType": "Return",
															"src": "11924:8:8"
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 2150,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2148,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2096,
																		"src": "11983:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2149,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11987:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "11983:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2157,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2151,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2074,
																		"src": "11990:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 2155,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "-",
																				"prefix": true,
																				"src": "12002:2:8",
																				"subExpression": {
																					"id": 2154,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2096,
																					"src": "12003:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			],
																			"id": 2153,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11994:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 2152,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "11994:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2156,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11994:11:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "11990:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 2160,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2096,
																			"src": "12015:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"id": 2159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12007:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2158,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "12007:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2161,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12007:10:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2147,
																"name": "ternary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1793,
																"src": "11975:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11975:43:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2078,
														"id": 2163,
														"nodeType": "Return",
														"src": "11968:50:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2070,
										"nodeType": "StructuredDocumentation",
										"src": "9595:553:8",
										"text": " @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."
									},
									"id": 2166,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "invMod",
									"nameLocation": "10162:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2072,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10177:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2166,
												"src": "10169:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2071,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10169:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2074,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "10188:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2166,
												"src": "10180:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2073,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10180:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10168:22:8"
									},
									"returnParameters": {
										"id": 2078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2077,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2166,
												"src": "10214:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2076,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10214:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10213:9:8"
									},
									"scope": 3202,
									"src": "10153:1919:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2186,
										"nodeType": "Block",
										"src": "12672:82:8",
										"statements": [
											{
												"id": 2185,
												"nodeType": "UncheckedBlock",
												"src": "12682:66:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 2178,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2169,
																	"src": "12725:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2179,
																		"name": "p",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2171,
																		"src": "12728:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 2180,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12732:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "12728:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2182,
																	"name": "p",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2171,
																	"src": "12735:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2176,
																	"name": "Math",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3202,
																	"src": "12713:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_Math_$3202_$",
																		"typeString": "type(library Math)"
																	}
																},
																"id": 2177,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12718:6:8",
																"memberName": "modExp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2223,
																"src": "12713:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) view returns (uint256)"
																}
															},
															"id": 2183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12713:24:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2175,
														"id": 2184,
														"nodeType": "Return",
														"src": "12706:31:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2167,
										"nodeType": "StructuredDocumentation",
										"src": "12078:514:8",
										"text": " @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."
									},
									"id": 2187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "invModPrime",
									"nameLocation": "12606:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2169,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "12626:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2187,
												"src": "12618:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12618:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2171,
												"mutability": "mutable",
												"name": "p",
												"nameLocation": "12637:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2187,
												"src": "12629:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12629:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12617:22:8"
									},
									"returnParameters": {
										"id": 2175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2174,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2187,
												"src": "12663:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12663:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12662:9:8"
									},
									"scope": 3202,
									"src": "12597:157:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2222,
										"nodeType": "Block",
										"src": "13524:174:8",
										"statements": [
											{
												"assignments": [
													2200,
													2202
												],
												"declarations": [
													{
														"constant": false,
														"id": 2200,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "13540:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 2222,
														"src": "13535:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2199,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "13535:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2202,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13557:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 2222,
														"src": "13549:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2201,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13549:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2208,
												"initialValue": {
													"arguments": [
														{
															"id": 2204,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2190,
															"src": "13577:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2205,
															"name": "e",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2192,
															"src": "13580:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2206,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2194,
															"src": "13583:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2203,
														"name": "tryModExp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2247,
															2329
														],
														"referencedDeclaration": 2247,
														"src": "13567:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) view returns (bool,uint256)"
														}
													},
													"id": 2207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13567:18:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13534:51:8"
											},
											{
												"condition": {
													"id": 2210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "13599:8:8",
													"subExpression": {
														"id": 2209,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2200,
														"src": "13600:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2219,
												"nodeType": "IfStatement",
												"src": "13595:74:8",
												"trueBody": {
													"id": 2218,
													"nodeType": "Block",
													"src": "13609:60:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2214,
																			"name": "Panic",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 384,
																			"src": "13635:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Panic_$384_$",
																				"typeString": "type(library Panic)"
																			}
																		},
																		"id": 2215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "13641:16:8",
																		"memberName": "DIVISION_BY_ZERO",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 351,
																		"src": "13635:22:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2211,
																		"name": "Panic",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 384,
																		"src": "13623:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Panic_$384_$",
																			"typeString": "type(library Panic)"
																		}
																	},
																	"id": 2213,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "13629:5:8",
																	"memberName": "panic",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 383,
																	"src": "13623:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 2216,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13623:35:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2217,
															"nodeType": "ExpressionStatement",
															"src": "13623:35:8"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2220,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2202,
													"src": "13685:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2198,
												"id": 2221,
												"nodeType": "Return",
												"src": "13678:13:8"
											}
										]
									},
									"documentation": {
										"id": 2188,
										"nodeType": "StructuredDocumentation",
										"src": "12760:678:8",
										"text": " @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."
									},
									"id": 2223,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "modExp",
									"nameLocation": "13452:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2190,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "13467:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2223,
												"src": "13459:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13459:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2192,
												"mutability": "mutable",
												"name": "e",
												"nameLocation": "13478:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2223,
												"src": "13470:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13470:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2194,
												"mutability": "mutable",
												"name": "m",
												"nameLocation": "13489:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2223,
												"src": "13481:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13481:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13458:33:8"
									},
									"returnParameters": {
										"id": 2198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2223,
												"src": "13515:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13515:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13514:9:8"
									},
									"scope": 3202,
									"src": "13443:255:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2246,
										"nodeType": "Block",
										"src": "14552:1493:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2237,
														"name": "m",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2230,
														"src": "14566:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2238,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14571:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14566:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2244,
												"nodeType": "IfStatement",
												"src": "14562:29:8",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 2240,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14582:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 2241,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14589:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 2242,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "14581:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 2236,
													"id": 2243,
													"nodeType": "Return",
													"src": "14574:17:8"
												}
											},
											{
												"AST": {
													"nativeSrc": "14626:1413:8",
													"nodeType": "YulBlock",
													"src": "14626:1413:8",
													"statements": [
														{
															"nativeSrc": "14640:22:8",
															"nodeType": "YulVariableDeclaration",
															"src": "14640:22:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14657:4:8",
																		"nodeType": "YulLiteral",
																		"src": "14657:4:8",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14651:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "14651:5:8"
																},
																"nativeSrc": "14651:11:8",
																"nodeType": "YulFunctionCall",
																"src": "14651:11:8"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nativeSrc": "14644:3:8",
																	"nodeType": "YulTypedName",
																	"src": "14644:3:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "15570:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "15570:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15575:4:8",
																		"nodeType": "YulLiteral",
																		"src": "15575:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15563:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "15563:6:8"
																},
																"nativeSrc": "15563:17:8",
																"nodeType": "YulFunctionCall",
																"src": "15563:17:8"
															},
															"nativeSrc": "15563:17:8",
															"nodeType": "YulExpressionStatement",
															"src": "15563:17:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "15604:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "15604:3:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15609:4:8",
																				"nodeType": "YulLiteral",
																				"src": "15609:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15600:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "15600:3:8"
																		},
																		"nativeSrc": "15600:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15600:14:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15616:4:8",
																		"nodeType": "YulLiteral",
																		"src": "15616:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15593:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "15593:6:8"
																},
																"nativeSrc": "15593:28:8",
																"nodeType": "YulFunctionCall",
																"src": "15593:28:8"
															},
															"nativeSrc": "15593:28:8",
															"nodeType": "YulExpressionStatement",
															"src": "15593:28:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "15645:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "15645:3:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15650:4:8",
																				"nodeType": "YulLiteral",
																				"src": "15650:4:8",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15641:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "15641:3:8"
																		},
																		"nativeSrc": "15641:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15641:14:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15657:4:8",
																		"nodeType": "YulLiteral",
																		"src": "15657:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15634:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "15634:6:8"
																},
																"nativeSrc": "15634:28:8",
																"nodeType": "YulFunctionCall",
																"src": "15634:28:8"
															},
															"nativeSrc": "15634:28:8",
															"nodeType": "YulExpressionStatement",
															"src": "15634:28:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "15686:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "15686:3:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15691:4:8",
																				"nodeType": "YulLiteral",
																				"src": "15691:4:8",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15682:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "15682:3:8"
																		},
																		"nativeSrc": "15682:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15682:14:8"
																	},
																	{
																		"name": "b",
																		"nativeSrc": "15698:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "15698:1:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15675:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "15675:6:8"
																},
																"nativeSrc": "15675:25:8",
																"nodeType": "YulFunctionCall",
																"src": "15675:25:8"
															},
															"nativeSrc": "15675:25:8",
															"nodeType": "YulExpressionStatement",
															"src": "15675:25:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "15724:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "15724:3:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15729:4:8",
																				"nodeType": "YulLiteral",
																				"src": "15729:4:8",
																				"type": "",
																				"value": "0x80"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15720:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "15720:3:8"
																		},
																		"nativeSrc": "15720:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15720:14:8"
																	},
																	{
																		"name": "e",
																		"nativeSrc": "15736:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "15736:1:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15713:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "15713:6:8"
																},
																"nativeSrc": "15713:25:8",
																"nodeType": "YulFunctionCall",
																"src": "15713:25:8"
															},
															"nativeSrc": "15713:25:8",
															"nodeType": "YulExpressionStatement",
															"src": "15713:25:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "15762:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "15762:3:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15767:4:8",
																				"nodeType": "YulLiteral",
																				"src": "15767:4:8",
																				"type": "",
																				"value": "0xa0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15758:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "15758:3:8"
																		},
																		"nativeSrc": "15758:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15758:14:8"
																	},
																	{
																		"name": "m",
																		"nativeSrc": "15774:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "15774:1:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15751:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "15751:6:8"
																},
																"nativeSrc": "15751:25:8",
																"nodeType": "YulFunctionCall",
																"src": "15751:25:8"
															},
															"nativeSrc": "15751:25:8",
															"nodeType": "YulExpressionStatement",
															"src": "15751:25:8"
														},
														{
															"nativeSrc": "15938:57:8",
															"nodeType": "YulAssignment",
															"src": "15938:57:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "15960:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "15960:3:8"
																		},
																		"nativeSrc": "15960:5:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15960:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15967:4:8",
																		"nodeType": "YulLiteral",
																		"src": "15967:4:8",
																		"type": "",
																		"value": "0x05"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "15973:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "15973:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15978:4:8",
																		"nodeType": "YulLiteral",
																		"src": "15978:4:8",
																		"type": "",
																		"value": "0xc0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15984:4:8",
																		"nodeType": "YulLiteral",
																		"src": "15984:4:8",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15990:4:8",
																		"nodeType": "YulLiteral",
																		"src": "15990:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "staticcall",
																	"nativeSrc": "15949:10:8",
																	"nodeType": "YulIdentifier",
																	"src": "15949:10:8"
																},
																"nativeSrc": "15949:46:8",
																"nodeType": "YulFunctionCall",
																"src": "15949:46:8"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "15938:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "15938:7:8"
																}
															]
														},
														{
															"nativeSrc": "16008:21:8",
															"nodeType": "YulAssignment",
															"src": "16008:21:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16024:4:8",
																		"nodeType": "YulLiteral",
																		"src": "16024:4:8",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "16018:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "16018:5:8"
																},
																"nativeSrc": "16018:11:8",
																"nodeType": "YulFunctionCall",
																"src": "16018:11:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "16008:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "16008:6:8"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2226,
														"isOffset": false,
														"isSlot": false,
														"src": "15698:1:8",
														"valueSize": 1
													},
													{
														"declaration": 2228,
														"isOffset": false,
														"isSlot": false,
														"src": "15736:1:8",
														"valueSize": 1
													},
													{
														"declaration": 2230,
														"isOffset": false,
														"isSlot": false,
														"src": "15774:1:8",
														"valueSize": 1
													},
													{
														"declaration": 2235,
														"isOffset": false,
														"isSlot": false,
														"src": "16008:6:8",
														"valueSize": 1
													},
													{
														"declaration": 2233,
														"isOffset": false,
														"isSlot": false,
														"src": "15938:7:8",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2245,
												"nodeType": "InlineAssembly",
												"src": "14601:1438:8"
											}
										]
									},
									"documentation": {
										"id": 2224,
										"nodeType": "StructuredDocumentation",
										"src": "13704:738:8",
										"text": " @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."
									},
									"id": 2247,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryModExp",
									"nameLocation": "14456:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2226,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "14474:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2247,
												"src": "14466:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14466:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2228,
												"mutability": "mutable",
												"name": "e",
												"nameLocation": "14485:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2247,
												"src": "14477:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14477:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2230,
												"mutability": "mutable",
												"name": "m",
												"nameLocation": "14496:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2247,
												"src": "14488:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14488:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14465:33:8"
									},
									"returnParameters": {
										"id": 2236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2233,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "14527:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2247,
												"src": "14522:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2232,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14522:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2235,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "14544:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2247,
												"src": "14536:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14536:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14521:30:8"
									},
									"scope": 3202,
									"src": "14447:1598:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2282,
										"nodeType": "Block",
										"src": "16242:179:8",
										"statements": [
											{
												"assignments": [
													2260,
													2262
												],
												"declarations": [
													{
														"constant": false,
														"id": 2260,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "16258:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 2282,
														"src": "16253:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2259,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "16253:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2262,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "16280:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 2282,
														"src": "16267:19:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2261,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "16267:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2268,
												"initialValue": {
													"arguments": [
														{
															"id": 2264,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2250,
															"src": "16300:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2265,
															"name": "e",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2252,
															"src": "16303:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2266,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2254,
															"src": "16306:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2263,
														"name": "tryModExp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2247,
															2329
														],
														"referencedDeclaration": 2329,
														"src": "16290:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 2267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16290:18:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16252:56:8"
											},
											{
												"condition": {
													"id": 2270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "16322:8:8",
													"subExpression": {
														"id": 2269,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2260,
														"src": "16323:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2279,
												"nodeType": "IfStatement",
												"src": "16318:74:8",
												"trueBody": {
													"id": 2278,
													"nodeType": "Block",
													"src": "16332:60:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2274,
																			"name": "Panic",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 384,
																			"src": "16358:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Panic_$384_$",
																				"typeString": "type(library Panic)"
																			}
																		},
																		"id": 2275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "16364:16:8",
																		"memberName": "DIVISION_BY_ZERO",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 351,
																		"src": "16358:22:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2271,
																		"name": "Panic",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 384,
																		"src": "16346:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Panic_$384_$",
																			"typeString": "type(library Panic)"
																		}
																	},
																	"id": 2273,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "16352:5:8",
																	"memberName": "panic",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 383,
																	"src": "16346:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 2276,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16346:35:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2277,
															"nodeType": "ExpressionStatement",
															"src": "16346:35:8"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2280,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2262,
													"src": "16408:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2258,
												"id": 2281,
												"nodeType": "Return",
												"src": "16401:13:8"
											}
										]
									},
									"documentation": {
										"id": 2248,
										"nodeType": "StructuredDocumentation",
										"src": "16051:85:8",
										"text": " @dev Variant of {modExp} that supports inputs of arbitrary length."
									},
									"id": 2283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "modExp",
									"nameLocation": "16150:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2250,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "16170:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2283,
												"src": "16157:14:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2249,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16157:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2252,
												"mutability": "mutable",
												"name": "e",
												"nameLocation": "16186:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2283,
												"src": "16173:14:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2251,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16173:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2254,
												"mutability": "mutable",
												"name": "m",
												"nameLocation": "16202:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2283,
												"src": "16189:14:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2253,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16189:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16156:48:8"
									},
									"returnParameters": {
										"id": 2258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2257,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2283,
												"src": "16228:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2256,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16228:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16227:14:8"
									},
									"scope": 3202,
									"src": "16141:280:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2328,
										"nodeType": "Block",
										"src": "16675:771:8",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 2298,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2290,
															"src": "16700:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2297,
														"name": "_zeroBytes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2362,
														"src": "16689:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (bytes memory) pure returns (bool)"
														}
													},
													"id": 2299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16689:13:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2307,
												"nodeType": "IfStatement",
												"src": "16685:47:8",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 2300,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16712:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2303,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16729:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2302,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "NewExpression",
																	"src": "16719:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (uint256) pure returns (bytes memory)"
																	},
																	"typeName": {
																		"id": 2301,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "16723:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	}
																},
																"id": 2304,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16719:12:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"id": 2305,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "16711:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "tuple(bool,bytes memory)"
														}
													},
													"functionReturnParameters": 2296,
													"id": 2306,
													"nodeType": "Return",
													"src": "16704:28:8"
												}
											},
											{
												"assignments": [
													2309
												],
												"declarations": [
													{
														"constant": false,
														"id": 2309,
														"mutability": "mutable",
														"name": "mLen",
														"nameLocation": "16751:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 2328,
														"src": "16743:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2308,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16743:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2312,
												"initialValue": {
													"expression": {
														"id": 2310,
														"name": "m",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2290,
														"src": "16758:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"id": 2311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "16760:6:8",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "16758:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16743:23:8"
											},
											{
												"expression": {
													"id": 2325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2313,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2295,
														"src": "16848:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 2316,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2286,
																	"src": "16874:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 2317,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "16876:6:8",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "16874:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 2318,
																	"name": "e",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2288,
																	"src": "16884:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 2319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "16886:6:8",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "16884:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2320,
																"name": "mLen",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2309,
																"src": "16894:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2321,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2286,
																"src": "16900:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															{
																"id": 2322,
																"name": "e",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2288,
																"src": "16903:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															{
																"id": 2323,
																"name": "m",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2290,
																"src": "16906:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 2314,
																"name": "abi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967295,
																"src": "16857:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_abi",
																	"typeString": "abi"
																}
															},
															"id": 2315,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "16861:12:8",
															"memberName": "encodePacked",
															"nodeType": "MemberAccess",
															"src": "16857:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																"typeString": "function () pure returns (bytes memory)"
															}
														},
														"id": 2324,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16857:51:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"src": "16848:60:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"id": 2326,
												"nodeType": "ExpressionStatement",
												"src": "16848:60:8"
											},
											{
												"AST": {
													"nativeSrc": "16944:496:8",
													"nodeType": "YulBlock",
													"src": "16944:496:8",
													"statements": [
														{
															"nativeSrc": "16958:32:8",
															"nodeType": "YulVariableDeclaration",
															"src": "16958:32:8",
															"value": {
																"arguments": [
																	{
																		"name": "result",
																		"nativeSrc": "16977:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "16977:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16985:4:8",
																		"nodeType": "YulLiteral",
																		"src": "16985:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16973:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "16973:3:8"
																},
																"nativeSrc": "16973:17:8",
																"nodeType": "YulFunctionCall",
																"src": "16973:17:8"
															},
															"variables": [
																{
																	"name": "dataPtr",
																	"nativeSrc": "16962:7:8",
																	"nodeType": "YulTypedName",
																	"src": "16962:7:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "17080:73:8",
															"nodeType": "YulAssignment",
															"src": "17080:73:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "17102:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "17102:3:8"
																		},
																		"nativeSrc": "17102:5:8",
																		"nodeType": "YulFunctionCall",
																		"src": "17102:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17109:4:8",
																		"nodeType": "YulLiteral",
																		"src": "17109:4:8",
																		"type": "",
																		"value": "0x05"
																	},
																	{
																		"name": "dataPtr",
																		"nativeSrc": "17115:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "17115:7:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "result",
																				"nativeSrc": "17130:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "17130:6:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "17124:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "17124:5:8"
																		},
																		"nativeSrc": "17124:13:8",
																		"nodeType": "YulFunctionCall",
																		"src": "17124:13:8"
																	},
																	{
																		"name": "dataPtr",
																		"nativeSrc": "17139:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "17139:7:8"
																	},
																	{
																		"name": "mLen",
																		"nativeSrc": "17148:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "17148:4:8"
																	}
																],
																"functionName": {
																	"name": "staticcall",
																	"nativeSrc": "17091:10:8",
																	"nodeType": "YulIdentifier",
																	"src": "17091:10:8"
																},
																"nativeSrc": "17091:62:8",
																"nodeType": "YulFunctionCall",
																"src": "17091:62:8"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "17080:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "17080:7:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "result",
																		"nativeSrc": "17309:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "17309:6:8"
																	},
																	{
																		"name": "mLen",
																		"nativeSrc": "17317:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "17317:4:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17302:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "17302:6:8"
																},
																"nativeSrc": "17302:20:8",
																"nodeType": "YulFunctionCall",
																"src": "17302:20:8"
															},
															"nativeSrc": "17302:20:8",
															"nodeType": "YulExpressionStatement",
															"src": "17302:20:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17405:4:8",
																		"nodeType": "YulLiteral",
																		"src": "17405:4:8",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"arguments": [
																			{
																				"name": "dataPtr",
																				"nativeSrc": "17415:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "17415:7:8"
																			},
																			{
																				"name": "mLen",
																				"nativeSrc": "17424:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "17424:4:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17411:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "17411:3:8"
																		},
																		"nativeSrc": "17411:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "17411:18:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17398:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "17398:6:8"
																},
																"nativeSrc": "17398:32:8",
																"nodeType": "YulFunctionCall",
																"src": "17398:32:8"
															},
															"nativeSrc": "17398:32:8",
															"nodeType": "YulExpressionStatement",
															"src": "17398:32:8"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2309,
														"isOffset": false,
														"isSlot": false,
														"src": "17148:4:8",
														"valueSize": 1
													},
													{
														"declaration": 2309,
														"isOffset": false,
														"isSlot": false,
														"src": "17317:4:8",
														"valueSize": 1
													},
													{
														"declaration": 2309,
														"isOffset": false,
														"isSlot": false,
														"src": "17424:4:8",
														"valueSize": 1
													},
													{
														"declaration": 2295,
														"isOffset": false,
														"isSlot": false,
														"src": "16977:6:8",
														"valueSize": 1
													},
													{
														"declaration": 2295,
														"isOffset": false,
														"isSlot": false,
														"src": "17130:6:8",
														"valueSize": 1
													},
													{
														"declaration": 2295,
														"isOffset": false,
														"isSlot": false,
														"src": "17309:6:8",
														"valueSize": 1
													},
													{
														"declaration": 2293,
														"isOffset": false,
														"isSlot": false,
														"src": "17080:7:8",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2327,
												"nodeType": "InlineAssembly",
												"src": "16919:521:8"
											}
										]
									},
									"documentation": {
										"id": 2284,
										"nodeType": "StructuredDocumentation",
										"src": "16427:88:8",
										"text": " @dev Variant of {tryModExp} that supports inputs of arbitrary length."
									},
									"id": 2329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryModExp",
									"nameLocation": "16529:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2286,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "16561:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2329,
												"src": "16548:14:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2285,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16548:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2288,
												"mutability": "mutable",
												"name": "e",
												"nameLocation": "16585:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2329,
												"src": "16572:14:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2287,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16572:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2290,
												"mutability": "mutable",
												"name": "m",
												"nameLocation": "16609:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2329,
												"src": "16596:14:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2289,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16596:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16538:78:8"
									},
									"returnParameters": {
										"id": 2296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2293,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "16645:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2329,
												"src": "16640:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2292,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16640:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2295,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "16667:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2329,
												"src": "16654:19:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2294,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16654:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16639:35:8"
									},
									"scope": 3202,
									"src": "16520:926:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2361,
										"nodeType": "Block",
										"src": "17601:176:8",
										"statements": [
											{
												"body": {
													"id": 2357,
													"nodeType": "Block",
													"src": "17658:92:8",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																},
																"id": 2352,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 2348,
																		"name": "byteArray",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2332,
																		"src": "17676:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2350,
																	"indexExpression": {
																		"id": 2349,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2338,
																		"src": "17686:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "17676:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2351,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17692:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "17676:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2356,
															"nodeType": "IfStatement",
															"src": "17672:68:8",
															"trueBody": {
																"id": 2355,
																"nodeType": "Block",
																"src": "17695:45:8",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "66616c7365",
																			"id": 2353,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17720:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "false"
																		},
																		"functionReturnParameters": 2336,
																		"id": 2354,
																		"nodeType": "Return",
																		"src": "17713:12:8"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2341,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2338,
														"src": "17631:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2342,
															"name": "byteArray",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2332,
															"src": "17635:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2343,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17645:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17635:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17631:20:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2358,
												"initializationExpression": {
													"assignments": [
														2338
													],
													"declarations": [
														{
															"constant": false,
															"id": 2338,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "17624:1:8",
															"nodeType": "VariableDeclaration",
															"scope": 2358,
															"src": "17616:9:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2337,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "17616:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2340,
													"initialValue": {
														"hexValue": "30",
														"id": 2339,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17628:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "17616:13:8"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 2346,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "17653:3:8",
														"subExpression": {
															"id": 2345,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2338,
															"src": "17655:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2347,
													"nodeType": "ExpressionStatement",
													"src": "17653:3:8"
												},
												"nodeType": "ForStatement",
												"src": "17611:139:8"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2359,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "17766:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2336,
												"id": 2360,
												"nodeType": "Return",
												"src": "17759:11:8"
											}
										]
									},
									"documentation": {
										"id": 2330,
										"nodeType": "StructuredDocumentation",
										"src": "17452:72:8",
										"text": " @dev Returns whether the provided byte array is zero."
									},
									"id": 2362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_zeroBytes",
									"nameLocation": "17538:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2332,
												"mutability": "mutable",
												"name": "byteArray",
												"nameLocation": "17562:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 2362,
												"src": "17549:22:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2331,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17549:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17548:24:8"
									},
									"returnParameters": {
										"id": 2336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2362,
												"src": "17595:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2334,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17595:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17594:6:8"
									},
									"scope": 3202,
									"src": "17529:248:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2580,
										"nodeType": "Block",
										"src": "18137:5124:8",
										"statements": [
											{
												"id": 2579,
												"nodeType": "UncheckedBlock",
												"src": "18147:5108:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2370,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2365,
																"src": "18241:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "31",
																"id": 2371,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18246:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "18241:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2376,
														"nodeType": "IfStatement",
														"src": "18237:53:8",
														"trueBody": {
															"id": 2375,
															"nodeType": "Block",
															"src": "18249:41:8",
															"statements": [
																{
																	"expression": {
																		"id": 2373,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2365,
																		"src": "18274:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2369,
																	"id": 2374,
																	"nodeType": "Return",
																	"src": "18267:8:8"
																}
															]
														}
													},
													{
														"assignments": [
															2378
														],
														"declarations": [
															{
																"constant": false,
																"id": 2378,
																"mutability": "mutable",
																"name": "aa",
																"nameLocation": "19225:2:8",
																"nodeType": "VariableDeclaration",
																"scope": 2579,
																"src": "19217:10:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2377,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "19217:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2380,
														"initialValue": {
															"id": 2379,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2365,
															"src": "19230:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "19217:14:8"
													},
													{
														"assignments": [
															2382
														],
														"declarations": [
															{
																"constant": false,
																"id": 2382,
																"mutability": "mutable",
																"name": "xn",
																"nameLocation": "19253:2:8",
																"nodeType": "VariableDeclaration",
																"scope": 2579,
																"src": "19245:10:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2381,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "19245:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2384,
														"initialValue": {
															"hexValue": "31",
															"id": 2383,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19258:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "19245:14:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2385,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2378,
																"src": "19278:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																			"typeString": "int_const 3402...(31 digits omitted)...1456"
																		},
																		"id": 2388,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 2386,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19285:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "313238",
																			"id": 2387,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19290:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "19285:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																			"typeString": "int_const 3402...(31 digits omitted)...1456"
																		}
																	}
																],
																"id": 2389,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19284:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																	"typeString": "int_const 3402...(31 digits omitted)...1456"
																}
															},
															"src": "19278:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2400,
														"nodeType": "IfStatement",
														"src": "19274:92:8",
														"trueBody": {
															"id": 2399,
															"nodeType": "Block",
															"src": "19296:70:8",
															"statements": [
																{
																	"expression": {
																		"id": 2393,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2391,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2378,
																			"src": "19314:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2392,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19321:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "19314:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2394,
																	"nodeType": "ExpressionStatement",
																	"src": "19314:10:8"
																},
																{
																	"expression": {
																		"id": 2397,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2395,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2382,
																			"src": "19342:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2396,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19349:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "19342:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2398,
																	"nodeType": "ExpressionStatement",
																	"src": "19342:9:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2401,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2378,
																"src": "19383:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_18446744073709551616_by_1",
																			"typeString": "int_const 18446744073709551616"
																		},
																		"id": 2404,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 2402,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19390:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "3634",
																			"id": 2403,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19395:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "19390:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18446744073709551616_by_1",
																			"typeString": "int_const 18446744073709551616"
																		}
																	}
																],
																"id": 2405,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19389:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18446744073709551616_by_1",
																	"typeString": "int_const 18446744073709551616"
																}
															},
															"src": "19383:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2416,
														"nodeType": "IfStatement",
														"src": "19379:90:8",
														"trueBody": {
															"id": 2415,
															"nodeType": "Block",
															"src": "19400:69:8",
															"statements": [
																{
																	"expression": {
																		"id": 2409,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2407,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2378,
																			"src": "19418:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2408,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19425:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "19418:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2410,
																	"nodeType": "ExpressionStatement",
																	"src": "19418:9:8"
																},
																{
																	"expression": {
																		"id": 2413,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2411,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2382,
																			"src": "19445:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2412,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19452:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "19445:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2414,
																	"nodeType": "ExpressionStatement",
																	"src": "19445:9:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2417,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2378,
																"src": "19486:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_4294967296_by_1",
																			"typeString": "int_const 4294967296"
																		},
																		"id": 2420,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 2418,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19493:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "3332",
																			"id": 2419,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19498:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "19493:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_4294967296_by_1",
																			"typeString": "int_const 4294967296"
																		}
																	}
																],
																"id": 2421,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19492:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																}
															},
															"src": "19486:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2432,
														"nodeType": "IfStatement",
														"src": "19482:90:8",
														"trueBody": {
															"id": 2431,
															"nodeType": "Block",
															"src": "19503:69:8",
															"statements": [
																{
																	"expression": {
																		"id": 2425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2423,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2378,
																			"src": "19521:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19528:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "19521:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2426,
																	"nodeType": "ExpressionStatement",
																	"src": "19521:9:8"
																},
																{
																	"expression": {
																		"id": 2429,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2427,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2382,
																			"src": "19548:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2428,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19555:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "19548:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2430,
																	"nodeType": "ExpressionStatement",
																	"src": "19548:9:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2433,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2378,
																"src": "19589:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_65536_by_1",
																			"typeString": "int_const 65536"
																		},
																		"id": 2436,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 2434,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19596:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "3136",
																			"id": 2435,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19601:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "19596:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_65536_by_1",
																			"typeString": "int_const 65536"
																		}
																	}
																],
																"id": 2437,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19595:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_65536_by_1",
																	"typeString": "int_const 65536"
																}
															},
															"src": "19589:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2448,
														"nodeType": "IfStatement",
														"src": "19585:89:8",
														"trueBody": {
															"id": 2447,
															"nodeType": "Block",
															"src": "19606:68:8",
															"statements": [
																{
																	"expression": {
																		"id": 2441,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2439,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2378,
																			"src": "19624:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2440,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19631:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "19624:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2442,
																	"nodeType": "ExpressionStatement",
																	"src": "19624:9:8"
																},
																{
																	"expression": {
																		"id": 2445,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2443,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2382,
																			"src": "19651:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2444,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19658:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "19651:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2446,
																	"nodeType": "ExpressionStatement",
																	"src": "19651:8:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2449,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2378,
																"src": "19691:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_256_by_1",
																			"typeString": "int_const 256"
																		},
																		"id": 2452,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 2450,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19698:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "38",
																			"id": 2451,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19703:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "19698:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_256_by_1",
																			"typeString": "int_const 256"
																		}
																	}
																],
																"id": 2453,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19697:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_256_by_1",
																	"typeString": "int_const 256"
																}
															},
															"src": "19691:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2464,
														"nodeType": "IfStatement",
														"src": "19687:87:8",
														"trueBody": {
															"id": 2463,
															"nodeType": "Block",
															"src": "19707:67:8",
															"statements": [
																{
																	"expression": {
																		"id": 2457,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2455,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2378,
																			"src": "19725:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2456,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19732:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "19725:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2458,
																	"nodeType": "ExpressionStatement",
																	"src": "19725:8:8"
																},
																{
																	"expression": {
																		"id": 2461,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2459,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2382,
																			"src": "19751:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2460,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19758:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "19751:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2462,
																	"nodeType": "ExpressionStatement",
																	"src": "19751:8:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2465,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2378,
																"src": "19791:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		"id": 2468,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 2466,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19798:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "34",
																			"id": 2467,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19803:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "19798:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		}
																	}
																],
																"id": 2469,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19797:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_16_by_1",
																	"typeString": "int_const 16"
																}
															},
															"src": "19791:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2480,
														"nodeType": "IfStatement",
														"src": "19787:87:8",
														"trueBody": {
															"id": 2479,
															"nodeType": "Block",
															"src": "19807:67:8",
															"statements": [
																{
																	"expression": {
																		"id": 2473,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2471,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2378,
																			"src": "19825:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2472,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19832:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "19825:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2474,
																	"nodeType": "ExpressionStatement",
																	"src": "19825:8:8"
																},
																{
																	"expression": {
																		"id": 2477,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2475,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2382,
																			"src": "19851:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2476,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19858:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "19851:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2478,
																	"nodeType": "ExpressionStatement",
																	"src": "19851:8:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2481,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2378,
																"src": "19891:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_4_by_1",
																			"typeString": "int_const 4"
																		},
																		"id": 2484,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 2482,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19898:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "32",
																			"id": 2483,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19903:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "19898:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_4_by_1",
																			"typeString": "int_const 4"
																		}
																	}
																],
																"id": 2485,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19897:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4_by_1",
																	"typeString": "int_const 4"
																}
															},
															"src": "19891:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2492,
														"nodeType": "IfStatement",
														"src": "19887:61:8",
														"trueBody": {
															"id": 2491,
															"nodeType": "Block",
															"src": "19907:41:8",
															"statements": [
																{
																	"expression": {
																		"id": 2489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2487,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2382,
																			"src": "19925:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2488,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19932:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "19925:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2490,
																	"nodeType": "ExpressionStatement",
																	"src": "19925:8:8"
																}
															]
														}
													},
													{
														"expression": {
															"id": 2500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2493,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2382,
																"src": "20368:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2499,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2496,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "33",
																				"id": 2494,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20374:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_3_by_1",
																					"typeString": "int_const 3"
																				},
																				"value": "3"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 2495,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2382,
																				"src": "20378:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "20374:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2497,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "20373:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2498,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20385:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "20373:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20368:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2501,
														"nodeType": "ExpressionStatement",
														"src": "20368:18:8"
													},
													{
														"expression": {
															"id": 2511,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2502,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2382,
																"src": "22273:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2503,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2382,
																				"src": "22279:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2506,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2504,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2365,
																					"src": "22284:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2505,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2382,
																					"src": "22288:2:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22284:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "22279:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2508,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "22278:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2509,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22295:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22278:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22273:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2512,
														"nodeType": "ExpressionStatement",
														"src": "22273:23:8"
													},
													{
														"expression": {
															"id": 2522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2513,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2382,
																"src": "22382:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2521,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2518,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2514,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2382,
																				"src": "22388:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2517,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2515,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2365,
																					"src": "22393:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2516,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2382,
																					"src": "22397:2:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22393:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "22388:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2519,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "22387:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2520,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22404:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22387:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22382:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2523,
														"nodeType": "ExpressionStatement",
														"src": "22382:23:8"
													},
													{
														"expression": {
															"id": 2533,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2524,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2382,
																"src": "22493:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2532,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2529,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2525,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2382,
																				"src": "22499:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2528,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2526,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2365,
																					"src": "22504:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2527,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2382,
																					"src": "22508:2:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22504:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "22499:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2530,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "22498:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22515:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22498:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22493:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2534,
														"nodeType": "ExpressionStatement",
														"src": "22493:23:8"
													},
													{
														"expression": {
															"id": 2544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2535,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2382,
																"src": "22602:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2543,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2540,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2536,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2382,
																				"src": "22608:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2539,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2537,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2365,
																					"src": "22613:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2538,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2382,
																					"src": "22617:2:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22613:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "22608:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2541,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "22607:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22624:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22607:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22602:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2545,
														"nodeType": "ExpressionStatement",
														"src": "22602:23:8"
													},
													{
														"expression": {
															"id": 2555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2546,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2382,
																"src": "22712:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2554,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2551,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2547,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2382,
																				"src": "22718:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2550,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2548,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2365,
																					"src": "22723:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2549,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2382,
																					"src": "22727:2:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22723:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "22718:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2552,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "22717:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22734:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22717:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22712:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2556,
														"nodeType": "ExpressionStatement",
														"src": "22712:23:8"
													},
													{
														"expression": {
															"id": 2566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2557,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2382,
																"src": "22822:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2558,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2382,
																				"src": "22828:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2561,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2559,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2365,
																					"src": "22833:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2560,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2382,
																					"src": "22837:2:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22833:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "22828:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2563,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "22827:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22844:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22827:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22822:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2567,
														"nodeType": "ExpressionStatement",
														"src": "22822:23:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2568,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2382,
																"src": "23211:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2575,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2571,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2382,
																			"src": "23232:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2574,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2572,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2365,
																				"src": "23237:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 2573,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2382,
																				"src": "23241:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "23237:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "23232:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 2569,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4967,
																		"src": "23216:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$4967_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 2570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "23225:6:8",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4966,
																	"src": "23216:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 2576,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23216:28:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23211:33:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2369,
														"id": 2578,
														"nodeType": "Return",
														"src": "23204:40:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2363,
										"nodeType": "StructuredDocumentation",
										"src": "17783:292:8",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."
									},
									"id": 2581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "18089:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2365,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "18102:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2581,
												"src": "18094:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18094:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18093:11:8"
									},
									"returnParameters": {
										"id": 2369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2368,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2581,
												"src": "18128:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18128:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18127:9:8"
									},
									"scope": 3202,
									"src": "18080:5181:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2614,
										"nodeType": "Block",
										"src": "23434:171:8",
										"statements": [
											{
												"id": 2613,
												"nodeType": "UncheckedBlock",
												"src": "23444:155:8",
												"statements": [
													{
														"assignments": [
															2593
														],
														"declarations": [
															{
																"constant": false,
																"id": 2593,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "23476:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 2613,
																"src": "23468:14:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2592,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "23468:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2597,
														"initialValue": {
															"arguments": [
																{
																	"id": 2595,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2584,
																	"src": "23490:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2594,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2581,
																	2615
																],
																"referencedDeclaration": 2581,
																"src": "23485:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2596,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23485:7:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "23468:24:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2598,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2593,
																"src": "23513:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 2609,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 2602,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2587,
																					"src": "23555:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1608",
																						"typeString": "enum Math.Rounding"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_enum$_Rounding_$1608",
																						"typeString": "enum Math.Rounding"
																					}
																				],
																				"id": 2601,
																				"name": "unsignedRoundsUp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3201,
																				"src": "23538:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1608_$returns$_t_bool_$",
																					"typeString": "function (enum Math.Rounding) pure returns (bool)"
																				}
																			},
																			"id": 2603,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "23538:26:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2608,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2606,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2604,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2593,
																					"src": "23568:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 2605,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2593,
																					"src": "23577:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "23568:15:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 2607,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2584,
																				"src": "23586:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "23568:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "23538:49:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 2599,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4967,
																		"src": "23522:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$4967_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 2600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "23531:6:8",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4966,
																	"src": "23522:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 2610,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23522:66:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23513:75:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2591,
														"id": 2612,
														"nodeType": "Return",
														"src": "23506:82:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2582,
										"nodeType": "StructuredDocumentation",
										"src": "23267:86:8",
										"text": " @dev Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "23367:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2584,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "23380:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2615,
												"src": "23372:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23372:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2587,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "23392:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2615,
												"src": "23383:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1608",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2586,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2585,
														"name": "Rounding",
														"nameLocations": [
															"23383:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1608,
														"src": "23383:8:8"
													},
													"referencedDeclaration": 1608,
													"src": "23383:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1608",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23371:30:8"
									},
									"returnParameters": {
										"id": 2591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2590,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2615,
												"src": "23425:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23425:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23424:9:8"
									},
									"scope": 3202,
									"src": "23358:247:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2810,
										"nodeType": "Block",
										"src": "23796:981:8",
										"statements": [
											{
												"assignments": [
													2624
												],
												"declarations": [
													{
														"constant": false,
														"id": 2624,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "23814:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 2810,
														"src": "23806:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2623,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "23806:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2626,
												"initialValue": {
													"hexValue": "30",
													"id": 2625,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "23823:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23806:18:8"
											},
											{
												"assignments": [
													2628
												],
												"declarations": [
													{
														"constant": false,
														"id": 2628,
														"mutability": "mutable",
														"name": "exp",
														"nameLocation": "23842:3:8",
														"nodeType": "VariableDeclaration",
														"scope": 2810,
														"src": "23834:11:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2627,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "23834:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2629,
												"nodeType": "VariableDeclarationStatement",
												"src": "23834:11:8"
											},
											{
												"id": 2807,
												"nodeType": "UncheckedBlock",
												"src": "23855:893:8",
												"statements": [
													{
														"expression": {
															"id": 2644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2630,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2628,
																"src": "23879:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2643,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "313238",
																	"id": 2631,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23885:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2641,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2634,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2618,
																				"src": "23907:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_340282366920938463463374607431768211455_by_1",
																					"typeString": "int_const 3402...(31 digits omitted)...1455"
																				},
																				"id": 2640,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																								"typeString": "int_const 3402...(31 digits omitted)...1456"
																							},
																							"id": 2637,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 2635,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "23916:1:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "313238",
																								"id": 2636,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "23921:3:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_128_by_1",
																									"typeString": "int_const 128"
																								},
																								"value": "128"
																							},
																							"src": "23916:8:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																								"typeString": "int_const 3402...(31 digits omitted)...1456"
																							}
																						}
																					],
																					"id": 2638,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "23915:10:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																						"typeString": "int_const 3402...(31 digits omitted)...1456"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 2639,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "23928:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "23915:14:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_340282366920938463463374607431768211455_by_1",
																					"typeString": "int_const 3402...(31 digits omitted)...1455"
																				}
																			},
																			"src": "23907:22:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 2632,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4967,
																			"src": "23891:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$4967_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 2633,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "23900:6:8",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 4966,
																		"src": "23891:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 2642,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23891:39:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "23885:45:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23879:51:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2645,
														"nodeType": "ExpressionStatement",
														"src": "23879:51:8"
													},
													{
														"expression": {
															"id": 2648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2646,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2618,
																"src": "23944:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 2647,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2628,
																"src": "23954:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23944:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2649,
														"nodeType": "ExpressionStatement",
														"src": "23944:13:8"
													},
													{
														"expression": {
															"id": 2652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2650,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2624,
																"src": "23971:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 2651,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2628,
																"src": "23981:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23971:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2653,
														"nodeType": "ExpressionStatement",
														"src": "23971:13:8"
													},
													{
														"expression": {
															"id": 2668,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2654,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2628,
																"src": "23999:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2667,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3634",
																	"id": 2655,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24005:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2665,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2658,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2618,
																				"src": "24026:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_18446744073709551615_by_1",
																					"typeString": "int_const 18446744073709551615"
																				},
																				"id": 2664,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_18446744073709551616_by_1",
																								"typeString": "int_const 18446744073709551616"
																							},
																							"id": 2661,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 2659,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24035:1:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "3634",
																								"id": 2660,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24040:2:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_64_by_1",
																									"typeString": "int_const 64"
																								},
																								"value": "64"
																							},
																							"src": "24035:7:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_18446744073709551616_by_1",
																								"typeString": "int_const 18446744073709551616"
																							}
																						}
																					],
																					"id": 2662,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24034:9:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_18446744073709551616_by_1",
																						"typeString": "int_const 18446744073709551616"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 2663,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "24046:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "24034:13:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_18446744073709551615_by_1",
																					"typeString": "int_const 18446744073709551615"
																				}
																			},
																			"src": "24026:21:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 2656,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4967,
																			"src": "24010:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$4967_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 2657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "24019:6:8",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 4966,
																		"src": "24010:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 2666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24010:38:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24005:43:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23999:49:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2669,
														"nodeType": "ExpressionStatement",
														"src": "23999:49:8"
													},
													{
														"expression": {
															"id": 2672,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2670,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2618,
																"src": "24062:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 2671,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2628,
																"src": "24072:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24062:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2673,
														"nodeType": "ExpressionStatement",
														"src": "24062:13:8"
													},
													{
														"expression": {
															"id": 2676,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2674,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2624,
																"src": "24089:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 2675,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2628,
																"src": "24099:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24089:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2677,
														"nodeType": "ExpressionStatement",
														"src": "24089:13:8"
													},
													{
														"expression": {
															"id": 2692,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2678,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2628,
																"src": "24117:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2691,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3332",
																	"id": 2679,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24123:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2689,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2682,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2618,
																				"src": "24144:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_4294967295_by_1",
																					"typeString": "int_const 4294967295"
																				},
																				"id": 2688,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_4294967296_by_1",
																								"typeString": "int_const 4294967296"
																							},
																							"id": 2685,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 2683,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24153:1:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "3332",
																								"id": 2684,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24158:2:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								},
																								"value": "32"
																							},
																							"src": "24153:7:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_4294967296_by_1",
																								"typeString": "int_const 4294967296"
																							}
																						}
																					],
																					"id": 2686,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24152:9:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_4294967296_by_1",
																						"typeString": "int_const 4294967296"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 2687,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "24164:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "24152:13:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4294967295_by_1",
																					"typeString": "int_const 4294967295"
																				}
																			},
																			"src": "24144:21:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 2680,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4967,
																			"src": "24128:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$4967_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 2681,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "24137:6:8",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 4966,
																		"src": "24128:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 2690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24128:38:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24123:43:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24117:49:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2693,
														"nodeType": "ExpressionStatement",
														"src": "24117:49:8"
													},
													{
														"expression": {
															"id": 2696,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2694,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2618,
																"src": "24180:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 2695,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2628,
																"src": "24190:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24180:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2697,
														"nodeType": "ExpressionStatement",
														"src": "24180:13:8"
													},
													{
														"expression": {
															"id": 2700,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2698,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2624,
																"src": "24207:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 2699,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2628,
																"src": "24217:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24207:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2701,
														"nodeType": "ExpressionStatement",
														"src": "24207:13:8"
													},
													{
														"expression": {
															"id": 2716,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2702,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2628,
																"src": "24235:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2715,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3136",
																	"id": 2703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24241:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2713,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2706,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2618,
																				"src": "24262:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_65535_by_1",
																					"typeString": "int_const 65535"
																				},
																				"id": 2712,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_65536_by_1",
																								"typeString": "int_const 65536"
																							},
																							"id": 2709,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 2707,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24271:1:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "3136",
																								"id": 2708,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24276:2:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_16_by_1",
																									"typeString": "int_const 16"
																								},
																								"value": "16"
																							},
																							"src": "24271:7:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_65536_by_1",
																								"typeString": "int_const 65536"
																							}
																						}
																					],
																					"id": 2710,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24270:9:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_65536_by_1",
																						"typeString": "int_const 65536"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 2711,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "24282:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "24270:13:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_65535_by_1",
																					"typeString": "int_const 65535"
																				}
																			},
																			"src": "24262:21:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 2704,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4967,
																			"src": "24246:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$4967_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 2705,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "24255:6:8",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 4966,
																		"src": "24246:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 2714,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24246:38:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24241:43:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24235:49:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2717,
														"nodeType": "ExpressionStatement",
														"src": "24235:49:8"
													},
													{
														"expression": {
															"id": 2720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2718,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2618,
																"src": "24298:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 2719,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2628,
																"src": "24308:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24298:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2721,
														"nodeType": "ExpressionStatement",
														"src": "24298:13:8"
													},
													{
														"expression": {
															"id": 2724,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2722,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2624,
																"src": "24325:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 2723,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2628,
																"src": "24335:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24325:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2725,
														"nodeType": "ExpressionStatement",
														"src": "24325:13:8"
													},
													{
														"expression": {
															"id": 2740,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2726,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2628,
																"src": "24353:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2739,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "38",
																	"id": 2727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24359:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2737,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2730,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2618,
																				"src": "24379:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"id": 2736,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_256_by_1",
																								"typeString": "int_const 256"
																							},
																							"id": 2733,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 2731,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24388:1:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "38",
																								"id": 2732,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24393:1:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_8_by_1",
																									"typeString": "int_const 8"
																								},
																								"value": "8"
																							},
																							"src": "24388:6:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_256_by_1",
																								"typeString": "int_const 256"
																							}
																						}
																					],
																					"id": 2734,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24387:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_256_by_1",
																						"typeString": "int_const 256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 2735,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "24398:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "24387:12:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				}
																			},
																			"src": "24379:20:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 2728,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4967,
																			"src": "24363:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$4967_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 2729,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "24372:6:8",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 4966,
																		"src": "24363:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 2738,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24363:37:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24359:41:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24353:47:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2741,
														"nodeType": "ExpressionStatement",
														"src": "24353:47:8"
													},
													{
														"expression": {
															"id": 2744,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2742,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2618,
																"src": "24414:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 2743,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2628,
																"src": "24424:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24414:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2745,
														"nodeType": "ExpressionStatement",
														"src": "24414:13:8"
													},
													{
														"expression": {
															"id": 2748,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2746,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2624,
																"src": "24441:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 2747,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2628,
																"src": "24451:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24441:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2749,
														"nodeType": "ExpressionStatement",
														"src": "24441:13:8"
													},
													{
														"expression": {
															"id": 2764,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2750,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2628,
																"src": "24469:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2763,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "34",
																	"id": 2751,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24475:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2761,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2754,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2618,
																				"src": "24495:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_15_by_1",
																					"typeString": "int_const 15"
																				},
																				"id": 2760,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_16_by_1",
																								"typeString": "int_const 16"
																							},
																							"id": 2757,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 2755,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24504:1:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "34",
																								"id": 2756,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24509:1:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_4_by_1",
																									"typeString": "int_const 4"
																								},
																								"value": "4"
																							},
																							"src": "24504:6:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_16_by_1",
																								"typeString": "int_const 16"
																							}
																						}
																					],
																					"id": 2758,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24503:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_16_by_1",
																						"typeString": "int_const 16"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 2759,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "24514:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "24503:12:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_15_by_1",
																					"typeString": "int_const 15"
																				}
																			},
																			"src": "24495:20:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 2752,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4967,
																			"src": "24479:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$4967_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 2753,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "24488:6:8",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 4966,
																		"src": "24479:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 2762,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24479:37:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24475:41:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24469:47:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2765,
														"nodeType": "ExpressionStatement",
														"src": "24469:47:8"
													},
													{
														"expression": {
															"id": 2768,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2766,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2618,
																"src": "24530:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 2767,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2628,
																"src": "24540:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24530:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2769,
														"nodeType": "ExpressionStatement",
														"src": "24530:13:8"
													},
													{
														"expression": {
															"id": 2772,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2770,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2624,
																"src": "24557:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 2771,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2628,
																"src": "24567:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24557:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2773,
														"nodeType": "ExpressionStatement",
														"src": "24557:13:8"
													},
													{
														"expression": {
															"id": 2788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2774,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2628,
																"src": "24585:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2787,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2775,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24591:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2785,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2778,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2618,
																				"src": "24611:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_3_by_1",
																					"typeString": "int_const 3"
																				},
																				"id": 2784,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_4_by_1",
																								"typeString": "int_const 4"
																							},
																							"id": 2781,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 2779,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24620:1:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "32",
																								"id": 2780,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24625:1:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_2_by_1",
																									"typeString": "int_const 2"
																								},
																								"value": "2"
																							},
																							"src": "24620:6:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_4_by_1",
																								"typeString": "int_const 4"
																							}
																						}
																					],
																					"id": 2782,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24619:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_4_by_1",
																						"typeString": "int_const 4"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 2783,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "24630:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "24619:12:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_3_by_1",
																					"typeString": "int_const 3"
																				}
																			},
																			"src": "24611:20:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 2776,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4967,
																			"src": "24595:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$4967_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 2777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "24604:6:8",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 4966,
																		"src": "24595:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 2786,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24595:37:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24591:41:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24585:47:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2789,
														"nodeType": "ExpressionStatement",
														"src": "24585:47:8"
													},
													{
														"expression": {
															"id": 2792,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2790,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2618,
																"src": "24646:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 2791,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2628,
																"src": "24656:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24646:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2793,
														"nodeType": "ExpressionStatement",
														"src": "24646:13:8"
													},
													{
														"expression": {
															"id": 2796,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2794,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2624,
																"src": "24673:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 2795,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2628,
																"src": "24683:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24673:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2797,
														"nodeType": "ExpressionStatement",
														"src": "24673:13:8"
													},
													{
														"expression": {
															"id": 2805,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2798,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2624,
																"src": "24701:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2803,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2801,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2618,
																			"src": "24727:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2802,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24735:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "24727:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 2799,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4967,
																		"src": "24711:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$4967_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 2800,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "24720:6:8",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4966,
																	"src": "24711:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 2804,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24711:26:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24701:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2806,
														"nodeType": "ExpressionStatement",
														"src": "24701:36:8"
													}
												]
											},
											{
												"expression": {
													"id": 2808,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2624,
													"src": "24764:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2622,
												"id": 2809,
												"nodeType": "Return",
												"src": "24757:13:8"
											}
										]
									},
									"documentation": {
										"id": 2616,
										"nodeType": "StructuredDocumentation",
										"src": "23611:119:8",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2811,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "23744:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2618,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23757:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2811,
												"src": "23749:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23749:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23748:15:8"
									},
									"returnParameters": {
										"id": 2622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2621,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2811,
												"src": "23787:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2620,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23787:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23786:9:8"
									},
									"scope": 3202,
									"src": "23735:1042:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2844,
										"nodeType": "Block",
										"src": "25010:175:8",
										"statements": [
											{
												"id": 2843,
												"nodeType": "UncheckedBlock",
												"src": "25020:159:8",
												"statements": [
													{
														"assignments": [
															2823
														],
														"declarations": [
															{
																"constant": false,
																"id": 2823,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "25052:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 2843,
																"src": "25044:14:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2822,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "25044:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2827,
														"initialValue": {
															"arguments": [
																{
																	"id": 2825,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2814,
																	"src": "25066:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2824,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2811,
																	2845
																],
																"referencedDeclaration": 2811,
																"src": "25061:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2826,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25061:11:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "25044:28:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2841,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2828,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2823,
																"src": "25093:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 2839,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 2832,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2817,
																					"src": "25135:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1608",
																						"typeString": "enum Math.Rounding"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_enum$_Rounding_$1608",
																						"typeString": "enum Math.Rounding"
																					}
																				],
																				"id": 2831,
																				"name": "unsignedRoundsUp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3201,
																				"src": "25118:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1608_$returns$_t_bool_$",
																					"typeString": "function (enum Math.Rounding) pure returns (bool)"
																				}
																			},
																			"id": 2833,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "25118:26:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2838,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2836,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "31",
																					"id": 2834,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "25148:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"id": 2835,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2823,
																					"src": "25153:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "25148:11:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 2837,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2814,
																				"src": "25162:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "25148:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "25118:49:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 2829,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4967,
																		"src": "25102:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$4967_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 2830,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "25111:6:8",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4966,
																	"src": "25102:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 2840,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25102:66:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25093:75:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2821,
														"id": 2842,
														"nodeType": "Return",
														"src": "25086:82:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2812,
										"nodeType": "StructuredDocumentation",
										"src": "24783:142:8",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2845,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "24939:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2814,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24952:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2845,
												"src": "24944:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2813,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24944:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2817,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "24968:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2845,
												"src": "24959:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1608",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2816,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2815,
														"name": "Rounding",
														"nameLocations": [
															"24959:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1608,
														"src": "24959:8:8"
													},
													"referencedDeclaration": 1608,
													"src": "24959:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1608",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24943:34:8"
									},
									"returnParameters": {
										"id": 2821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2820,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2845,
												"src": "25001:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2819,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25001:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25000:9:8"
									},
									"scope": 3202,
									"src": "24930:255:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2973,
										"nodeType": "Block",
										"src": "25378:854:8",
										"statements": [
											{
												"assignments": [
													2854
												],
												"declarations": [
													{
														"constant": false,
														"id": 2854,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "25396:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 2973,
														"src": "25388:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2853,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "25388:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2856,
												"initialValue": {
													"hexValue": "30",
													"id": 2855,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "25405:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25388:18:8"
											},
											{
												"id": 2970,
												"nodeType": "UncheckedBlock",
												"src": "25416:787:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2861,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2857,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2848,
																"src": "25444:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2860,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2858,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25453:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2859,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25459:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "25453:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "25444:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2873,
														"nodeType": "IfStatement",
														"src": "25440:103:8",
														"trueBody": {
															"id": 2872,
															"nodeType": "Block",
															"src": "25463:80:8",
															"statements": [
																{
																	"expression": {
																		"id": 2866,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2862,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2848,
																			"src": "25481:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2865,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2863,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25490:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2864,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25496:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "25490:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "25481:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2867,
																	"nodeType": "ExpressionStatement",
																	"src": "25481:17:8"
																},
																{
																	"expression": {
																		"id": 2870,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2868,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2854,
																			"src": "25516:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2869,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25526:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "25516:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2871,
																	"nodeType": "ExpressionStatement",
																	"src": "25516:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2878,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2874,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2848,
																"src": "25560:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2877,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2875,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25569:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2876,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25575:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "25569:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "25560:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2890,
														"nodeType": "IfStatement",
														"src": "25556:103:8",
														"trueBody": {
															"id": 2889,
															"nodeType": "Block",
															"src": "25579:80:8",
															"statements": [
																{
																	"expression": {
																		"id": 2883,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2879,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2848,
																			"src": "25597:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2882,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2880,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25606:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2881,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25612:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "25606:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "25597:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2884,
																	"nodeType": "ExpressionStatement",
																	"src": "25597:17:8"
																},
																{
																	"expression": {
																		"id": 2887,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2885,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2854,
																			"src": "25632:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2886,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25642:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "25632:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2888,
																	"nodeType": "ExpressionStatement",
																	"src": "25632:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2895,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2891,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2848,
																"src": "25676:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2894,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2892,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25685:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2893,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25691:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "25685:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "25676:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2907,
														"nodeType": "IfStatement",
														"src": "25672:103:8",
														"trueBody": {
															"id": 2906,
															"nodeType": "Block",
															"src": "25695:80:8",
															"statements": [
																{
																	"expression": {
																		"id": 2900,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2896,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2848,
																			"src": "25713:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2899,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2897,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25722:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2898,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25728:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "25722:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "25713:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2901,
																	"nodeType": "ExpressionStatement",
																	"src": "25713:17:8"
																},
																{
																	"expression": {
																		"id": 2904,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2902,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2854,
																			"src": "25748:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2903,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25758:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "25748:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2905,
																	"nodeType": "ExpressionStatement",
																	"src": "25748:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2908,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2848,
																"src": "25792:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2911,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2909,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25801:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2910,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25807:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "25801:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "25792:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2924,
														"nodeType": "IfStatement",
														"src": "25788:100:8",
														"trueBody": {
															"id": 2923,
															"nodeType": "Block",
															"src": "25810:78:8",
															"statements": [
																{
																	"expression": {
																		"id": 2917,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2913,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2848,
																			"src": "25828:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2916,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2914,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25837:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2915,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25843:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "25837:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "25828:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2918,
																	"nodeType": "ExpressionStatement",
																	"src": "25828:16:8"
																},
																{
																	"expression": {
																		"id": 2921,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2919,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2854,
																			"src": "25862:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2920,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25872:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "25862:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2922,
																	"nodeType": "ExpressionStatement",
																	"src": "25862:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2929,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2925,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2848,
																"src": "25905:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2928,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2926,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25914:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2927,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25920:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "25914:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "25905:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2941,
														"nodeType": "IfStatement",
														"src": "25901:100:8",
														"trueBody": {
															"id": 2940,
															"nodeType": "Block",
															"src": "25923:78:8",
															"statements": [
																{
																	"expression": {
																		"id": 2934,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2930,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2848,
																			"src": "25941:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2933,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2931,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25950:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2932,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25956:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "25950:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "25941:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2935,
																	"nodeType": "ExpressionStatement",
																	"src": "25941:16:8"
																},
																{
																	"expression": {
																		"id": 2938,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2936,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2854,
																			"src": "25975:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2937,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25985:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "25975:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2939,
																	"nodeType": "ExpressionStatement",
																	"src": "25975:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2946,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2942,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2848,
																"src": "26018:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2945,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2943,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26027:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2944,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26033:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "26027:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "26018:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2958,
														"nodeType": "IfStatement",
														"src": "26014:100:8",
														"trueBody": {
															"id": 2957,
															"nodeType": "Block",
															"src": "26036:78:8",
															"statements": [
																{
																	"expression": {
																		"id": 2951,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2947,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2848,
																			"src": "26054:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2950,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2948,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "26063:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2949,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "26069:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "26063:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "26054:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2952,
																	"nodeType": "ExpressionStatement",
																	"src": "26054:16:8"
																},
																{
																	"expression": {
																		"id": 2955,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2953,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2854,
																			"src": "26088:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2954,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26098:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "26088:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2956,
																	"nodeType": "ExpressionStatement",
																	"src": "26088:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2963,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2959,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2848,
																"src": "26131:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2962,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2960,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26140:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2961,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26146:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "26140:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "26131:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2969,
														"nodeType": "IfStatement",
														"src": "26127:66:8",
														"trueBody": {
															"id": 2968,
															"nodeType": "Block",
															"src": "26149:44:8",
															"statements": [
																{
																	"expression": {
																		"id": 2966,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2964,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2854,
																			"src": "26167:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2965,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26177:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "26167:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2967,
																	"nodeType": "ExpressionStatement",
																	"src": "26167:11:8"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2971,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2854,
													"src": "26219:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2852,
												"id": 2972,
												"nodeType": "Return",
												"src": "26212:13:8"
											}
										]
									},
									"documentation": {
										"id": 2846,
										"nodeType": "StructuredDocumentation",
										"src": "25191:120:8",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2974,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "25325:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2848,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25339:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2974,
												"src": "25331:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2847,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25331:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25330:15:8"
									},
									"returnParameters": {
										"id": 2852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2851,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2974,
												"src": "25369:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25369:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25368:9:8"
									},
									"scope": 3202,
									"src": "25316:916:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3007,
										"nodeType": "Block",
										"src": "26467:177:8",
										"statements": [
											{
												"id": 3006,
												"nodeType": "UncheckedBlock",
												"src": "26477:161:8",
												"statements": [
													{
														"assignments": [
															2986
														],
														"declarations": [
															{
																"constant": false,
																"id": 2986,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "26509:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 3006,
																"src": "26501:14:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2985,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "26501:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2990,
														"initialValue": {
															"arguments": [
																{
																	"id": 2988,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2977,
																	"src": "26524:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2987,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2974,
																	3008
																],
																"referencedDeclaration": 2974,
																"src": "26518:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2989,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26518:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "26501:29:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3004,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2991,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2986,
																"src": "26551:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 3002,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 2995,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2980,
																					"src": "26593:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1608",
																						"typeString": "enum Math.Rounding"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_enum$_Rounding_$1608",
																						"typeString": "enum Math.Rounding"
																					}
																				],
																				"id": 2994,
																				"name": "unsignedRoundsUp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3201,
																				"src": "26576:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1608_$returns$_t_bool_$",
																					"typeString": "function (enum Math.Rounding) pure returns (bool)"
																				}
																			},
																			"id": 2996,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "26576:26:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3001,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2999,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "3130",
																					"id": 2997,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "26606:2:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10_by_1",
																						"typeString": "int_const 10"
																					},
																					"value": "10"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "**",
																				"rightExpression": {
																					"id": 2998,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2986,
																					"src": "26612:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "26606:12:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 3000,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2977,
																				"src": "26621:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "26606:20:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "26576:50:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 2992,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4967,
																		"src": "26560:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$4967_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 2993,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "26569:6:8",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4966,
																	"src": "26560:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 3003,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26560:67:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26551:76:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2984,
														"id": 3005,
														"nodeType": "Return",
														"src": "26544:83:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2975,
										"nodeType": "StructuredDocumentation",
										"src": "26238:143:8",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3008,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "26395:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2977,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "26409:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3008,
												"src": "26401:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2976,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26401:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2980,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "26425:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 3008,
												"src": "26416:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1608",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2979,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2978,
														"name": "Rounding",
														"nameLocations": [
															"26416:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1608,
														"src": "26416:8:8"
													},
													"referencedDeclaration": 1608,
													"src": "26416:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1608",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26400:34:8"
									},
									"returnParameters": {
										"id": 2984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2983,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3008,
												"src": "26458:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2982,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26458:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26457:9:8"
									},
									"scope": 3202,
									"src": "26386:258:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3144,
										"nodeType": "Block",
										"src": "26964:674:8",
										"statements": [
											{
												"assignments": [
													3017
												],
												"declarations": [
													{
														"constant": false,
														"id": 3017,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "26982:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 3144,
														"src": "26974:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3016,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26974:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3019,
												"initialValue": {
													"hexValue": "30",
													"id": 3018,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "26991:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26974:18:8"
											},
											{
												"assignments": [
													3021
												],
												"declarations": [
													{
														"constant": false,
														"id": 3021,
														"mutability": "mutable",
														"name": "isGt",
														"nameLocation": "27010:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 3144,
														"src": "27002:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3020,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "27002:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3022,
												"nodeType": "VariableDeclarationStatement",
												"src": "27002:12:8"
											},
											{
												"id": 3141,
												"nodeType": "UncheckedBlock",
												"src": "27024:585:8",
												"statements": [
													{
														"expression": {
															"id": 3035,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3023,
																"name": "isGt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3021,
																"src": "27048:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3033,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3026,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3011,
																			"src": "27071:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_rational_340282366920938463463374607431768211455_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...1455"
																			},
																			"id": 3032,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																							"typeString": "int_const 3402...(31 digits omitted)...1456"
																						},
																						"id": 3029,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 3027,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27080:1:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"hexValue": "313238",
																							"id": 3028,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27085:3:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_128_by_1",
																								"typeString": "int_const 128"
																							},
																							"value": "128"
																						},
																						"src": "27080:8:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																							"typeString": "int_const 3402...(31 digits omitted)...1456"
																						}
																					}
																				],
																				"id": 3030,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "27079:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																					"typeString": "int_const 3402...(31 digits omitted)...1456"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 3031,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27092:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "27079:14:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340282366920938463463374607431768211455_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...1455"
																			}
																		},
																		"src": "27071:22:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 3024,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4967,
																		"src": "27055:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$4967_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 3025,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27064:6:8",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4966,
																	"src": "27055:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 3034,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27055:39:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27048:46:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3036,
														"nodeType": "ExpressionStatement",
														"src": "27048:46:8"
													},
													{
														"expression": {
															"id": 3041,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3037,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3011,
																"src": "27108:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3040,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3038,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3021,
																	"src": "27118:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 3039,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27125:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "27118:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27108:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3042,
														"nodeType": "ExpressionStatement",
														"src": "27108:20:8"
													},
													{
														"expression": {
															"id": 3047,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3043,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3017,
																"src": "27142:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3046,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3044,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3021,
																	"src": "27152:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3045,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27159:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "27152:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27142:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3048,
														"nodeType": "ExpressionStatement",
														"src": "27142:19:8"
													},
													{
														"expression": {
															"id": 3061,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3049,
																"name": "isGt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3021,
																"src": "27176:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3059,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3052,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3011,
																			"src": "27199:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_rational_18446744073709551615_by_1",
																				"typeString": "int_const 18446744073709551615"
																			},
																			"id": 3058,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_rational_18446744073709551616_by_1",
																							"typeString": "int_const 18446744073709551616"
																						},
																						"id": 3055,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 3053,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27208:1:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"hexValue": "3634",
																							"id": 3054,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27213:2:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_64_by_1",
																								"typeString": "int_const 64"
																							},
																							"value": "64"
																						},
																						"src": "27208:7:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_18446744073709551616_by_1",
																							"typeString": "int_const 18446744073709551616"
																						}
																					}
																				],
																				"id": 3056,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "27207:9:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_18446744073709551616_by_1",
																					"typeString": "int_const 18446744073709551616"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 3057,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27219:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "27207:13:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_18446744073709551615_by_1",
																				"typeString": "int_const 18446744073709551615"
																			}
																		},
																		"src": "27199:21:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 3050,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4967,
																		"src": "27183:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$4967_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 3051,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27192:6:8",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4966,
																	"src": "27183:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 3060,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27183:38:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27176:45:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3062,
														"nodeType": "ExpressionStatement",
														"src": "27176:45:8"
													},
													{
														"expression": {
															"id": 3067,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3063,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3011,
																"src": "27235:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3066,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3064,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3021,
																	"src": "27245:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3065,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27252:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "27245:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27235:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3068,
														"nodeType": "ExpressionStatement",
														"src": "27235:19:8"
													},
													{
														"expression": {
															"id": 3073,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3069,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3017,
																"src": "27268:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3072,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3070,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3021,
																	"src": "27278:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3071,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27285:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "27278:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27268:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3074,
														"nodeType": "ExpressionStatement",
														"src": "27268:18:8"
													},
													{
														"expression": {
															"id": 3087,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3075,
																"name": "isGt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3021,
																"src": "27301:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3085,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3078,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3011,
																			"src": "27324:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_rational_4294967295_by_1",
																				"typeString": "int_const 4294967295"
																			},
																			"id": 3084,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_rational_4294967296_by_1",
																							"typeString": "int_const 4294967296"
																						},
																						"id": 3081,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 3079,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27333:1:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"hexValue": "3332",
																							"id": 3080,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27338:2:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_32_by_1",
																								"typeString": "int_const 32"
																							},
																							"value": "32"
																						},
																						"src": "27333:7:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_4294967296_by_1",
																							"typeString": "int_const 4294967296"
																						}
																					}
																				],
																				"id": 3082,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "27332:9:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4294967296_by_1",
																					"typeString": "int_const 4294967296"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 3083,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27344:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "27332:13:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4294967295_by_1",
																				"typeString": "int_const 4294967295"
																			}
																		},
																		"src": "27324:21:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 3076,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4967,
																		"src": "27308:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$4967_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 3077,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27317:6:8",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4966,
																	"src": "27308:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 3086,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27308:38:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27301:45:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3088,
														"nodeType": "ExpressionStatement",
														"src": "27301:45:8"
													},
													{
														"expression": {
															"id": 3093,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3089,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3011,
																"src": "27360:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3092,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3090,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3021,
																	"src": "27370:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3091,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27377:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "27370:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27360:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3094,
														"nodeType": "ExpressionStatement",
														"src": "27360:19:8"
													},
													{
														"expression": {
															"id": 3099,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3095,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3017,
																"src": "27393:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3098,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3096,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3021,
																	"src": "27403:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 3097,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27410:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "27403:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27393:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3100,
														"nodeType": "ExpressionStatement",
														"src": "27393:18:8"
													},
													{
														"expression": {
															"id": 3113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3101,
																"name": "isGt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3021,
																"src": "27426:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3111,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3104,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3011,
																			"src": "27449:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_rational_65535_by_1",
																				"typeString": "int_const 65535"
																			},
																			"id": 3110,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_rational_65536_by_1",
																							"typeString": "int_const 65536"
																						},
																						"id": 3107,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 3105,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27458:1:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"hexValue": "3136",
																							"id": 3106,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27463:2:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_16_by_1",
																								"typeString": "int_const 16"
																							},
																							"value": "16"
																						},
																						"src": "27458:7:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_65536_by_1",
																							"typeString": "int_const 65536"
																						}
																					}
																				],
																				"id": 3108,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "27457:9:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_65536_by_1",
																					"typeString": "int_const 65536"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 3109,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27469:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "27457:13:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_65535_by_1",
																				"typeString": "int_const 65535"
																			}
																		},
																		"src": "27449:21:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 3102,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4967,
																		"src": "27433:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$4967_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 3103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27442:6:8",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4966,
																	"src": "27433:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 3112,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27433:38:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27426:45:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3114,
														"nodeType": "ExpressionStatement",
														"src": "27426:45:8"
													},
													{
														"expression": {
															"id": 3119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3115,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3011,
																"src": "27485:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3118,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3116,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3021,
																	"src": "27495:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3117,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27502:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "27495:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27485:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3120,
														"nodeType": "ExpressionStatement",
														"src": "27485:19:8"
													},
													{
														"expression": {
															"id": 3125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3121,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3017,
																"src": "27518:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3122,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3021,
																	"src": "27528:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 3123,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27535:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "27528:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27518:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3126,
														"nodeType": "ExpressionStatement",
														"src": "27518:18:8"
													},
													{
														"expression": {
															"id": 3139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3127,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3017,
																"src": "27551:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3130,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3011,
																			"src": "27577:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_rational_255_by_1",
																				"typeString": "int_const 255"
																			},
																			"id": 3136,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_rational_256_by_1",
																							"typeString": "int_const 256"
																						},
																						"id": 3133,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 3131,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27586:1:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"hexValue": "38",
																							"id": 3132,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27591:1:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_8_by_1",
																								"typeString": "int_const 8"
																							},
																							"value": "8"
																						},
																						"src": "27586:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_256_by_1",
																							"typeString": "int_const 256"
																						}
																					}
																				],
																				"id": 3134,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "27585:8:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_256_by_1",
																					"typeString": "int_const 256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 3135,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27596:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "27585:12:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_255_by_1",
																				"typeString": "int_const 255"
																			}
																		},
																		"src": "27577:20:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 3128,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4967,
																		"src": "27561:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$4967_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 3129,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27570:6:8",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4966,
																	"src": "27561:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 3138,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27561:37:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27551:47:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3140,
														"nodeType": "ExpressionStatement",
														"src": "27551:47:8"
													}
												]
											},
											{
												"expression": {
													"id": 3142,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3017,
													"src": "27625:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3015,
												"id": 3143,
												"nodeType": "Return",
												"src": "27618:13:8"
											}
										]
									},
									"documentation": {
										"id": 3009,
										"nodeType": "StructuredDocumentation",
										"src": "26650:246:8",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 3145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "26910:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3011,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "26925:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3145,
												"src": "26917:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3010,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26917:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26916:15:8"
									},
									"returnParameters": {
										"id": 3015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3014,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3145,
												"src": "26955:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3013,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26955:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26954:9:8"
									},
									"scope": 3202,
									"src": "26901:737:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3181,
										"nodeType": "Block",
										"src": "27875:184:8",
										"statements": [
											{
												"id": 3180,
												"nodeType": "UncheckedBlock",
												"src": "27885:168:8",
												"statements": [
													{
														"assignments": [
															3157
														],
														"declarations": [
															{
																"constant": false,
																"id": 3157,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "27917:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 3180,
																"src": "27909:14:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3156,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "27909:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3161,
														"initialValue": {
															"arguments": [
																{
																	"id": 3159,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3148,
																	"src": "27933:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3158,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3145,
																	3182
																],
																"referencedDeclaration": 3145,
																"src": "27926:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27926:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "27909:30:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3162,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3157,
																"src": "27960:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 3176,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 3166,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3151,
																					"src": "28002:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1608",
																						"typeString": "enum Math.Rounding"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_enum$_Rounding_$1608",
																						"typeString": "enum Math.Rounding"
																					}
																				],
																				"id": 3165,
																				"name": "unsignedRoundsUp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3201,
																				"src": "27985:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1608_$returns$_t_bool_$",
																					"typeString": "function (enum Math.Rounding) pure returns (bool)"
																				}
																			},
																			"id": 3167,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "27985:26:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3175,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3173,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "31",
																					"id": 3168,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "28015:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 3171,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 3169,
																								"name": "result",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3157,
																								"src": "28021:6:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "33",
																								"id": 3170,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "28031:1:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_3_by_1",
																									"typeString": "int_const 3"
																								},
																								"value": "3"
																							},
																							"src": "28021:11:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 3172,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "28020:13:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "28015:18:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 3174,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3148,
																				"src": "28036:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "28015:26:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "27985:56:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 3163,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4967,
																		"src": "27969:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$4967_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 3164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27978:6:8",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4966,
																	"src": "27969:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 3177,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27969:73:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27960:82:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3155,
														"id": 3179,
														"nodeType": "Return",
														"src": "27953:89:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3146,
										"nodeType": "StructuredDocumentation",
										"src": "27644:144:8",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "27802:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3148,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27817:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 3182,
												"src": "27809:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27809:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3151,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "27833:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 3182,
												"src": "27824:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1608",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3150,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3149,
														"name": "Rounding",
														"nameLocations": [
															"27824:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1608,
														"src": "27824:8:8"
													},
													"referencedDeclaration": 1608,
													"src": "27824:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1608",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27808:34:8"
									},
									"returnParameters": {
										"id": 3155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3182,
												"src": "27866:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27866:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27865:9:8"
									},
									"scope": 3202,
									"src": "27793:266:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3200,
										"nodeType": "Block",
										"src": "28257:48:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 3198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 3196,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 3193,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3186,
																	"src": "28280:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$1608",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$1608",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 3192,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "28274:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 3191,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "28274:5:8",
																	"typeDescriptions": {}
																}
															},
															"id": 3194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28274:15:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 3195,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28292:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "28274:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 3197,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "28297:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "28274:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3190,
												"id": 3199,
												"nodeType": "Return",
												"src": "28267:31:8"
											}
										]
									},
									"documentation": {
										"id": 3183,
										"nodeType": "StructuredDocumentation",
										"src": "28065:113:8",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 3201,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "28192:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3186,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "28218:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 3201,
												"src": "28209:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1608",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3185,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3184,
														"name": "Rounding",
														"nameLocations": [
															"28209:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1608,
														"src": "28209:8:8"
													},
													"referencedDeclaration": 1608,
													"src": "28209:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1608",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28208:19:8"
									},
									"returnParameters": {
										"id": 3190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3189,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3201,
												"src": "28251:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3188,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "28251:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28250:6:8"
									},
									"scope": 3202,
									"src": "28183:122:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3203,
							"src": "281:28026:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "103:28205:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/math/SafeCast.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeCast.sol",
					"exportedSymbols": {
						"SafeCast": [
							4967
						]
					},
					"id": 4968,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3204,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "192:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeCast",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3205,
								"nodeType": "StructuredDocumentation",
								"src": "218:550:9",
								"text": " @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 4967,
							"linearizedBaseContracts": [
								4967
							],
							"name": "SafeCast",
							"nameLocation": "777:8:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3206,
										"nodeType": "StructuredDocumentation",
										"src": "792:68:9",
										"text": " @dev Value doesn't fit in an uint of `bits` size."
									},
									"errorSelector": "6dfcc650",
									"id": 3212,
									"name": "SafeCastOverflowedUintDowncast",
									"nameLocation": "871:30:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3208,
												"mutability": "mutable",
												"name": "bits",
												"nameLocation": "908:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 3212,
												"src": "902:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3207,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "902:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3210,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "922:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3212,
												"src": "914:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "914:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "901:27:9"
									},
									"src": "865:64:9"
								},
								{
									"documentation": {
										"id": 3213,
										"nodeType": "StructuredDocumentation",
										"src": "935:75:9",
										"text": " @dev An int value doesn't fit in an uint of `bits` size."
									},
									"errorSelector": "a8ce4432",
									"id": 3217,
									"name": "SafeCastOverflowedIntToUint",
									"nameLocation": "1021:27:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3215,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1056:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3217,
												"src": "1049:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3214,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1049:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1048:14:9"
									},
									"src": "1015:48:9"
								},
								{
									"documentation": {
										"id": 3218,
										"nodeType": "StructuredDocumentation",
										"src": "1069:67:9",
										"text": " @dev Value doesn't fit in an int of `bits` size."
									},
									"errorSelector": "327269a7",
									"id": 3224,
									"name": "SafeCastOverflowedIntDowncast",
									"nameLocation": "1147:29:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3220,
												"mutability": "mutable",
												"name": "bits",
												"nameLocation": "1183:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 3224,
												"src": "1177:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3219,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1177:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3222,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1196:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3224,
												"src": "1189:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3221,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1189:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1176:26:9"
									},
									"src": "1141:62:9"
								},
								{
									"documentation": {
										"id": 3225,
										"nodeType": "StructuredDocumentation",
										"src": "1209:75:9",
										"text": " @dev An uint value doesn't fit in an int of `bits` size."
									},
									"errorSelector": "24775e06",
									"id": 3229,
									"name": "SafeCastOverflowedUintToInt",
									"nameLocation": "1295:27:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3227,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1331:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3229,
												"src": "1323:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1323:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1322:15:9"
									},
									"src": "1289:49:9"
								},
								{
									"body": {
										"id": 3256,
										"nodeType": "Block",
										"src": "1695:152:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3237,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3232,
														"src": "1709:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3240,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1722:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint248_$",
																		"typeString": "type(uint248)"
																	},
																	"typeName": {
																		"id": 3239,
																		"name": "uint248",
																		"nodeType": "ElementaryTypeName",
																		"src": "1722:7:9",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint248_$",
																		"typeString": "type(uint248)"
																	}
																],
																"id": 3238,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "1717:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3241,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1717:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint248",
																"typeString": "type(uint248)"
															}
														},
														"id": 3242,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1731:3:9",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "1717:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint248",
															"typeString": "uint248"
														}
													},
													"src": "1709:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3250,
												"nodeType": "IfStatement",
												"src": "1705:105:9",
												"trueBody": {
													"id": 3249,
													"nodeType": "Block",
													"src": "1736:74:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323438",
																		"id": 3245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1788:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		"value": "248"
																	},
																	{
																		"id": 3246,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3232,
																		"src": "1793:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3244,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3212,
																	"src": "1757:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1757:42:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3248,
															"nodeType": "RevertStatement",
															"src": "1750:49:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3253,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3232,
															"src": "1834:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3252,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1826:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint248_$",
															"typeString": "type(uint248)"
														},
														"typeName": {
															"id": 3251,
															"name": "uint248",
															"nodeType": "ElementaryTypeName",
															"src": "1826:7:9",
															"typeDescriptions": {}
														}
													},
													"id": 3254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1826:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint248",
														"typeString": "uint248"
													}
												},
												"functionReturnParameters": 3236,
												"id": 3255,
												"nodeType": "Return",
												"src": "1819:21:9"
											}
										]
									},
									"documentation": {
										"id": 3230,
										"nodeType": "StructuredDocumentation",
										"src": "1344:280:9",
										"text": " @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"
									},
									"id": 3257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint248",
									"nameLocation": "1638:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3232,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1656:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3257,
												"src": "1648:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1648:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1647:15:9"
									},
									"returnParameters": {
										"id": 3236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3235,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3257,
												"src": "1686:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint248",
													"typeString": "uint248"
												},
												"typeName": {
													"id": 3234,
													"name": "uint248",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint248",
														"typeString": "uint248"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1685:9:9"
									},
									"scope": 4967,
									"src": "1629:218:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3284,
										"nodeType": "Block",
										"src": "2204:152:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3265,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3260,
														"src": "2218:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3268,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2231:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint240_$",
																		"typeString": "type(uint240)"
																	},
																	"typeName": {
																		"id": 3267,
																		"name": "uint240",
																		"nodeType": "ElementaryTypeName",
																		"src": "2231:7:9",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint240_$",
																		"typeString": "type(uint240)"
																	}
																],
																"id": 3266,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "2226:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3269,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2226:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint240",
																"typeString": "type(uint240)"
															}
														},
														"id": 3270,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2240:3:9",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "2226:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint240",
															"typeString": "uint240"
														}
													},
													"src": "2218:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3278,
												"nodeType": "IfStatement",
												"src": "2214:105:9",
												"trueBody": {
													"id": 3277,
													"nodeType": "Block",
													"src": "2245:74:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323430",
																		"id": 3273,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2297:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		"value": "240"
																	},
																	{
																		"id": 3274,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3260,
																		"src": "2302:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3272,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3212,
																	"src": "2266:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3275,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2266:42:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3276,
															"nodeType": "RevertStatement",
															"src": "2259:49:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3281,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3260,
															"src": "2343:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3280,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2335:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint240_$",
															"typeString": "type(uint240)"
														},
														"typeName": {
															"id": 3279,
															"name": "uint240",
															"nodeType": "ElementaryTypeName",
															"src": "2335:7:9",
															"typeDescriptions": {}
														}
													},
													"id": 3282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2335:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint240",
														"typeString": "uint240"
													}
												},
												"functionReturnParameters": 3264,
												"id": 3283,
												"nodeType": "Return",
												"src": "2328:21:9"
											}
										]
									},
									"documentation": {
										"id": 3258,
										"nodeType": "StructuredDocumentation",
										"src": "1853:280:9",
										"text": " @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"
									},
									"id": 3285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint240",
									"nameLocation": "2147:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3260,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2165:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3285,
												"src": "2157:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2157:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2156:15:9"
									},
									"returnParameters": {
										"id": 3264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3263,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3285,
												"src": "2195:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint240",
													"typeString": "uint240"
												},
												"typeName": {
													"id": 3262,
													"name": "uint240",
													"nodeType": "ElementaryTypeName",
													"src": "2195:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint240",
														"typeString": "uint240"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2194:9:9"
									},
									"scope": 4967,
									"src": "2138:218:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3312,
										"nodeType": "Block",
										"src": "2713:152:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3293,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3288,
														"src": "2727:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3296,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2740:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint232_$",
																		"typeString": "type(uint232)"
																	},
																	"typeName": {
																		"id": 3295,
																		"name": "uint232",
																		"nodeType": "ElementaryTypeName",
																		"src": "2740:7:9",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint232_$",
																		"typeString": "type(uint232)"
																	}
																],
																"id": 3294,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "2735:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3297,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2735:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint232",
																"typeString": "type(uint232)"
															}
														},
														"id": 3298,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2749:3:9",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "2735:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint232",
															"typeString": "uint232"
														}
													},
													"src": "2727:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3306,
												"nodeType": "IfStatement",
												"src": "2723:105:9",
												"trueBody": {
													"id": 3305,
													"nodeType": "Block",
													"src": "2754:74:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323332",
																		"id": 3301,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2806:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		"value": "232"
																	},
																	{
																		"id": 3302,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3288,
																		"src": "2811:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3300,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3212,
																	"src": "2775:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3303,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2775:42:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3304,
															"nodeType": "RevertStatement",
															"src": "2768:49:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3309,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3288,
															"src": "2852:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3308,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2844:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint232_$",
															"typeString": "type(uint232)"
														},
														"typeName": {
															"id": 3307,
															"name": "uint232",
															"nodeType": "ElementaryTypeName",
															"src": "2844:7:9",
															"typeDescriptions": {}
														}
													},
													"id": 3310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2844:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint232",
														"typeString": "uint232"
													}
												},
												"functionReturnParameters": 3292,
												"id": 3311,
												"nodeType": "Return",
												"src": "2837:21:9"
											}
										]
									},
									"documentation": {
										"id": 3286,
										"nodeType": "StructuredDocumentation",
										"src": "2362:280:9",
										"text": " @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"
									},
									"id": 3313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint232",
									"nameLocation": "2656:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3288,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2674:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3313,
												"src": "2666:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2666:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2665:15:9"
									},
									"returnParameters": {
										"id": 3292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3313,
												"src": "2704:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint232",
													"typeString": "uint232"
												},
												"typeName": {
													"id": 3290,
													"name": "uint232",
													"nodeType": "ElementaryTypeName",
													"src": "2704:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint232",
														"typeString": "uint232"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2703:9:9"
									},
									"scope": 4967,
									"src": "2647:218:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3340,
										"nodeType": "Block",
										"src": "3222:152:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3321,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3316,
														"src": "3236:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3324,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3249:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint224_$",
																		"typeString": "type(uint224)"
																	},
																	"typeName": {
																		"id": 3323,
																		"name": "uint224",
																		"nodeType": "ElementaryTypeName",
																		"src": "3249:7:9",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint224_$",
																		"typeString": "type(uint224)"
																	}
																],
																"id": 3322,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "3244:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3325,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3244:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint224",
																"typeString": "type(uint224)"
															}
														},
														"id": 3326,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3258:3:9",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "3244:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint224",
															"typeString": "uint224"
														}
													},
													"src": "3236:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3334,
												"nodeType": "IfStatement",
												"src": "3232:105:9",
												"trueBody": {
													"id": 3333,
													"nodeType": "Block",
													"src": "3263:74:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323234",
																		"id": 3329,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3315:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		"value": "224"
																	},
																	{
																		"id": 3330,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3316,
																		"src": "3320:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3328,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3212,
																	"src": "3284:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3331,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3284:42:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3332,
															"nodeType": "RevertStatement",
															"src": "3277:49:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3337,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3316,
															"src": "3361:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3336,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3353:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint224_$",
															"typeString": "type(uint224)"
														},
														"typeName": {
															"id": 3335,
															"name": "uint224",
															"nodeType": "ElementaryTypeName",
															"src": "3353:7:9",
															"typeDescriptions": {}
														}
													},
													"id": 3338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3353:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"functionReturnParameters": 3320,
												"id": 3339,
												"nodeType": "Return",
												"src": "3346:21:9"
											}
										]
									},
									"documentation": {
										"id": 3314,
										"nodeType": "StructuredDocumentation",
										"src": "2871:280:9",
										"text": " @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"
									},
									"id": 3341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint224",
									"nameLocation": "3165:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3316,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3183:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3341,
												"src": "3175:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3175:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3174:15:9"
									},
									"returnParameters": {
										"id": 3320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3319,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3341,
												"src": "3213:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint224",
													"typeString": "uint224"
												},
												"typeName": {
													"id": 3318,
													"name": "uint224",
													"nodeType": "ElementaryTypeName",
													"src": "3213:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3212:9:9"
									},
									"scope": 4967,
									"src": "3156:218:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3368,
										"nodeType": "Block",
										"src": "3731:152:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3349,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3344,
														"src": "3745:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3352,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3758:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint216_$",
																		"typeString": "type(uint216)"
																	},
																	"typeName": {
																		"id": 3351,
																		"name": "uint216",
																		"nodeType": "ElementaryTypeName",
																		"src": "3758:7:9",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint216_$",
																		"typeString": "type(uint216)"
																	}
																],
																"id": 3350,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "3753:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3353,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3753:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint216",
																"typeString": "type(uint216)"
															}
														},
														"id": 3354,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3767:3:9",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "3753:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint216",
															"typeString": "uint216"
														}
													},
													"src": "3745:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3362,
												"nodeType": "IfStatement",
												"src": "3741:105:9",
												"trueBody": {
													"id": 3361,
													"nodeType": "Block",
													"src": "3772:74:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323136",
																		"id": 3357,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3824:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		"value": "216"
																	},
																	{
																		"id": 3358,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3344,
																		"src": "3829:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3356,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3212,
																	"src": "3793:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3359,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3793:42:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3360,
															"nodeType": "RevertStatement",
															"src": "3786:49:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3365,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3344,
															"src": "3870:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3364,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3862:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint216_$",
															"typeString": "type(uint216)"
														},
														"typeName": {
															"id": 3363,
															"name": "uint216",
															"nodeType": "ElementaryTypeName",
															"src": "3862:7:9",
															"typeDescriptions": {}
														}
													},
													"id": 3366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3862:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint216",
														"typeString": "uint216"
													}
												},
												"functionReturnParameters": 3348,
												"id": 3367,
												"nodeType": "Return",
												"src": "3855:21:9"
											}
										]
									},
									"documentation": {
										"id": 3342,
										"nodeType": "StructuredDocumentation",
										"src": "3380:280:9",
										"text": " @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"
									},
									"id": 3369,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint216",
									"nameLocation": "3674:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3344,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3692:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3369,
												"src": "3684:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3684:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3683:15:9"
									},
									"returnParameters": {
										"id": 3348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3347,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3369,
												"src": "3722:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint216",
													"typeString": "uint216"
												},
												"typeName": {
													"id": 3346,
													"name": "uint216",
													"nodeType": "ElementaryTypeName",
													"src": "3722:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint216",
														"typeString": "uint216"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3721:9:9"
									},
									"scope": 4967,
									"src": "3665:218:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3396,
										"nodeType": "Block",
										"src": "4240:152:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3377,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3372,
														"src": "4254:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3380,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4267:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint208_$",
																		"typeString": "type(uint208)"
																	},
																	"typeName": {
																		"id": 3379,
																		"name": "uint208",
																		"nodeType": "ElementaryTypeName",
																		"src": "4267:7:9",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint208_$",
																		"typeString": "type(uint208)"
																	}
																],
																"id": 3378,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "4262:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3381,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4262:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint208",
																"typeString": "type(uint208)"
															}
														},
														"id": 3382,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4276:3:9",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "4262:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint208",
															"typeString": "uint208"
														}
													},
													"src": "4254:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3390,
												"nodeType": "IfStatement",
												"src": "4250:105:9",
												"trueBody": {
													"id": 3389,
													"nodeType": "Block",
													"src": "4281:74:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323038",
																		"id": 3385,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4333:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		"value": "208"
																	},
																	{
																		"id": 3386,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3372,
																		"src": "4338:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3384,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3212,
																	"src": "4302:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3387,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4302:42:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3388,
															"nodeType": "RevertStatement",
															"src": "4295:49:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3393,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3372,
															"src": "4379:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3392,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4371:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint208_$",
															"typeString": "type(uint208)"
														},
														"typeName": {
															"id": 3391,
															"name": "uint208",
															"nodeType": "ElementaryTypeName",
															"src": "4371:7:9",
															"typeDescriptions": {}
														}
													},
													"id": 3394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4371:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint208",
														"typeString": "uint208"
													}
												},
												"functionReturnParameters": 3376,
												"id": 3395,
												"nodeType": "Return",
												"src": "4364:21:9"
											}
										]
									},
									"documentation": {
										"id": 3370,
										"nodeType": "StructuredDocumentation",
										"src": "3889:280:9",
										"text": " @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"
									},
									"id": 3397,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint208",
									"nameLocation": "4183:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3372,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4201:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3397,
												"src": "4193:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4193:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4192:15:9"
									},
									"returnParameters": {
										"id": 3376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3375,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3397,
												"src": "4231:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint208",
													"typeString": "uint208"
												},
												"typeName": {
													"id": 3374,
													"name": "uint208",
													"nodeType": "ElementaryTypeName",
													"src": "4231:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint208",
														"typeString": "uint208"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4230:9:9"
									},
									"scope": 4967,
									"src": "4174:218:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3424,
										"nodeType": "Block",
										"src": "4749:152:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3405,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3400,
														"src": "4763:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3408,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4776:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint200_$",
																		"typeString": "type(uint200)"
																	},
																	"typeName": {
																		"id": 3407,
																		"name": "uint200",
																		"nodeType": "ElementaryTypeName",
																		"src": "4776:7:9",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint200_$",
																		"typeString": "type(uint200)"
																	}
																],
																"id": 3406,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "4771:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3409,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4771:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint200",
																"typeString": "type(uint200)"
															}
														},
														"id": 3410,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4785:3:9",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "4771:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint200",
															"typeString": "uint200"
														}
													},
													"src": "4763:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3418,
												"nodeType": "IfStatement",
												"src": "4759:105:9",
												"trueBody": {
													"id": 3417,
													"nodeType": "Block",
													"src": "4790:74:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323030",
																		"id": 3413,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4842:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		"value": "200"
																	},
																	{
																		"id": 3414,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3400,
																		"src": "4847:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3412,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3212,
																	"src": "4811:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3415,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4811:42:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3416,
															"nodeType": "RevertStatement",
															"src": "4804:49:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3421,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3400,
															"src": "4888:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3420,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4880:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint200_$",
															"typeString": "type(uint200)"
														},
														"typeName": {
															"id": 3419,
															"name": "uint200",
															"nodeType": "ElementaryTypeName",
															"src": "4880:7:9",
															"typeDescriptions": {}
														}
													},
													"id": 3422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4880:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint200",
														"typeString": "uint200"
													}
												},
												"functionReturnParameters": 3404,
												"id": 3423,
												"nodeType": "Return",
												"src": "4873:21:9"
											}
										]
									},
									"documentation": {
										"id": 3398,
										"nodeType": "StructuredDocumentation",
										"src": "4398:280:9",
										"text": " @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"
									},
									"id": 3425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint200",
									"nameLocation": "4692:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3400,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4710:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3425,
												"src": "4702:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4702:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4701:15:9"
									},
									"returnParameters": {
										"id": 3404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3425,
												"src": "4740:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint200",
													"typeString": "uint200"
												},
												"typeName": {
													"id": 3402,
													"name": "uint200",
													"nodeType": "ElementaryTypeName",
													"src": "4740:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint200",
														"typeString": "uint200"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4739:9:9"
									},
									"scope": 4967,
									"src": "4683:218:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3452,
										"nodeType": "Block",
										"src": "5258:152:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3433,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3428,
														"src": "5272:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3436,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5285:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint192_$",
																		"typeString": "type(uint192)"
																	},
																	"typeName": {
																		"id": 3435,
																		"name": "uint192",
																		"nodeType": "ElementaryTypeName",
																		"src": "5285:7:9",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint192_$",
																		"typeString": "type(uint192)"
																	}
																],
																"id": 3434,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "5280:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3437,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5280:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint192",
																"typeString": "type(uint192)"
															}
														},
														"id": 3438,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5294:3:9",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "5280:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint192",
															"typeString": "uint192"
														}
													},
													"src": "5272:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3446,
												"nodeType": "IfStatement",
												"src": "5268:105:9",
												"trueBody": {
													"id": 3445,
													"nodeType": "Block",
													"src": "5299:74:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313932",
																		"id": 3441,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5351:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		"value": "192"
																	},
																	{
																		"id": 3442,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3428,
																		"src": "5356:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3440,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3212,
																	"src": "5320:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3443,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5320:42:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3444,
															"nodeType": "RevertStatement",
															"src": "5313:49:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3449,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3428,
															"src": "5397:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3448,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5389:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint192_$",
															"typeString": "type(uint192)"
														},
														"typeName": {
															"id": 3447,
															"name": "uint192",
															"nodeType": "ElementaryTypeName",
															"src": "5389:7:9",
															"typeDescriptions": {}
														}
													},
													"id": 3450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint192",
														"typeString": "uint192"
													}
												},
												"functionReturnParameters": 3432,
												"id": 3451,
												"nodeType": "Return",
												"src": "5382:21:9"
											}
										]
									},
									"documentation": {
										"id": 3426,
										"nodeType": "StructuredDocumentation",
										"src": "4907:280:9",
										"text": " @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"
									},
									"id": 3453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint192",
									"nameLocation": "5201:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3428,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5219:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3453,
												"src": "5211:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5211:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5210:15:9"
									},
									"returnParameters": {
										"id": 3432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3453,
												"src": "5249:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint192",
													"typeString": "uint192"
												},
												"typeName": {
													"id": 3430,
													"name": "uint192",
													"nodeType": "ElementaryTypeName",
													"src": "5249:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint192",
														"typeString": "uint192"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5248:9:9"
									},
									"scope": 4967,
									"src": "5192:218:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3480,
										"nodeType": "Block",
										"src": "5767:152:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3461,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3456,
														"src": "5781:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3464,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5794:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint184_$",
																		"typeString": "type(uint184)"
																	},
																	"typeName": {
																		"id": 3463,
																		"name": "uint184",
																		"nodeType": "ElementaryTypeName",
																		"src": "5794:7:9",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint184_$",
																		"typeString": "type(uint184)"
																	}
																],
																"id": 3462,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "5789:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3465,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5789:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint184",
																"typeString": "type(uint184)"
															}
														},
														"id": 3466,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5803:3:9",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "5789:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint184",
															"typeString": "uint184"
														}
													},
													"src": "5781:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3474,
												"nodeType": "IfStatement",
												"src": "5777:105:9",
												"trueBody": {
													"id": 3473,
													"nodeType": "Block",
													"src": "5808:74:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313834",
																		"id": 3469,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5860:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		"value": "184"
																	},
																	{
																		"id": 3470,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3456,
																		"src": "5865:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3468,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3212,
																	"src": "5829:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3471,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5829:42:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3472,
															"nodeType": "RevertStatement",
															"src": "5822:49:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3477,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3456,
															"src": "5906:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3476,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5898:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint184_$",
															"typeString": "type(uint184)"
														},
														"typeName": {
															"id": 3475,
															"name": "uint184",
															"nodeType": "ElementaryTypeName",
															"src": "5898:7:9",
															"typeDescriptions": {}
														}
													},
													"id": 3478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5898:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint184",
														"typeString": "uint184"
													}
												},
												"functionReturnParameters": 3460,
												"id": 3479,
												"nodeType": "Return",
												"src": "5891:21:9"
											}
										]
									},
									"documentation": {
										"id": 3454,
										"nodeType": "StructuredDocumentation",
										"src": "5416:280:9",
										"text": " @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"
									},
									"id": 3481,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint184",
									"nameLocation": "5710:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3456,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5728:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3481,
												"src": "5720:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5720:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5719:15:9"
									},
									"returnParameters": {
										"id": 3460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3459,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3481,
												"src": "5758:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint184",
													"typeString": "uint184"
												},
												"typeName": {
													"id": 3458,
													"name": "uint184",
													"nodeType": "ElementaryTypeName",
													"src": "5758:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint184",
														"typeString": "uint184"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5757:9:9"
									},
									"scope": 4967,
									"src": "5701:218:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3508,
										"nodeType": "Block",
										"src": "6276:152:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3489,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3484,
														"src": "6290:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3492,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6303:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint176_$",
																		"typeString": "type(uint176)"
																	},
																	"typeName": {
																		"id": 3491,
																		"name": "uint176",
																		"nodeType": "ElementaryTypeName",
																		"src": "6303:7:9",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint176_$",
																		"typeString": "type(uint176)"
																	}
																],
																"id": 3490,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "6298:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3493,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6298:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint176",
																"typeString": "type(uint176)"
															}
														},
														"id": 3494,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6312:3:9",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "6298:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint176",
															"typeString": "uint176"
														}
													},
													"src": "6290:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3502,
												"nodeType": "IfStatement",
												"src": "6286:105:9",
												"trueBody": {
													"id": 3501,
													"nodeType": "Block",
													"src": "6317:74:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313736",
																		"id": 3497,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6369:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		"value": "176"
																	},
																	{
																		"id": 3498,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3484,
																		"src": "6374:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3496,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3212,
																	"src": "6338:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3499,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6338:42:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3500,
															"nodeType": "RevertStatement",
															"src": "6331:49:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3505,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3484,
															"src": "6415:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3504,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6407:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint176_$",
															"typeString": "type(uint176)"
														},
														"typeName": {
															"id": 3503,
															"name": "uint176",
															"nodeType": "ElementaryTypeName",
															"src": "6407:7:9",
															"typeDescriptions": {}
														}
													},
													"id": 3506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6407:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint176",
														"typeString": "uint176"
													}
												},
												"functionReturnParameters": 3488,
												"id": 3507,
												"nodeType": "Return",
												"src": "6400:21:9"
											}
										]
									},
									"documentation": {
										"id": 3482,
										"nodeType": "StructuredDocumentation",
										"src": "5925:280:9",
										"text": " @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"
									},
									"id": 3509,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint176",
									"nameLocation": "6219:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3484,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6237:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3509,
												"src": "6229:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6229:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6228:15:9"
									},
									"returnParameters": {
										"id": 3488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3487,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3509,
												"src": "6267:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint176",
													"typeString": "uint176"
												},
												"typeName": {
													"id": 3486,
													"name": "uint176",
													"nodeType": "ElementaryTypeName",
													"src": "6267:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint176",
														"typeString": "uint176"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6266:9:9"
									},
									"scope": 4967,
									"src": "6210:218:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3536,
										"nodeType": "Block",
										"src": "6785:152:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3517,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3512,
														"src": "6799:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3520,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6812:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint168_$",
																		"typeString": "type(uint168)"
																	},
																	"typeName": {
																		"id": 3519,
																		"name": "uint168",
																		"nodeType": "ElementaryTypeName",
																		"src": "6812:7:9",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint168_$",
																		"typeString": "type(uint168)"
																	}
																],
																"id": 3518,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "6807:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3521,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6807:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint168",
																"typeString": "type(uint168)"
															}
														},
														"id": 3522,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6821:3:9",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "6807:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint168",
															"typeString": "uint168"
														}
													},
													"src": "6799:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3530,
												"nodeType": "IfStatement",
												"src": "6795:105:9",
												"trueBody": {
													"id": 3529,
													"nodeType": "Block",
													"src": "6826:74:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313638",
																		"id": 3525,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6878:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		"value": "168"
																	},
																	{
																		"id": 3526,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3512,
																		"src": "6883:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3524,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3212,
																	"src": "6847:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3527,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6847:42:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3528,
															"nodeType": "RevertStatement",
															"src": "6840:49:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3533,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3512,
															"src": "6924:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3532,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6916:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint168_$",
															"typeString": "type(uint168)"
														},
														"typeName": {
															"id": 3531,
															"name": "uint168",
															"nodeType": "ElementaryTypeName",
															"src": "6916:7:9",
															"typeDescriptions": {}
														}
													},
													"id": 3534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6916:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint168",
														"typeString": "uint168"
													}
												},
												"functionReturnParameters": 3516,
												"id": 3535,
												"nodeType": "Return",
												"src": "6909:21:9"
											}
										]
									},
									"documentation": {
										"id": 3510,
										"nodeType": "StructuredDocumentation",
										"src": "6434:280:9",
										"text": " @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"
									},
									"id": 3537,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint168",
									"nameLocation": "6728:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3512,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6746:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3537,
												"src": "6738:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6738:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6737:15:9"
									},
									"returnParameters": {
										"id": 3516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3515,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3537,
												"src": "6776:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint168",
													"typeString": "uint168"
												},
												"typeName": {
													"id": 3514,
													"name": "uint168",
													"nodeType": "ElementaryTypeName",
													"src": "6776:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint168",
														"typeString": "uint168"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6775:9:9"
									},
									"scope": 4967,
									"src": "6719:218:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3564,
										"nodeType": "Block",
										"src": "7294:152:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3545,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3540,
														"src": "7308:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3548,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7321:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 3547,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "7321:7:9",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	}
																],
																"id": 3546,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "7316:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3549,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7316:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint160",
																"typeString": "type(uint160)"
															}
														},
														"id": 3550,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7330:3:9",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "7316:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "7308:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3558,
												"nodeType": "IfStatement",
												"src": "7304:105:9",
												"trueBody": {
													"id": 3557,
													"nodeType": "Block",
													"src": "7335:74:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313630",
																		"id": 3553,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7387:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		"value": "160"
																	},
																	{
																		"id": 3554,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3540,
																		"src": "7392:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3552,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3212,
																	"src": "7356:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3555,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7356:42:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3556,
															"nodeType": "RevertStatement",
															"src": "7349:49:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3561,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3540,
															"src": "7433:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3560,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7425:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint160_$",
															"typeString": "type(uint160)"
														},
														"typeName": {
															"id": 3559,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "7425:7:9",
															"typeDescriptions": {}
														}
													},
													"id": 3562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7425:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"functionReturnParameters": 3544,
												"id": 3563,
												"nodeType": "Return",
												"src": "7418:21:9"
											}
										]
									},
									"documentation": {
										"id": 3538,
										"nodeType": "StructuredDocumentation",
										"src": "6943:280:9",
										"text": " @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"
									},
									"id": 3565,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint160",
									"nameLocation": "7237:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3540,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7255:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3565,
												"src": "7247:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7247:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7246:15:9"
									},
									"returnParameters": {
										"id": 3544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3543,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3565,
												"src": "7285:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 3542,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "7285:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7284:9:9"
									},
									"scope": 4967,
									"src": "7228:218:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3592,
										"nodeType": "Block",
										"src": "7803:152:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3573,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3568,
														"src": "7817:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3576,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7830:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint152_$",
																		"typeString": "type(uint152)"
																	},
																	"typeName": {
																		"id": 3575,
																		"name": "uint152",
																		"nodeType": "ElementaryTypeName",
																		"src": "7830:7:9",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint152_$",
																		"typeString": "type(uint152)"
																	}
																],
																"id": 3574,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "7825:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3577,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7825:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint152",
																"typeString": "type(uint152)"
															}
														},
														"id": 3578,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7839:3:9",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "7825:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint152",
															"typeString": "uint152"
														}
													},
													"src": "7817:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3586,
												"nodeType": "IfStatement",
												"src": "7813:105:9",
												"trueBody": {
													"id": 3585,
													"nodeType": "Block",
													"src": "7844:74:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313532",
																		"id": 3581,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7896:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		"value": "152"
																	},
																	{
																		"id": 3582,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3568,
																		"src": "7901:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3580,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3212,
																	"src": "7865:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3583,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7865:42:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3584,
															"nodeType": "RevertStatement",
															"src": "7858:49:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3589,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3568,
															"src": "7942:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3588,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7934:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint152_$",
															"typeString": "type(uint152)"
														},
														"typeName": {
															"id": 3587,
															"name": "uint152",
															"nodeType": "ElementaryTypeName",
															"src": "7934:7:9",
															"typeDescriptions": {}
														}
													},
													"id": 3590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7934:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint152",
														"typeString": "uint152"
													}
												},
												"functionReturnParameters": 3572,
												"id": 3591,
												"nodeType": "Return",
												"src": "7927:21:9"
											}
										]
									},
									"documentation": {
										"id": 3566,
										"nodeType": "StructuredDocumentation",
										"src": "7452:280:9",
										"text": " @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"
									},
									"id": 3593,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint152",
									"nameLocation": "7746:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3568,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7764:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3593,
												"src": "7756:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7756:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7755:15:9"
									},
									"returnParameters": {
										"id": 3572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3571,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3593,
												"src": "7794:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint152",
													"typeString": "uint152"
												},
												"typeName": {
													"id": 3570,
													"name": "uint152",
													"nodeType": "ElementaryTypeName",
													"src": "7794:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint152",
														"typeString": "uint152"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7793:9:9"
									},
									"scope": 4967,
									"src": "7737:218:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3620,
										"nodeType": "Block",
										"src": "8312:152:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3601,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3596,
														"src": "8326:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8339:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint144_$",
																		"typeString": "type(uint144)"
																	},
																	"typeName": {
																		"id": 3603,
																		"name": "uint144",
																		"nodeType": "ElementaryTypeName",
																		"src": "8339:7:9",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint144_$",
																		"typeString": "type(uint144)"
																	}
																],
																"id": 3602,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8334:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3605,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8334:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint144",
																"typeString": "type(uint144)"
															}
														},
														"id": 3606,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8348:3:9",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8334:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint144",
															"typeString": "uint144"
														}
													},
													"src": "8326:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3614,
												"nodeType": "IfStatement",
												"src": "8322:105:9",
												"trueBody": {
													"id": 3613,
													"nodeType": "Block",
													"src": "8353:74:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313434",
																		"id": 3609,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8405:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		"value": "144"
																	},
																	{
																		"id": 3610,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3596,
																		"src": "8410:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3608,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3212,
																	"src": "8374:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3611,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8374:42:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3612,
															"nodeType": "RevertStatement",
															"src": "8367:49:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3617,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3596,
															"src": "8451:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3616,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8443:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint144_$",
															"typeString": "type(uint144)"
														},
														"typeName": {
															"id": 3615,
															"name": "uint144",
															"nodeType": "ElementaryTypeName",
															"src": "8443:7:9",
															"typeDescriptions": {}
														}
													},
													"id": 3618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8443:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint144",
														"typeString": "uint144"
													}
												},
												"functionReturnParameters": 3600,
												"id": 3619,
												"nodeType": "Return",
												"src": "8436:21:9"
											}
										]
									},
									"documentation": {
										"id": 3594,
										"nodeType": "StructuredDocumentation",
										"src": "7961:280:9",
										"text": " @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"
									},
									"id": 3621,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint144",
									"nameLocation": "8255:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3596,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8273:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3621,
												"src": "8265:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8265:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8264:15:9"
									},
									"returnParameters": {
										"id": 3600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3599,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3621,
												"src": "8303:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint144",
													"typeString": "uint144"
												},
												"typeName": {
													"id": 3598,
													"name": "uint144",
													"nodeType": "ElementaryTypeName",
													"src": "8303:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint144",
														"typeString": "uint144"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8302:9:9"
									},
									"scope": 4967,
									"src": "8246:218:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3648,
										"nodeType": "Block",
										"src": "8821:152:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3629,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3624,
														"src": "8835:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8848:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint136_$",
																		"typeString": "type(uint136)"
																	},
																	"typeName": {
																		"id": 3631,
																		"name": "uint136",
																		"nodeType": "ElementaryTypeName",
																		"src": "8848:7:9",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint136_$",
																		"typeString": "type(uint136)"
																	}
																],
																"id": 3630,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8843:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8843:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint136",
																"typeString": "type(uint136)"
															}
														},
														"id": 3634,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8857:3:9",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8843:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint136",
															"typeString": "uint136"
														}
													},
													"src": "8835:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3642,
												"nodeType": "IfStatement",
												"src": "8831:105:9",
												"trueBody": {
													"id": 3641,
													"nodeType": "Block",
													"src": "8862:74:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313336",
																		"id": 3637,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8914:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		"value": "136"
																	},
																	{
																		"id": 3638,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3624,
																		"src": "8919:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3636,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3212,
																	"src": "8883:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3639,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8883:42:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3640,
															"nodeType": "RevertStatement",
															"src": "8876:49:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3645,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3624,
															"src": "8960:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3644,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8952:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint136_$",
															"typeString": "type(uint136)"
														},
														"typeName": {
															"id": 3643,
															"name": "uint136",
															"nodeType": "ElementaryTypeName",
															"src": "8952:7:9",
															"typeDescriptions": {}
														}
													},
													"id": 3646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8952:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint136",
														"typeString": "uint136"
													}
												},
												"functionReturnParameters": 3628,
												"id": 3647,
												"nodeType": "Return",
												"src": "8945:21:9"
											}
										]
									},
									"documentation": {
										"id": 3622,
										"nodeType": "StructuredDocumentation",
										"src": "8470:280:9",
										"text": " @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"
									},
									"id": 3649,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint136",
									"nameLocation": "8764:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3624,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8782:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3649,
												"src": "8774:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8774:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8773:15:9"
									},
									"returnParameters": {
										"id": 3628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3627,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3649,
												"src": "8812:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint136",
													"typeString": "uint136"
												},
												"typeName": {
													"id": 3626,
													"name": "uint136",
													"nodeType": "ElementaryTypeName",
													"src": "8812:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint136",
														"typeString": "uint136"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8811:9:9"
									},
									"scope": 4967,
									"src": "8755:218:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3676,
										"nodeType": "Block",
										"src": "9330:152:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3657,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3652,
														"src": "9344:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3660,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9357:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint128_$",
																		"typeString": "type(uint128)"
																	},
																	"typeName": {
																		"id": 3659,
																		"name": "uint128",
																		"nodeType": "ElementaryTypeName",
																		"src": "9357:7:9",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint128_$",
																		"typeString": "type(uint128)"
																	}
																],
																"id": 3658,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "9352:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3661,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9352:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint128",
																"typeString": "type(uint128)"
															}
														},
														"id": 3662,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "9366:3:9",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "9352:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "9344:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3670,
												"nodeType": "IfStatement",
												"src": "9340:105:9",
												"trueBody": {
													"id": 3669,
													"nodeType": "Block",
													"src": "9371:74:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313238",
																		"id": 3665,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9423:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	{
																		"id": 3666,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3652,
																		"src": "9428:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3664,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3212,
																	"src": "9392:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3667,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9392:42:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3668,
															"nodeType": "RevertStatement",
															"src": "9385:49:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3673,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3652,
															"src": "9469:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3672,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9461:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint128_$",
															"typeString": "type(uint128)"
														},
														"typeName": {
															"id": 3671,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "9461:7:9",
															"typeDescriptions": {}
														}
													},
													"id": 3674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9461:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"functionReturnParameters": 3656,
												"id": 3675,
												"nodeType": "Return",
												"src": "9454:21:9"
											}
										]
									},
									"documentation": {
										"id": 3650,
										"nodeType": "StructuredDocumentation",
										"src": "8979:280:9",
										"text": " @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"
									},
									"id": 3677,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint128",
									"nameLocation": "9273:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3652,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9291:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3677,
												"src": "9283:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9283:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9282:15:9"
									},
									"returnParameters": {
										"id": 3656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3655,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3677,
												"src": "9321:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 3654,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "9321:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9320:9:9"
									},
									"scope": 4967,
									"src": "9264:218:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3704,
										"nodeType": "Block",
										"src": "9839:152:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3685,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3680,
														"src": "9853:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3688,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9866:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint120_$",
																		"typeString": "type(uint120)"
																	},
																	"typeName": {
																		"id": 3687,
																		"name": "uint120",
																		"nodeType": "ElementaryTypeName",
																		"src": "9866:7:9",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint120_$",
																		"typeString": "type(uint120)"
																	}
																],
																"id": 3686,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "9861:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3689,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9861:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint120",
																"typeString": "type(uint120)"
															}
														},
														"id": 3690,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "9875:3:9",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "9861:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint120",
															"typeString": "uint120"
														}
													},
													"src": "9853:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3698,
												"nodeType": "IfStatement",
												"src": "9849:105:9",
												"trueBody": {
													"id": 3697,
													"nodeType": "Block",
													"src": "9880:74:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313230",
																		"id": 3693,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9932:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		"value": "120"
																	},
																	{
																		"id": 3694,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3680,
																		"src": "9937:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3692,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3212,
																	"src": "9901:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3695,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9901:42:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3696,
															"nodeType": "RevertStatement",
															"src": "9894:49:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3701,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3680,
															"src": "9978:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3700,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9970:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint120_$",
															"typeString": "type(uint120)"
														},
														"typeName": {
															"id": 3699,
															"name": "uint120",
															"nodeType": "ElementaryTypeName",
															"src": "9970:7:9",
															"typeDescriptions": {}
														}
													},
													"id": 3702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9970:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint120",
														"typeString": "uint120"
													}
												},
												"functionReturnParameters": 3684,
												"id": 3703,
												"nodeType": "Return",
												"src": "9963:21:9"
											}
										]
									},
									"documentation": {
										"id": 3678,
										"nodeType": "StructuredDocumentation",
										"src": "9488:280:9",
										"text": " @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"
									},
									"id": 3705,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint120",
									"nameLocation": "9782:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3680,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9800:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3705,
												"src": "9792:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9792:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9791:15:9"
									},
									"returnParameters": {
										"id": 3684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3683,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3705,
												"src": "9830:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint120",
													"typeString": "uint120"
												},
												"typeName": {
													"id": 3682,
													"name": "uint120",
													"nodeType": "ElementaryTypeName",
													"src": "9830:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint120",
														"typeString": "uint120"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9829:9:9"
									},
									"scope": 4967,
									"src": "9773:218:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3732,
										"nodeType": "Block",
										"src": "10348:152:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3713,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3708,
														"src": "10362:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3716,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10375:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint112_$",
																		"typeString": "type(uint112)"
																	},
																	"typeName": {
																		"id": 3715,
																		"name": "uint112",
																		"nodeType": "ElementaryTypeName",
																		"src": "10375:7:9",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint112_$",
																		"typeString": "type(uint112)"
																	}
																],
																"id": 3714,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10370:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3717,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10370:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint112",
																"typeString": "type(uint112)"
															}
														},
														"id": 3718,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10384:3:9",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10370:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"src": "10362:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3726,
												"nodeType": "IfStatement",
												"src": "10358:105:9",
												"trueBody": {
													"id": 3725,
													"nodeType": "Block",
													"src": "10389:74:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313132",
																		"id": 3721,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10441:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		"value": "112"
																	},
																	{
																		"id": 3722,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3708,
																		"src": "10446:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3720,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3212,
																	"src": "10410:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3723,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10410:42:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3724,
															"nodeType": "RevertStatement",
															"src": "10403:49:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3729,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3708,
															"src": "10487:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3728,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "10479:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint112_$",
															"typeString": "type(uint112)"
														},
														"typeName": {
															"id": 3727,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "10479:7:9",
															"typeDescriptions": {}
														}
													},
													"id": 3730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10479:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"functionReturnParameters": 3712,
												"id": 3731,
												"nodeType": "Return",
												"src": "10472:21:9"
											}
										]
									},
									"documentation": {
										"id": 3706,
										"nodeType": "StructuredDocumentation",
										"src": "9997:280:9",
										"text": " @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"
									},
									"id": 3733,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint112",
									"nameLocation": "10291:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3708,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10309:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3733,
												"src": "10301:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10301:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10300:15:9"
									},
									"returnParameters": {
										"id": 3712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3711,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3733,
												"src": "10339:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 3710,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "10339:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10338:9:9"
									},
									"scope": 4967,
									"src": "10282:218:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3760,
										"nodeType": "Block",
										"src": "10857:152:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3741,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3736,
														"src": "10871:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3744,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10884:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint104_$",
																		"typeString": "type(uint104)"
																	},
																	"typeName": {
																		"id": 3743,
																		"name": "uint104",
																		"nodeType": "ElementaryTypeName",
																		"src": "10884:7:9",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint104_$",
																		"typeString": "type(uint104)"
																	}
																],
																"id": 3742,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10879:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3745,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10879:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint104",
																"typeString": "type(uint104)"
															}
														},
														"id": 3746,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10893:3:9",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10879:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint104",
															"typeString": "uint104"
														}
													},
													"src": "10871:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3754,
												"nodeType": "IfStatement",
												"src": "10867:105:9",
												"trueBody": {
													"id": 3753,
													"nodeType": "Block",
													"src": "10898:74:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313034",
																		"id": 3749,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10950:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		"value": "104"
																	},
																	{
																		"id": 3750,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3736,
																		"src": "10955:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3748,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3212,
																	"src": "10919:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3751,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10919:42:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3752,
															"nodeType": "RevertStatement",
															"src": "10912:49:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3757,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3736,
															"src": "10996:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3756,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "10988:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint104_$",
															"typeString": "type(uint104)"
														},
														"typeName": {
															"id": 3755,
															"name": "uint104",
															"nodeType": "ElementaryTypeName",
															"src": "10988:7:9",
															"typeDescriptions": {}
														}
													},
													"id": 3758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10988:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint104",
														"typeString": "uint104"
													}
												},
												"functionReturnParameters": 3740,
												"id": 3759,
												"nodeType": "Return",
												"src": "10981:21:9"
											}
										]
									},
									"documentation": {
										"id": 3734,
										"nodeType": "StructuredDocumentation",
										"src": "10506:280:9",
										"text": " @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"
									},
									"id": 3761,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint104",
									"nameLocation": "10800:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3736,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10818:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3761,
												"src": "10810:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3735,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10810:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10809:15:9"
									},
									"returnParameters": {
										"id": 3740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3739,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3761,
												"src": "10848:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint104",
													"typeString": "uint104"
												},
												"typeName": {
													"id": 3738,
													"name": "uint104",
													"nodeType": "ElementaryTypeName",
													"src": "10848:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint104",
														"typeString": "uint104"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10847:9:9"
									},
									"scope": 4967,
									"src": "10791:218:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3788,
										"nodeType": "Block",
										"src": "11360:149:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3769,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3764,
														"src": "11374:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3772,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11387:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint96_$",
																		"typeString": "type(uint96)"
																	},
																	"typeName": {
																		"id": 3771,
																		"name": "uint96",
																		"nodeType": "ElementaryTypeName",
																		"src": "11387:6:9",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint96_$",
																		"typeString": "type(uint96)"
																	}
																],
																"id": 3770,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11382:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3773,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11382:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint96",
																"typeString": "type(uint96)"
															}
														},
														"id": 3774,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11395:3:9",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11382:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "11374:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3782,
												"nodeType": "IfStatement",
												"src": "11370:103:9",
												"trueBody": {
													"id": 3781,
													"nodeType": "Block",
													"src": "11400:73:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3936",
																		"id": 3777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11452:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	{
																		"id": 3778,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3764,
																		"src": "11456:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3776,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3212,
																	"src": "11421:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3779,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11421:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3780,
															"nodeType": "RevertStatement",
															"src": "11414:48:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3785,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3764,
															"src": "11496:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3784,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11489:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint96_$",
															"typeString": "type(uint96)"
														},
														"typeName": {
															"id": 3783,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "11489:6:9",
															"typeDescriptions": {}
														}
													},
													"id": 3786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11489:13:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 3768,
												"id": 3787,
												"nodeType": "Return",
												"src": "11482:20:9"
											}
										]
									},
									"documentation": {
										"id": 3762,
										"nodeType": "StructuredDocumentation",
										"src": "11015:276:9",
										"text": " @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"
									},
									"id": 3789,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint96",
									"nameLocation": "11305:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3764,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11322:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3789,
												"src": "11314:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11314:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11313:15:9"
									},
									"returnParameters": {
										"id": 3768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3767,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3789,
												"src": "11352:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 3766,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "11352:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11351:8:9"
									},
									"scope": 4967,
									"src": "11296:213:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3816,
										"nodeType": "Block",
										"src": "11860:149:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3797,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3792,
														"src": "11874:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3800,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11887:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint88_$",
																		"typeString": "type(uint88)"
																	},
																	"typeName": {
																		"id": 3799,
																		"name": "uint88",
																		"nodeType": "ElementaryTypeName",
																		"src": "11887:6:9",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint88_$",
																		"typeString": "type(uint88)"
																	}
																],
																"id": 3798,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11882:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3801,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11882:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint88",
																"typeString": "type(uint88)"
															}
														},
														"id": 3802,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11895:3:9",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11882:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint88",
															"typeString": "uint88"
														}
													},
													"src": "11874:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3810,
												"nodeType": "IfStatement",
												"src": "11870:103:9",
												"trueBody": {
													"id": 3809,
													"nodeType": "Block",
													"src": "11900:73:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3838",
																		"id": 3805,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11952:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		"value": "88"
																	},
																	{
																		"id": 3806,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3792,
																		"src": "11956:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3804,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3212,
																	"src": "11921:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3807,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11921:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3808,
															"nodeType": "RevertStatement",
															"src": "11914:48:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3813,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3792,
															"src": "11996:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3812,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11989:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint88_$",
															"typeString": "type(uint88)"
														},
														"typeName": {
															"id": 3811,
															"name": "uint88",
															"nodeType": "ElementaryTypeName",
															"src": "11989:6:9",
															"typeDescriptions": {}
														}
													},
													"id": 3814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11989:13:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint88",
														"typeString": "uint88"
													}
												},
												"functionReturnParameters": 3796,
												"id": 3815,
												"nodeType": "Return",
												"src": "11982:20:9"
											}
										]
									},
									"documentation": {
										"id": 3790,
										"nodeType": "StructuredDocumentation",
										"src": "11515:276:9",
										"text": " @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"
									},
									"id": 3817,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint88",
									"nameLocation": "11805:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3792,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11822:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3817,
												"src": "11814:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11814:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11813:15:9"
									},
									"returnParameters": {
										"id": 3796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3795,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3817,
												"src": "11852:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint88",
													"typeString": "uint88"
												},
												"typeName": {
													"id": 3794,
													"name": "uint88",
													"nodeType": "ElementaryTypeName",
													"src": "11852:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint88",
														"typeString": "uint88"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11851:8:9"
									},
									"scope": 4967,
									"src": "11796:213:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3844,
										"nodeType": "Block",
										"src": "12360:149:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3825,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3820,
														"src": "12374:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3828,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12387:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint80_$",
																		"typeString": "type(uint80)"
																	},
																	"typeName": {
																		"id": 3827,
																		"name": "uint80",
																		"nodeType": "ElementaryTypeName",
																		"src": "12387:6:9",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint80_$",
																		"typeString": "type(uint80)"
																	}
																],
																"id": 3826,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "12382:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3829,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12382:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint80",
																"typeString": "type(uint80)"
															}
														},
														"id": 3830,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "12395:3:9",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "12382:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint80",
															"typeString": "uint80"
														}
													},
													"src": "12374:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3838,
												"nodeType": "IfStatement",
												"src": "12370:103:9",
												"trueBody": {
													"id": 3837,
													"nodeType": "Block",
													"src": "12400:73:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3830",
																		"id": 3833,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12452:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		"value": "80"
																	},
																	{
																		"id": 3834,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3820,
																		"src": "12456:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3832,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3212,
																	"src": "12421:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3835,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12421:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3836,
															"nodeType": "RevertStatement",
															"src": "12414:48:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3841,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3820,
															"src": "12496:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3840,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12489:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint80_$",
															"typeString": "type(uint80)"
														},
														"typeName": {
															"id": 3839,
															"name": "uint80",
															"nodeType": "ElementaryTypeName",
															"src": "12489:6:9",
															"typeDescriptions": {}
														}
													},
													"id": 3842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12489:13:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"functionReturnParameters": 3824,
												"id": 3843,
												"nodeType": "Return",
												"src": "12482:20:9"
											}
										]
									},
									"documentation": {
										"id": 3818,
										"nodeType": "StructuredDocumentation",
										"src": "12015:276:9",
										"text": " @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"
									},
									"id": 3845,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint80",
									"nameLocation": "12305:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3820,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12322:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3845,
												"src": "12314:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3819,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12314:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12313:15:9"
									},
									"returnParameters": {
										"id": 3824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3823,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3845,
												"src": "12352:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 3822,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "12352:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12351:8:9"
									},
									"scope": 4967,
									"src": "12296:213:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3872,
										"nodeType": "Block",
										"src": "12860:149:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3853,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3848,
														"src": "12874:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3856,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12887:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint72_$",
																		"typeString": "type(uint72)"
																	},
																	"typeName": {
																		"id": 3855,
																		"name": "uint72",
																		"nodeType": "ElementaryTypeName",
																		"src": "12887:6:9",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint72_$",
																		"typeString": "type(uint72)"
																	}
																],
																"id": 3854,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "12882:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3857,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12882:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint72",
																"typeString": "type(uint72)"
															}
														},
														"id": 3858,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "12895:3:9",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "12882:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint72",
															"typeString": "uint72"
														}
													},
													"src": "12874:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3866,
												"nodeType": "IfStatement",
												"src": "12870:103:9",
												"trueBody": {
													"id": 3865,
													"nodeType": "Block",
													"src": "12900:73:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3732",
																		"id": 3861,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12952:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		"value": "72"
																	},
																	{
																		"id": 3862,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3848,
																		"src": "12956:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3860,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3212,
																	"src": "12921:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3863,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12921:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3864,
															"nodeType": "RevertStatement",
															"src": "12914:48:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3869,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3848,
															"src": "12996:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3868,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12989:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint72_$",
															"typeString": "type(uint72)"
														},
														"typeName": {
															"id": 3867,
															"name": "uint72",
															"nodeType": "ElementaryTypeName",
															"src": "12989:6:9",
															"typeDescriptions": {}
														}
													},
													"id": 3870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12989:13:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint72",
														"typeString": "uint72"
													}
												},
												"functionReturnParameters": 3852,
												"id": 3871,
												"nodeType": "Return",
												"src": "12982:20:9"
											}
										]
									},
									"documentation": {
										"id": 3846,
										"nodeType": "StructuredDocumentation",
										"src": "12515:276:9",
										"text": " @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"
									},
									"id": 3873,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint72",
									"nameLocation": "12805:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3848,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12822:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3873,
												"src": "12814:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3847,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12814:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12813:15:9"
									},
									"returnParameters": {
										"id": 3852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3851,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3873,
												"src": "12852:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint72",
													"typeString": "uint72"
												},
												"typeName": {
													"id": 3850,
													"name": "uint72",
													"nodeType": "ElementaryTypeName",
													"src": "12852:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint72",
														"typeString": "uint72"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12851:8:9"
									},
									"scope": 4967,
									"src": "12796:213:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3900,
										"nodeType": "Block",
										"src": "13360:149:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3881,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3876,
														"src": "13374:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3884,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13387:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 3883,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "13387:6:9",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 3882,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "13382:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3885,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13382:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 3886,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "13395:3:9",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "13382:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "13374:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3894,
												"nodeType": "IfStatement",
												"src": "13370:103:9",
												"trueBody": {
													"id": 3893,
													"nodeType": "Block",
													"src": "13400:73:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3634",
																		"id": 3889,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13452:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		"value": "64"
																	},
																	{
																		"id": 3890,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3876,
																		"src": "13456:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3888,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3212,
																	"src": "13421:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3891,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13421:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3892,
															"nodeType": "RevertStatement",
															"src": "13414:48:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3897,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3876,
															"src": "13496:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3896,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "13489:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint64_$",
															"typeString": "type(uint64)"
														},
														"typeName": {
															"id": 3895,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "13489:6:9",
															"typeDescriptions": {}
														}
													},
													"id": 3898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13489:13:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 3880,
												"id": 3899,
												"nodeType": "Return",
												"src": "13482:20:9"
											}
										]
									},
									"documentation": {
										"id": 3874,
										"nodeType": "StructuredDocumentation",
										"src": "13015:276:9",
										"text": " @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"
									},
									"id": 3901,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint64",
									"nameLocation": "13305:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3876,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13322:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3901,
												"src": "13314:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13314:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13313:15:9"
									},
									"returnParameters": {
										"id": 3880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3879,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3901,
												"src": "13352:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 3878,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "13352:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13351:8:9"
									},
									"scope": 4967,
									"src": "13296:213:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3928,
										"nodeType": "Block",
										"src": "13860:149:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3909,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3904,
														"src": "13874:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3912,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13887:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint56_$",
																		"typeString": "type(uint56)"
																	},
																	"typeName": {
																		"id": 3911,
																		"name": "uint56",
																		"nodeType": "ElementaryTypeName",
																		"src": "13887:6:9",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint56_$",
																		"typeString": "type(uint56)"
																	}
																],
																"id": 3910,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "13882:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3913,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13882:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint56",
																"typeString": "type(uint56)"
															}
														},
														"id": 3914,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "13895:3:9",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "13882:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint56",
															"typeString": "uint56"
														}
													},
													"src": "13874:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3922,
												"nodeType": "IfStatement",
												"src": "13870:103:9",
												"trueBody": {
													"id": 3921,
													"nodeType": "Block",
													"src": "13900:73:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3536",
																		"id": 3917,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13952:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		"value": "56"
																	},
																	{
																		"id": 3918,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3904,
																		"src": "13956:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3916,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3212,
																	"src": "13921:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3919,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13921:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3920,
															"nodeType": "RevertStatement",
															"src": "13914:48:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3925,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3904,
															"src": "13996:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3924,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "13989:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint56_$",
															"typeString": "type(uint56)"
														},
														"typeName": {
															"id": 3923,
															"name": "uint56",
															"nodeType": "ElementaryTypeName",
															"src": "13989:6:9",
															"typeDescriptions": {}
														}
													},
													"id": 3926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13989:13:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint56",
														"typeString": "uint56"
													}
												},
												"functionReturnParameters": 3908,
												"id": 3927,
												"nodeType": "Return",
												"src": "13982:20:9"
											}
										]
									},
									"documentation": {
										"id": 3902,
										"nodeType": "StructuredDocumentation",
										"src": "13515:276:9",
										"text": " @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"
									},
									"id": 3929,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint56",
									"nameLocation": "13805:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3904,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13822:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3929,
												"src": "13814:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13814:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13813:15:9"
									},
									"returnParameters": {
										"id": 3908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3907,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3929,
												"src": "13852:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint56",
													"typeString": "uint56"
												},
												"typeName": {
													"id": 3906,
													"name": "uint56",
													"nodeType": "ElementaryTypeName",
													"src": "13852:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint56",
														"typeString": "uint56"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13851:8:9"
									},
									"scope": 4967,
									"src": "13796:213:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3956,
										"nodeType": "Block",
										"src": "14360:149:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3937,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3932,
														"src": "14374:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3940,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14387:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint48_$",
																		"typeString": "type(uint48)"
																	},
																	"typeName": {
																		"id": 3939,
																		"name": "uint48",
																		"nodeType": "ElementaryTypeName",
																		"src": "14387:6:9",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint48_$",
																		"typeString": "type(uint48)"
																	}
																],
																"id": 3938,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "14382:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3941,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14382:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint48",
																"typeString": "type(uint48)"
															}
														},
														"id": 3942,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "14395:3:9",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "14382:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														}
													},
													"src": "14374:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3950,
												"nodeType": "IfStatement",
												"src": "14370:103:9",
												"trueBody": {
													"id": 3949,
													"nodeType": "Block",
													"src": "14400:73:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3438",
																		"id": 3945,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14452:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		"value": "48"
																	},
																	{
																		"id": 3946,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3932,
																		"src": "14456:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3944,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3212,
																	"src": "14421:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3947,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14421:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3948,
															"nodeType": "RevertStatement",
															"src": "14414:48:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3953,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3932,
															"src": "14496:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3952,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "14489:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint48_$",
															"typeString": "type(uint48)"
														},
														"typeName": {
															"id": 3951,
															"name": "uint48",
															"nodeType": "ElementaryTypeName",
															"src": "14489:6:9",
															"typeDescriptions": {}
														}
													},
													"id": 3954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14489:13:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"functionReturnParameters": 3936,
												"id": 3955,
												"nodeType": "Return",
												"src": "14482:20:9"
											}
										]
									},
									"documentation": {
										"id": 3930,
										"nodeType": "StructuredDocumentation",
										"src": "14015:276:9",
										"text": " @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"
									},
									"id": 3957,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint48",
									"nameLocation": "14305:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3932,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14322:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3957,
												"src": "14314:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14314:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14313:15:9"
									},
									"returnParameters": {
										"id": 3936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3935,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3957,
												"src": "14352:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 3934,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "14352:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14351:8:9"
									},
									"scope": 4967,
									"src": "14296:213:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3984,
										"nodeType": "Block",
										"src": "14860:149:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3965,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3960,
														"src": "14874:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3968,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14887:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint40_$",
																		"typeString": "type(uint40)"
																	},
																	"typeName": {
																		"id": 3967,
																		"name": "uint40",
																		"nodeType": "ElementaryTypeName",
																		"src": "14887:6:9",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint40_$",
																		"typeString": "type(uint40)"
																	}
																],
																"id": 3966,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "14882:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3969,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14882:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint40",
																"typeString": "type(uint40)"
															}
														},
														"id": 3970,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "14895:3:9",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "14882:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint40",
															"typeString": "uint40"
														}
													},
													"src": "14874:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3978,
												"nodeType": "IfStatement",
												"src": "14870:103:9",
												"trueBody": {
													"id": 3977,
													"nodeType": "Block",
													"src": "14900:73:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3430",
																		"id": 3973,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14952:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		"value": "40"
																	},
																	{
																		"id": 3974,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3960,
																		"src": "14956:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3972,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3212,
																	"src": "14921:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3975,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14921:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3976,
															"nodeType": "RevertStatement",
															"src": "14914:48:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3981,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3960,
															"src": "14996:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3980,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "14989:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint40_$",
															"typeString": "type(uint40)"
														},
														"typeName": {
															"id": 3979,
															"name": "uint40",
															"nodeType": "ElementaryTypeName",
															"src": "14989:6:9",
															"typeDescriptions": {}
														}
													},
													"id": 3982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14989:13:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint40",
														"typeString": "uint40"
													}
												},
												"functionReturnParameters": 3964,
												"id": 3983,
												"nodeType": "Return",
												"src": "14982:20:9"
											}
										]
									},
									"documentation": {
										"id": 3958,
										"nodeType": "StructuredDocumentation",
										"src": "14515:276:9",
										"text": " @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"
									},
									"id": 3985,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint40",
									"nameLocation": "14805:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3960,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14822:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3985,
												"src": "14814:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3959,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14814:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14813:15:9"
									},
									"returnParameters": {
										"id": 3964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3963,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3985,
												"src": "14852:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint40",
													"typeString": "uint40"
												},
												"typeName": {
													"id": 3962,
													"name": "uint40",
													"nodeType": "ElementaryTypeName",
													"src": "14852:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint40",
														"typeString": "uint40"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14851:8:9"
									},
									"scope": 4967,
									"src": "14796:213:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4012,
										"nodeType": "Block",
										"src": "15360:149:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3993,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3988,
														"src": "15374:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3996,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15387:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint32_$",
																		"typeString": "type(uint32)"
																	},
																	"typeName": {
																		"id": 3995,
																		"name": "uint32",
																		"nodeType": "ElementaryTypeName",
																		"src": "15387:6:9",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint32_$",
																		"typeString": "type(uint32)"
																	}
																],
																"id": 3994,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "15382:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3997,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15382:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint32",
																"typeString": "type(uint32)"
															}
														},
														"id": 3998,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "15395:3:9",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "15382:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "15374:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4006,
												"nodeType": "IfStatement",
												"src": "15370:103:9",
												"trueBody": {
													"id": 4005,
													"nodeType": "Block",
													"src": "15400:73:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3332",
																		"id": 4001,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15452:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		"value": "32"
																	},
																	{
																		"id": 4002,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3988,
																		"src": "15456:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4000,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3212,
																	"src": "15421:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 4003,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15421:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4004,
															"nodeType": "RevertStatement",
															"src": "15414:48:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4009,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3988,
															"src": "15496:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4008,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "15489:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint32_$",
															"typeString": "type(uint32)"
														},
														"typeName": {
															"id": 4007,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "15489:6:9",
															"typeDescriptions": {}
														}
													},
													"id": 4010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15489:13:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 3992,
												"id": 4011,
												"nodeType": "Return",
												"src": "15482:20:9"
											}
										]
									},
									"documentation": {
										"id": 3986,
										"nodeType": "StructuredDocumentation",
										"src": "15015:276:9",
										"text": " @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"
									},
									"id": 4013,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint32",
									"nameLocation": "15305:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3988,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15322:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 4013,
												"src": "15314:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3987,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15314:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15313:15:9"
									},
									"returnParameters": {
										"id": 3992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3991,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4013,
												"src": "15352:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 3990,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "15352:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15351:8:9"
									},
									"scope": 4967,
									"src": "15296:213:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4040,
										"nodeType": "Block",
										"src": "15860:149:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4021,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4016,
														"src": "15874:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4024,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15887:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint24_$",
																		"typeString": "type(uint24)"
																	},
																	"typeName": {
																		"id": 4023,
																		"name": "uint24",
																		"nodeType": "ElementaryTypeName",
																		"src": "15887:6:9",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint24_$",
																		"typeString": "type(uint24)"
																	}
																],
																"id": 4022,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "15882:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4025,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15882:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint24",
																"typeString": "type(uint24)"
															}
														},
														"id": 4026,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "15895:3:9",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "15882:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"src": "15874:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4034,
												"nodeType": "IfStatement",
												"src": "15870:103:9",
												"trueBody": {
													"id": 4033,
													"nodeType": "Block",
													"src": "15900:73:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3234",
																		"id": 4029,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15952:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		"value": "24"
																	},
																	{
																		"id": 4030,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4016,
																		"src": "15956:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4028,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3212,
																	"src": "15921:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 4031,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15921:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4032,
															"nodeType": "RevertStatement",
															"src": "15914:48:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4037,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4016,
															"src": "15996:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4036,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "15989:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint24_$",
															"typeString": "type(uint24)"
														},
														"typeName": {
															"id": 4035,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "15989:6:9",
															"typeDescriptions": {}
														}
													},
													"id": 4038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15989:13:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"functionReturnParameters": 4020,
												"id": 4039,
												"nodeType": "Return",
												"src": "15982:20:9"
											}
										]
									},
									"documentation": {
										"id": 4014,
										"nodeType": "StructuredDocumentation",
										"src": "15515:276:9",
										"text": " @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"
									},
									"id": 4041,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint24",
									"nameLocation": "15805:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4016,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15822:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 4041,
												"src": "15814:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4015,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15814:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15813:15:9"
									},
									"returnParameters": {
										"id": 4020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4019,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4041,
												"src": "15852:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 4018,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "15852:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15851:8:9"
									},
									"scope": 4967,
									"src": "15796:213:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4068,
										"nodeType": "Block",
										"src": "16360:149:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4049,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4044,
														"src": "16374:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4052,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16387:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint16_$",
																		"typeString": "type(uint16)"
																	},
																	"typeName": {
																		"id": 4051,
																		"name": "uint16",
																		"nodeType": "ElementaryTypeName",
																		"src": "16387:6:9",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint16_$",
																		"typeString": "type(uint16)"
																	}
																],
																"id": 4050,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "16382:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4053,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16382:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint16",
																"typeString": "type(uint16)"
															}
														},
														"id": 4054,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "16395:3:9",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "16382:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "16374:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4062,
												"nodeType": "IfStatement",
												"src": "16370:103:9",
												"trueBody": {
													"id": 4061,
													"nodeType": "Block",
													"src": "16400:73:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3136",
																		"id": 4057,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16452:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		"value": "16"
																	},
																	{
																		"id": 4058,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4044,
																		"src": "16456:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4056,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3212,
																	"src": "16421:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 4059,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16421:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4060,
															"nodeType": "RevertStatement",
															"src": "16414:48:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4065,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4044,
															"src": "16496:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4064,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "16489:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint16_$",
															"typeString": "type(uint16)"
														},
														"typeName": {
															"id": 4063,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "16489:6:9",
															"typeDescriptions": {}
														}
													},
													"id": 4066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16489:13:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"functionReturnParameters": 4048,
												"id": 4067,
												"nodeType": "Return",
												"src": "16482:20:9"
											}
										]
									},
									"documentation": {
										"id": 4042,
										"nodeType": "StructuredDocumentation",
										"src": "16015:276:9",
										"text": " @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"
									},
									"id": 4069,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint16",
									"nameLocation": "16305:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4044,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16322:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 4069,
												"src": "16314:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16314:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16313:15:9"
									},
									"returnParameters": {
										"id": 4048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4047,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4069,
												"src": "16352:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 4046,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "16352:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16351:8:9"
									},
									"scope": 4967,
									"src": "16296:213:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4096,
										"nodeType": "Block",
										"src": "16854:146:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4083,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4077,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4072,
														"src": "16868:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4080,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16881:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 4079,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "16881:5:9",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	}
																],
																"id": 4078,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "16876:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4081,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16876:11:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint8",
																"typeString": "type(uint8)"
															}
														},
														"id": 4082,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "16888:3:9",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "16876:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "16868:23:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4090,
												"nodeType": "IfStatement",
												"src": "16864:101:9",
												"trueBody": {
													"id": 4089,
													"nodeType": "Block",
													"src": "16893:72:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "38",
																		"id": 4085,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16945:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		"value": "8"
																	},
																	{
																		"id": 4086,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4072,
																		"src": "16948:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4084,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3212,
																	"src": "16914:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 4087,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16914:40:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4088,
															"nodeType": "RevertStatement",
															"src": "16907:47:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4093,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4072,
															"src": "16987:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4092,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "16981:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint8_$",
															"typeString": "type(uint8)"
														},
														"typeName": {
															"id": 4091,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "16981:5:9",
															"typeDescriptions": {}
														}
													},
													"id": 4094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16981:12:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 4076,
												"id": 4095,
												"nodeType": "Return",
												"src": "16974:19:9"
											}
										]
									},
									"documentation": {
										"id": 4070,
										"nodeType": "StructuredDocumentation",
										"src": "16515:272:9",
										"text": " @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"
									},
									"id": 4097,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint8",
									"nameLocation": "16801:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4072,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16817:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 4097,
												"src": "16809:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4071,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16809:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16808:15:9"
									},
									"returnParameters": {
										"id": 4076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4075,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4097,
												"src": "16847:5:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 4074,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "16847:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16846:7:9"
									},
									"scope": 4967,
									"src": "16792:208:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4119,
										"nodeType": "Block",
										"src": "17236:128:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4105,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4100,
														"src": "17250:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "30",
														"id": 4106,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17258:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17250:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4113,
												"nodeType": "IfStatement",
												"src": "17246:81:9",
												"trueBody": {
													"id": 4112,
													"nodeType": "Block",
													"src": "17261:66:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 4109,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4100,
																		"src": "17310:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4108,
																	"name": "SafeCastOverflowedIntToUint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3217,
																	"src": "17282:27:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_int256_$returns$_t_error_$",
																		"typeString": "function (int256) pure returns (error)"
																	}
																},
																"id": 4110,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17282:34:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4111,
															"nodeType": "RevertStatement",
															"src": "17275:41:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4116,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4100,
															"src": "17351:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 4115,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "17343:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 4114,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17343:7:9",
															"typeDescriptions": {}
														}
													},
													"id": 4117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17343:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 4104,
												"id": 4118,
												"nodeType": "Return",
												"src": "17336:21:9"
											}
										]
									},
									"documentation": {
										"id": 4098,
										"nodeType": "StructuredDocumentation",
										"src": "17006:160:9",
										"text": " @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."
									},
									"id": 4120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint256",
									"nameLocation": "17180:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4100,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17197:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 4120,
												"src": "17190:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4099,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "17190:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17189:14:9"
									},
									"returnParameters": {
										"id": 4104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4103,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4120,
												"src": "17227:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17227:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17226:9:9"
									},
									"scope": 4967,
									"src": "17171:193:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4145,
										"nodeType": "Block",
										"src": "17761:150:9",
										"statements": [
											{
												"expression": {
													"id": 4133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4128,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4126,
														"src": "17771:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int248",
															"typeString": "int248"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4131,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4123,
																"src": "17791:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4130,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17784:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int248_$",
																"typeString": "type(int248)"
															},
															"typeName": {
																"id": 4129,
																"name": "int248",
																"nodeType": "ElementaryTypeName",
																"src": "17784:6:9",
																"typeDescriptions": {}
															}
														},
														"id": 4132,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17784:13:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int248",
															"typeString": "int248"
														}
													},
													"src": "17771:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int248",
														"typeString": "int248"
													}
												},
												"id": 4134,
												"nodeType": "ExpressionStatement",
												"src": "17771:26:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4135,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4126,
														"src": "17811:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int248",
															"typeString": "int248"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4136,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4123,
														"src": "17825:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "17811:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4144,
												"nodeType": "IfStatement",
												"src": "17807:98:9",
												"trueBody": {
													"id": 4143,
													"nodeType": "Block",
													"src": "17832:73:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323438",
																		"id": 4139,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17883:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		"value": "248"
																	},
																	{
																		"id": 4140,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4123,
																		"src": "17888:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4138,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3224,
																	"src": "17853:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4141,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17853:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4142,
															"nodeType": "RevertStatement",
															"src": "17846:48:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4121,
										"nodeType": "StructuredDocumentation",
										"src": "17370:312:9",
										"text": " @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"
									},
									"id": 4146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt248",
									"nameLocation": "17696:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4123,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17712:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 4146,
												"src": "17705:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4122,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "17705:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17704:14:9"
									},
									"returnParameters": {
										"id": 4127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4126,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "17749:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 4146,
												"src": "17742:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int248",
													"typeString": "int248"
												},
												"typeName": {
													"id": 4125,
													"name": "int248",
													"nodeType": "ElementaryTypeName",
													"src": "17742:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int248",
														"typeString": "int248"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17741:19:9"
									},
									"scope": 4967,
									"src": "17687:224:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4171,
										"nodeType": "Block",
										"src": "18308:150:9",
										"statements": [
											{
												"expression": {
													"id": 4159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4154,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4152,
														"src": "18318:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int240",
															"typeString": "int240"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4157,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4149,
																"src": "18338:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4156,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18331:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int240_$",
																"typeString": "type(int240)"
															},
															"typeName": {
																"id": 4155,
																"name": "int240",
																"nodeType": "ElementaryTypeName",
																"src": "18331:6:9",
																"typeDescriptions": {}
															}
														},
														"id": 4158,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18331:13:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int240",
															"typeString": "int240"
														}
													},
													"src": "18318:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int240",
														"typeString": "int240"
													}
												},
												"id": 4160,
												"nodeType": "ExpressionStatement",
												"src": "18318:26:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4161,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4152,
														"src": "18358:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int240",
															"typeString": "int240"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4162,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4149,
														"src": "18372:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "18358:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4170,
												"nodeType": "IfStatement",
												"src": "18354:98:9",
												"trueBody": {
													"id": 4169,
													"nodeType": "Block",
													"src": "18379:73:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323430",
																		"id": 4165,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18430:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		"value": "240"
																	},
																	{
																		"id": 4166,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4149,
																		"src": "18435:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4164,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3224,
																	"src": "18400:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4167,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18400:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4168,
															"nodeType": "RevertStatement",
															"src": "18393:48:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4147,
										"nodeType": "StructuredDocumentation",
										"src": "17917:312:9",
										"text": " @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"
									},
									"id": 4172,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt240",
									"nameLocation": "18243:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4149,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18259:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 4172,
												"src": "18252:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4148,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "18252:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18251:14:9"
									},
									"returnParameters": {
										"id": 4153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4152,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "18296:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 4172,
												"src": "18289:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int240",
													"typeString": "int240"
												},
												"typeName": {
													"id": 4151,
													"name": "int240",
													"nodeType": "ElementaryTypeName",
													"src": "18289:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int240",
														"typeString": "int240"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18288:19:9"
									},
									"scope": 4967,
									"src": "18234:224:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4197,
										"nodeType": "Block",
										"src": "18855:150:9",
										"statements": [
											{
												"expression": {
													"id": 4185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4180,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4178,
														"src": "18865:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int232",
															"typeString": "int232"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4183,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4175,
																"src": "18885:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4182,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18878:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int232_$",
																"typeString": "type(int232)"
															},
															"typeName": {
																"id": 4181,
																"name": "int232",
																"nodeType": "ElementaryTypeName",
																"src": "18878:6:9",
																"typeDescriptions": {}
															}
														},
														"id": 4184,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18878:13:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int232",
															"typeString": "int232"
														}
													},
													"src": "18865:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int232",
														"typeString": "int232"
													}
												},
												"id": 4186,
												"nodeType": "ExpressionStatement",
												"src": "18865:26:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4187,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4178,
														"src": "18905:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int232",
															"typeString": "int232"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4188,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4175,
														"src": "18919:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "18905:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4196,
												"nodeType": "IfStatement",
												"src": "18901:98:9",
												"trueBody": {
													"id": 4195,
													"nodeType": "Block",
													"src": "18926:73:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323332",
																		"id": 4191,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18977:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		"value": "232"
																	},
																	{
																		"id": 4192,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4175,
																		"src": "18982:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4190,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3224,
																	"src": "18947:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18947:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4194,
															"nodeType": "RevertStatement",
															"src": "18940:48:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4173,
										"nodeType": "StructuredDocumentation",
										"src": "18464:312:9",
										"text": " @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"
									},
									"id": 4198,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt232",
									"nameLocation": "18790:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4175,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18806:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 4198,
												"src": "18799:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4174,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "18799:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18798:14:9"
									},
									"returnParameters": {
										"id": 4179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4178,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "18843:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 4198,
												"src": "18836:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int232",
													"typeString": "int232"
												},
												"typeName": {
													"id": 4177,
													"name": "int232",
													"nodeType": "ElementaryTypeName",
													"src": "18836:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int232",
														"typeString": "int232"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18835:19:9"
									},
									"scope": 4967,
									"src": "18781:224:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4223,
										"nodeType": "Block",
										"src": "19402:150:9",
										"statements": [
											{
												"expression": {
													"id": 4211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4206,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4204,
														"src": "19412:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int224",
															"typeString": "int224"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4209,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4201,
																"src": "19432:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4208,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19425:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int224_$",
																"typeString": "type(int224)"
															},
															"typeName": {
																"id": 4207,
																"name": "int224",
																"nodeType": "ElementaryTypeName",
																"src": "19425:6:9",
																"typeDescriptions": {}
															}
														},
														"id": 4210,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19425:13:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int224",
															"typeString": "int224"
														}
													},
													"src": "19412:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int224",
														"typeString": "int224"
													}
												},
												"id": 4212,
												"nodeType": "ExpressionStatement",
												"src": "19412:26:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4213,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4204,
														"src": "19452:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int224",
															"typeString": "int224"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4214,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4201,
														"src": "19466:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "19452:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4222,
												"nodeType": "IfStatement",
												"src": "19448:98:9",
												"trueBody": {
													"id": 4221,
													"nodeType": "Block",
													"src": "19473:73:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323234",
																		"id": 4217,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19524:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		"value": "224"
																	},
																	{
																		"id": 4218,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4201,
																		"src": "19529:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4216,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3224,
																	"src": "19494:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4219,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19494:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4220,
															"nodeType": "RevertStatement",
															"src": "19487:48:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4199,
										"nodeType": "StructuredDocumentation",
										"src": "19011:312:9",
										"text": " @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"
									},
									"id": 4224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt224",
									"nameLocation": "19337:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4201,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19353:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 4224,
												"src": "19346:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4200,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "19346:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19345:14:9"
									},
									"returnParameters": {
										"id": 4205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4204,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "19390:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 4224,
												"src": "19383:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int224",
													"typeString": "int224"
												},
												"typeName": {
													"id": 4203,
													"name": "int224",
													"nodeType": "ElementaryTypeName",
													"src": "19383:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int224",
														"typeString": "int224"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19382:19:9"
									},
									"scope": 4967,
									"src": "19328:224:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4249,
										"nodeType": "Block",
										"src": "19949:150:9",
										"statements": [
											{
												"expression": {
													"id": 4237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4232,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4230,
														"src": "19959:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int216",
															"typeString": "int216"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4235,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4227,
																"src": "19979:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4234,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19972:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int216_$",
																"typeString": "type(int216)"
															},
															"typeName": {
																"id": 4233,
																"name": "int216",
																"nodeType": "ElementaryTypeName",
																"src": "19972:6:9",
																"typeDescriptions": {}
															}
														},
														"id": 4236,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19972:13:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int216",
															"typeString": "int216"
														}
													},
													"src": "19959:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int216",
														"typeString": "int216"
													}
												},
												"id": 4238,
												"nodeType": "ExpressionStatement",
												"src": "19959:26:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4239,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4230,
														"src": "19999:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int216",
															"typeString": "int216"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4240,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4227,
														"src": "20013:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "19999:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4248,
												"nodeType": "IfStatement",
												"src": "19995:98:9",
												"trueBody": {
													"id": 4247,
													"nodeType": "Block",
													"src": "20020:73:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323136",
																		"id": 4243,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20071:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		"value": "216"
																	},
																	{
																		"id": 4244,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4227,
																		"src": "20076:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4242,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3224,
																	"src": "20041:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4245,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20041:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4246,
															"nodeType": "RevertStatement",
															"src": "20034:48:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4225,
										"nodeType": "StructuredDocumentation",
										"src": "19558:312:9",
										"text": " @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"
									},
									"id": 4250,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt216",
									"nameLocation": "19884:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4227,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19900:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 4250,
												"src": "19893:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4226,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "19893:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19892:14:9"
									},
									"returnParameters": {
										"id": 4231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4230,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "19937:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 4250,
												"src": "19930:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int216",
													"typeString": "int216"
												},
												"typeName": {
													"id": 4229,
													"name": "int216",
													"nodeType": "ElementaryTypeName",
													"src": "19930:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int216",
														"typeString": "int216"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19929:19:9"
									},
									"scope": 4967,
									"src": "19875:224:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4275,
										"nodeType": "Block",
										"src": "20496:150:9",
										"statements": [
											{
												"expression": {
													"id": 4263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4258,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4256,
														"src": "20506:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int208",
															"typeString": "int208"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4261,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4253,
																"src": "20526:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4260,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20519:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int208_$",
																"typeString": "type(int208)"
															},
															"typeName": {
																"id": 4259,
																"name": "int208",
																"nodeType": "ElementaryTypeName",
																"src": "20519:6:9",
																"typeDescriptions": {}
															}
														},
														"id": 4262,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20519:13:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int208",
															"typeString": "int208"
														}
													},
													"src": "20506:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int208",
														"typeString": "int208"
													}
												},
												"id": 4264,
												"nodeType": "ExpressionStatement",
												"src": "20506:26:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4265,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4256,
														"src": "20546:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int208",
															"typeString": "int208"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4266,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4253,
														"src": "20560:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "20546:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4274,
												"nodeType": "IfStatement",
												"src": "20542:98:9",
												"trueBody": {
													"id": 4273,
													"nodeType": "Block",
													"src": "20567:73:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323038",
																		"id": 4269,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20618:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		"value": "208"
																	},
																	{
																		"id": 4270,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4253,
																		"src": "20623:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4268,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3224,
																	"src": "20588:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4271,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20588:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4272,
															"nodeType": "RevertStatement",
															"src": "20581:48:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4251,
										"nodeType": "StructuredDocumentation",
										"src": "20105:312:9",
										"text": " @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"
									},
									"id": 4276,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt208",
									"nameLocation": "20431:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4253,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20447:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 4276,
												"src": "20440:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4252,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "20440:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20439:14:9"
									},
									"returnParameters": {
										"id": 4257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4256,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "20484:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 4276,
												"src": "20477:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int208",
													"typeString": "int208"
												},
												"typeName": {
													"id": 4255,
													"name": "int208",
													"nodeType": "ElementaryTypeName",
													"src": "20477:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int208",
														"typeString": "int208"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20476:19:9"
									},
									"scope": 4967,
									"src": "20422:224:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4301,
										"nodeType": "Block",
										"src": "21043:150:9",
										"statements": [
											{
												"expression": {
													"id": 4289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4284,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4282,
														"src": "21053:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int200",
															"typeString": "int200"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4287,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4279,
																"src": "21073:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4286,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "21066:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int200_$",
																"typeString": "type(int200)"
															},
															"typeName": {
																"id": 4285,
																"name": "int200",
																"nodeType": "ElementaryTypeName",
																"src": "21066:6:9",
																"typeDescriptions": {}
															}
														},
														"id": 4288,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21066:13:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int200",
															"typeString": "int200"
														}
													},
													"src": "21053:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int200",
														"typeString": "int200"
													}
												},
												"id": 4290,
												"nodeType": "ExpressionStatement",
												"src": "21053:26:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4291,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4282,
														"src": "21093:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int200",
															"typeString": "int200"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4292,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4279,
														"src": "21107:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "21093:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4300,
												"nodeType": "IfStatement",
												"src": "21089:98:9",
												"trueBody": {
													"id": 4299,
													"nodeType": "Block",
													"src": "21114:73:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323030",
																		"id": 4295,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21165:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		"value": "200"
																	},
																	{
																		"id": 4296,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4279,
																		"src": "21170:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4294,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3224,
																	"src": "21135:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21135:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4298,
															"nodeType": "RevertStatement",
															"src": "21128:48:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4277,
										"nodeType": "StructuredDocumentation",
										"src": "20652:312:9",
										"text": " @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"
									},
									"id": 4302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt200",
									"nameLocation": "20978:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4279,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20994:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 4302,
												"src": "20987:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4278,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "20987:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20986:14:9"
									},
									"returnParameters": {
										"id": 4283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4282,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "21031:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 4302,
												"src": "21024:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int200",
													"typeString": "int200"
												},
												"typeName": {
													"id": 4281,
													"name": "int200",
													"nodeType": "ElementaryTypeName",
													"src": "21024:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int200",
														"typeString": "int200"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21023:19:9"
									},
									"scope": 4967,
									"src": "20969:224:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4327,
										"nodeType": "Block",
										"src": "21590:150:9",
										"statements": [
											{
												"expression": {
													"id": 4315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4310,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4308,
														"src": "21600:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int192",
															"typeString": "int192"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4313,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4305,
																"src": "21620:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4312,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "21613:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int192_$",
																"typeString": "type(int192)"
															},
															"typeName": {
																"id": 4311,
																"name": "int192",
																"nodeType": "ElementaryTypeName",
																"src": "21613:6:9",
																"typeDescriptions": {}
															}
														},
														"id": 4314,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21613:13:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int192",
															"typeString": "int192"
														}
													},
													"src": "21600:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int192",
														"typeString": "int192"
													}
												},
												"id": 4316,
												"nodeType": "ExpressionStatement",
												"src": "21600:26:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4317,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4308,
														"src": "21640:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int192",
															"typeString": "int192"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4318,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4305,
														"src": "21654:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "21640:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4326,
												"nodeType": "IfStatement",
												"src": "21636:98:9",
												"trueBody": {
													"id": 4325,
													"nodeType": "Block",
													"src": "21661:73:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313932",
																		"id": 4321,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21712:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		"value": "192"
																	},
																	{
																		"id": 4322,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4305,
																		"src": "21717:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4320,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3224,
																	"src": "21682:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4323,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21682:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4324,
															"nodeType": "RevertStatement",
															"src": "21675:48:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4303,
										"nodeType": "StructuredDocumentation",
										"src": "21199:312:9",
										"text": " @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"
									},
									"id": 4328,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt192",
									"nameLocation": "21525:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4305,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21541:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 4328,
												"src": "21534:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4304,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "21534:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21533:14:9"
									},
									"returnParameters": {
										"id": 4309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4308,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "21578:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 4328,
												"src": "21571:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int192",
													"typeString": "int192"
												},
												"typeName": {
													"id": 4307,
													"name": "int192",
													"nodeType": "ElementaryTypeName",
													"src": "21571:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int192",
														"typeString": "int192"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21570:19:9"
									},
									"scope": 4967,
									"src": "21516:224:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4353,
										"nodeType": "Block",
										"src": "22137:150:9",
										"statements": [
											{
												"expression": {
													"id": 4341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4336,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4334,
														"src": "22147:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int184",
															"typeString": "int184"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4339,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4331,
																"src": "22167:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4338,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22160:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int184_$",
																"typeString": "type(int184)"
															},
															"typeName": {
																"id": 4337,
																"name": "int184",
																"nodeType": "ElementaryTypeName",
																"src": "22160:6:9",
																"typeDescriptions": {}
															}
														},
														"id": 4340,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22160:13:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int184",
															"typeString": "int184"
														}
													},
													"src": "22147:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int184",
														"typeString": "int184"
													}
												},
												"id": 4342,
												"nodeType": "ExpressionStatement",
												"src": "22147:26:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4343,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4334,
														"src": "22187:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int184",
															"typeString": "int184"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4344,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4331,
														"src": "22201:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "22187:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4352,
												"nodeType": "IfStatement",
												"src": "22183:98:9",
												"trueBody": {
													"id": 4351,
													"nodeType": "Block",
													"src": "22208:73:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313834",
																		"id": 4347,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22259:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		"value": "184"
																	},
																	{
																		"id": 4348,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4331,
																		"src": "22264:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4346,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3224,
																	"src": "22229:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4349,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22229:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4350,
															"nodeType": "RevertStatement",
															"src": "22222:48:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4329,
										"nodeType": "StructuredDocumentation",
										"src": "21746:312:9",
										"text": " @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"
									},
									"id": 4354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt184",
									"nameLocation": "22072:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4331,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22088:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 4354,
												"src": "22081:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4330,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "22081:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22080:14:9"
									},
									"returnParameters": {
										"id": 4335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4334,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "22125:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 4354,
												"src": "22118:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int184",
													"typeString": "int184"
												},
												"typeName": {
													"id": 4333,
													"name": "int184",
													"nodeType": "ElementaryTypeName",
													"src": "22118:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int184",
														"typeString": "int184"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22117:19:9"
									},
									"scope": 4967,
									"src": "22063:224:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4379,
										"nodeType": "Block",
										"src": "22684:150:9",
										"statements": [
											{
												"expression": {
													"id": 4367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4362,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4360,
														"src": "22694:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int176",
															"typeString": "int176"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4365,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4357,
																"src": "22714:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4364,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22707:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int176_$",
																"typeString": "type(int176)"
															},
															"typeName": {
																"id": 4363,
																"name": "int176",
																"nodeType": "ElementaryTypeName",
																"src": "22707:6:9",
																"typeDescriptions": {}
															}
														},
														"id": 4366,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22707:13:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int176",
															"typeString": "int176"
														}
													},
													"src": "22694:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int176",
														"typeString": "int176"
													}
												},
												"id": 4368,
												"nodeType": "ExpressionStatement",
												"src": "22694:26:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4369,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4360,
														"src": "22734:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int176",
															"typeString": "int176"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4370,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4357,
														"src": "22748:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "22734:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4378,
												"nodeType": "IfStatement",
												"src": "22730:98:9",
												"trueBody": {
													"id": 4377,
													"nodeType": "Block",
													"src": "22755:73:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313736",
																		"id": 4373,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22806:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		"value": "176"
																	},
																	{
																		"id": 4374,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4357,
																		"src": "22811:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4372,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3224,
																	"src": "22776:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4375,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22776:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4376,
															"nodeType": "RevertStatement",
															"src": "22769:48:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4355,
										"nodeType": "StructuredDocumentation",
										"src": "22293:312:9",
										"text": " @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"
									},
									"id": 4380,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt176",
									"nameLocation": "22619:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4357,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22635:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 4380,
												"src": "22628:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4356,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "22628:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22627:14:9"
									},
									"returnParameters": {
										"id": 4361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4360,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "22672:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 4380,
												"src": "22665:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int176",
													"typeString": "int176"
												},
												"typeName": {
													"id": 4359,
													"name": "int176",
													"nodeType": "ElementaryTypeName",
													"src": "22665:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int176",
														"typeString": "int176"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22664:19:9"
									},
									"scope": 4967,
									"src": "22610:224:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4405,
										"nodeType": "Block",
										"src": "23231:150:9",
										"statements": [
											{
												"expression": {
													"id": 4393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4388,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4386,
														"src": "23241:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int168",
															"typeString": "int168"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4391,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4383,
																"src": "23261:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4390,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "23254:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int168_$",
																"typeString": "type(int168)"
															},
															"typeName": {
																"id": 4389,
																"name": "int168",
																"nodeType": "ElementaryTypeName",
																"src": "23254:6:9",
																"typeDescriptions": {}
															}
														},
														"id": 4392,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23254:13:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int168",
															"typeString": "int168"
														}
													},
													"src": "23241:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int168",
														"typeString": "int168"
													}
												},
												"id": 4394,
												"nodeType": "ExpressionStatement",
												"src": "23241:26:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4395,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4386,
														"src": "23281:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int168",
															"typeString": "int168"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4396,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4383,
														"src": "23295:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "23281:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4404,
												"nodeType": "IfStatement",
												"src": "23277:98:9",
												"trueBody": {
													"id": 4403,
													"nodeType": "Block",
													"src": "23302:73:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313638",
																		"id": 4399,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23353:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		"value": "168"
																	},
																	{
																		"id": 4400,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4383,
																		"src": "23358:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4398,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3224,
																	"src": "23323:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4401,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23323:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4402,
															"nodeType": "RevertStatement",
															"src": "23316:48:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4381,
										"nodeType": "StructuredDocumentation",
										"src": "22840:312:9",
										"text": " @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"
									},
									"id": 4406,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt168",
									"nameLocation": "23166:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4383,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23182:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 4406,
												"src": "23175:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4382,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "23175:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23174:14:9"
									},
									"returnParameters": {
										"id": 4387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4386,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "23219:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 4406,
												"src": "23212:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int168",
													"typeString": "int168"
												},
												"typeName": {
													"id": 4385,
													"name": "int168",
													"nodeType": "ElementaryTypeName",
													"src": "23212:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int168",
														"typeString": "int168"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23211:19:9"
									},
									"scope": 4967,
									"src": "23157:224:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4431,
										"nodeType": "Block",
										"src": "23778:150:9",
										"statements": [
											{
												"expression": {
													"id": 4419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4414,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4412,
														"src": "23788:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int160",
															"typeString": "int160"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4417,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4409,
																"src": "23808:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4416,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "23801:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int160_$",
																"typeString": "type(int160)"
															},
															"typeName": {
																"id": 4415,
																"name": "int160",
																"nodeType": "ElementaryTypeName",
																"src": "23801:6:9",
																"typeDescriptions": {}
															}
														},
														"id": 4418,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23801:13:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int160",
															"typeString": "int160"
														}
													},
													"src": "23788:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int160",
														"typeString": "int160"
													}
												},
												"id": 4420,
												"nodeType": "ExpressionStatement",
												"src": "23788:26:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4421,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4412,
														"src": "23828:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int160",
															"typeString": "int160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4422,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4409,
														"src": "23842:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "23828:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4430,
												"nodeType": "IfStatement",
												"src": "23824:98:9",
												"trueBody": {
													"id": 4429,
													"nodeType": "Block",
													"src": "23849:73:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313630",
																		"id": 4425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23900:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		"value": "160"
																	},
																	{
																		"id": 4426,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4409,
																		"src": "23905:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4424,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3224,
																	"src": "23870:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4427,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23870:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4428,
															"nodeType": "RevertStatement",
															"src": "23863:48:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4407,
										"nodeType": "StructuredDocumentation",
										"src": "23387:312:9",
										"text": " @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"
									},
									"id": 4432,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt160",
									"nameLocation": "23713:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4409,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23729:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 4432,
												"src": "23722:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4408,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "23722:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23721:14:9"
									},
									"returnParameters": {
										"id": 4413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4412,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "23766:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 4432,
												"src": "23759:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int160",
													"typeString": "int160"
												},
												"typeName": {
													"id": 4411,
													"name": "int160",
													"nodeType": "ElementaryTypeName",
													"src": "23759:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int160",
														"typeString": "int160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23758:19:9"
									},
									"scope": 4967,
									"src": "23704:224:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4457,
										"nodeType": "Block",
										"src": "24325:150:9",
										"statements": [
											{
												"expression": {
													"id": 4445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4440,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4438,
														"src": "24335:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int152",
															"typeString": "int152"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4443,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4435,
																"src": "24355:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4442,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "24348:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int152_$",
																"typeString": "type(int152)"
															},
															"typeName": {
																"id": 4441,
																"name": "int152",
																"nodeType": "ElementaryTypeName",
																"src": "24348:6:9",
																"typeDescriptions": {}
															}
														},
														"id": 4444,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24348:13:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int152",
															"typeString": "int152"
														}
													},
													"src": "24335:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int152",
														"typeString": "int152"
													}
												},
												"id": 4446,
												"nodeType": "ExpressionStatement",
												"src": "24335:26:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4447,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4438,
														"src": "24375:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int152",
															"typeString": "int152"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4448,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4435,
														"src": "24389:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "24375:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4456,
												"nodeType": "IfStatement",
												"src": "24371:98:9",
												"trueBody": {
													"id": 4455,
													"nodeType": "Block",
													"src": "24396:73:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313532",
																		"id": 4451,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "24447:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		"value": "152"
																	},
																	{
																		"id": 4452,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4435,
																		"src": "24452:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4450,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3224,
																	"src": "24417:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4453,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24417:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4454,
															"nodeType": "RevertStatement",
															"src": "24410:48:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4433,
										"nodeType": "StructuredDocumentation",
										"src": "23934:312:9",
										"text": " @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"
									},
									"id": 4458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt152",
									"nameLocation": "24260:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4435,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24276:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 4458,
												"src": "24269:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4434,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "24269:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24268:14:9"
									},
									"returnParameters": {
										"id": 4439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4438,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "24313:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 4458,
												"src": "24306:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int152",
													"typeString": "int152"
												},
												"typeName": {
													"id": 4437,
													"name": "int152",
													"nodeType": "ElementaryTypeName",
													"src": "24306:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int152",
														"typeString": "int152"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24305:19:9"
									},
									"scope": 4967,
									"src": "24251:224:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4483,
										"nodeType": "Block",
										"src": "24872:150:9",
										"statements": [
											{
												"expression": {
													"id": 4471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4466,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4464,
														"src": "24882:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int144",
															"typeString": "int144"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4469,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4461,
																"src": "24902:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "24895:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int144_$",
																"typeString": "type(int144)"
															},
															"typeName": {
																"id": 4467,
																"name": "int144",
																"nodeType": "ElementaryTypeName",
																"src": "24895:6:9",
																"typeDescriptions": {}
															}
														},
														"id": 4470,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24895:13:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int144",
															"typeString": "int144"
														}
													},
													"src": "24882:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int144",
														"typeString": "int144"
													}
												},
												"id": 4472,
												"nodeType": "ExpressionStatement",
												"src": "24882:26:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4473,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4464,
														"src": "24922:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int144",
															"typeString": "int144"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4474,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4461,
														"src": "24936:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "24922:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4482,
												"nodeType": "IfStatement",
												"src": "24918:98:9",
												"trueBody": {
													"id": 4481,
													"nodeType": "Block",
													"src": "24943:73:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313434",
																		"id": 4477,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "24994:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		"value": "144"
																	},
																	{
																		"id": 4478,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4461,
																		"src": "24999:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4476,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3224,
																	"src": "24964:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4479,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24964:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4480,
															"nodeType": "RevertStatement",
															"src": "24957:48:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4459,
										"nodeType": "StructuredDocumentation",
										"src": "24481:312:9",
										"text": " @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"
									},
									"id": 4484,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt144",
									"nameLocation": "24807:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4461,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24823:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 4484,
												"src": "24816:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4460,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "24816:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24815:14:9"
									},
									"returnParameters": {
										"id": 4465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4464,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "24860:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 4484,
												"src": "24853:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int144",
													"typeString": "int144"
												},
												"typeName": {
													"id": 4463,
													"name": "int144",
													"nodeType": "ElementaryTypeName",
													"src": "24853:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int144",
														"typeString": "int144"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24852:19:9"
									},
									"scope": 4967,
									"src": "24798:224:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4509,
										"nodeType": "Block",
										"src": "25419:150:9",
										"statements": [
											{
												"expression": {
													"id": 4497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4492,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4490,
														"src": "25429:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int136",
															"typeString": "int136"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4495,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4487,
																"src": "25449:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "25442:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int136_$",
																"typeString": "type(int136)"
															},
															"typeName": {
																"id": 4493,
																"name": "int136",
																"nodeType": "ElementaryTypeName",
																"src": "25442:6:9",
																"typeDescriptions": {}
															}
														},
														"id": 4496,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25442:13:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int136",
															"typeString": "int136"
														}
													},
													"src": "25429:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int136",
														"typeString": "int136"
													}
												},
												"id": 4498,
												"nodeType": "ExpressionStatement",
												"src": "25429:26:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4499,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4490,
														"src": "25469:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int136",
															"typeString": "int136"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4500,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4487,
														"src": "25483:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "25469:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4508,
												"nodeType": "IfStatement",
												"src": "25465:98:9",
												"trueBody": {
													"id": 4507,
													"nodeType": "Block",
													"src": "25490:73:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313336",
																		"id": 4503,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "25541:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		"value": "136"
																	},
																	{
																		"id": 4504,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4487,
																		"src": "25546:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4502,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3224,
																	"src": "25511:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4505,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25511:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4506,
															"nodeType": "RevertStatement",
															"src": "25504:48:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4485,
										"nodeType": "StructuredDocumentation",
										"src": "25028:312:9",
										"text": " @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"
									},
									"id": 4510,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt136",
									"nameLocation": "25354:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4487,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25370:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 4510,
												"src": "25363:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4486,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "25363:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25362:14:9"
									},
									"returnParameters": {
										"id": 4491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4490,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "25407:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 4510,
												"src": "25400:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int136",
													"typeString": "int136"
												},
												"typeName": {
													"id": 4489,
													"name": "int136",
													"nodeType": "ElementaryTypeName",
													"src": "25400:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int136",
														"typeString": "int136"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25399:19:9"
									},
									"scope": 4967,
									"src": "25345:224:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4535,
										"nodeType": "Block",
										"src": "25966:150:9",
										"statements": [
											{
												"expression": {
													"id": 4523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4518,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4516,
														"src": "25976:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4521,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4513,
																"src": "25996:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4520,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "25989:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int128_$",
																"typeString": "type(int128)"
															},
															"typeName": {
																"id": 4519,
																"name": "int128",
																"nodeType": "ElementaryTypeName",
																"src": "25989:6:9",
																"typeDescriptions": {}
															}
														},
														"id": 4522,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25989:13:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"src": "25976:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"id": 4524,
												"nodeType": "ExpressionStatement",
												"src": "25976:26:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4525,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4516,
														"src": "26016:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4526,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4513,
														"src": "26030:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "26016:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4534,
												"nodeType": "IfStatement",
												"src": "26012:98:9",
												"trueBody": {
													"id": 4533,
													"nodeType": "Block",
													"src": "26037:73:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313238",
																		"id": 4529,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26088:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	{
																		"id": 4530,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4513,
																		"src": "26093:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4528,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3224,
																	"src": "26058:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4531,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26058:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4532,
															"nodeType": "RevertStatement",
															"src": "26051:48:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4511,
										"nodeType": "StructuredDocumentation",
										"src": "25575:312:9",
										"text": " @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"
									},
									"id": 4536,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt128",
									"nameLocation": "25901:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4513,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25917:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 4536,
												"src": "25910:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4512,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "25910:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25909:14:9"
									},
									"returnParameters": {
										"id": 4517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4516,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "25954:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 4536,
												"src": "25947:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 4515,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "25947:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25946:19:9"
									},
									"scope": 4967,
									"src": "25892:224:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4561,
										"nodeType": "Block",
										"src": "26513:150:9",
										"statements": [
											{
												"expression": {
													"id": 4549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4544,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4542,
														"src": "26523:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int120",
															"typeString": "int120"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4547,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4539,
																"src": "26543:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4546,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "26536:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int120_$",
																"typeString": "type(int120)"
															},
															"typeName": {
																"id": 4545,
																"name": "int120",
																"nodeType": "ElementaryTypeName",
																"src": "26536:6:9",
																"typeDescriptions": {}
															}
														},
														"id": 4548,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "26536:13:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int120",
															"typeString": "int120"
														}
													},
													"src": "26523:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int120",
														"typeString": "int120"
													}
												},
												"id": 4550,
												"nodeType": "ExpressionStatement",
												"src": "26523:26:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4551,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4542,
														"src": "26563:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int120",
															"typeString": "int120"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4552,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4539,
														"src": "26577:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "26563:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4560,
												"nodeType": "IfStatement",
												"src": "26559:98:9",
												"trueBody": {
													"id": 4559,
													"nodeType": "Block",
													"src": "26584:73:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313230",
																		"id": 4555,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26635:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		"value": "120"
																	},
																	{
																		"id": 4556,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4539,
																		"src": "26640:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4554,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3224,
																	"src": "26605:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4557,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26605:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4558,
															"nodeType": "RevertStatement",
															"src": "26598:48:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4537,
										"nodeType": "StructuredDocumentation",
										"src": "26122:312:9",
										"text": " @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"
									},
									"id": 4562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt120",
									"nameLocation": "26448:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4539,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "26464:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 4562,
												"src": "26457:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4538,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "26457:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26456:14:9"
									},
									"returnParameters": {
										"id": 4543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4542,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "26501:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 4562,
												"src": "26494:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int120",
													"typeString": "int120"
												},
												"typeName": {
													"id": 4541,
													"name": "int120",
													"nodeType": "ElementaryTypeName",
													"src": "26494:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int120",
														"typeString": "int120"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26493:19:9"
									},
									"scope": 4967,
									"src": "26439:224:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4587,
										"nodeType": "Block",
										"src": "27060:150:9",
										"statements": [
											{
												"expression": {
													"id": 4575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4570,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4568,
														"src": "27070:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int112",
															"typeString": "int112"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4573,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4565,
																"src": "27090:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4572,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "27083:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int112_$",
																"typeString": "type(int112)"
															},
															"typeName": {
																"id": 4571,
																"name": "int112",
																"nodeType": "ElementaryTypeName",
																"src": "27083:6:9",
																"typeDescriptions": {}
															}
														},
														"id": 4574,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27083:13:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int112",
															"typeString": "int112"
														}
													},
													"src": "27070:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int112",
														"typeString": "int112"
													}
												},
												"id": 4576,
												"nodeType": "ExpressionStatement",
												"src": "27070:26:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4577,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4568,
														"src": "27110:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int112",
															"typeString": "int112"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4578,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4565,
														"src": "27124:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "27110:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4586,
												"nodeType": "IfStatement",
												"src": "27106:98:9",
												"trueBody": {
													"id": 4585,
													"nodeType": "Block",
													"src": "27131:73:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313132",
																		"id": 4581,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "27182:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		"value": "112"
																	},
																	{
																		"id": 4582,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4565,
																		"src": "27187:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4580,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3224,
																	"src": "27152:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4583,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27152:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4584,
															"nodeType": "RevertStatement",
															"src": "27145:48:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4563,
										"nodeType": "StructuredDocumentation",
										"src": "26669:312:9",
										"text": " @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"
									},
									"id": 4588,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt112",
									"nameLocation": "26995:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4565,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27011:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 4588,
												"src": "27004:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4564,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "27004:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27003:14:9"
									},
									"returnParameters": {
										"id": 4569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4568,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "27048:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 4588,
												"src": "27041:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int112",
													"typeString": "int112"
												},
												"typeName": {
													"id": 4567,
													"name": "int112",
													"nodeType": "ElementaryTypeName",
													"src": "27041:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int112",
														"typeString": "int112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27040:19:9"
									},
									"scope": 4967,
									"src": "26986:224:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4613,
										"nodeType": "Block",
										"src": "27607:150:9",
										"statements": [
											{
												"expression": {
													"id": 4601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4596,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4594,
														"src": "27617:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int104",
															"typeString": "int104"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4599,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4591,
																"src": "27637:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4598,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "27630:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int104_$",
																"typeString": "type(int104)"
															},
															"typeName": {
																"id": 4597,
																"name": "int104",
																"nodeType": "ElementaryTypeName",
																"src": "27630:6:9",
																"typeDescriptions": {}
															}
														},
														"id": 4600,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27630:13:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int104",
															"typeString": "int104"
														}
													},
													"src": "27617:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int104",
														"typeString": "int104"
													}
												},
												"id": 4602,
												"nodeType": "ExpressionStatement",
												"src": "27617:26:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4603,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4594,
														"src": "27657:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int104",
															"typeString": "int104"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4604,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4591,
														"src": "27671:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "27657:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4612,
												"nodeType": "IfStatement",
												"src": "27653:98:9",
												"trueBody": {
													"id": 4611,
													"nodeType": "Block",
													"src": "27678:73:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313034",
																		"id": 4607,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "27729:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		"value": "104"
																	},
																	{
																		"id": 4608,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4591,
																		"src": "27734:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4606,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3224,
																	"src": "27699:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4609,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27699:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4610,
															"nodeType": "RevertStatement",
															"src": "27692:48:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4589,
										"nodeType": "StructuredDocumentation",
										"src": "27216:312:9",
										"text": " @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"
									},
									"id": 4614,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt104",
									"nameLocation": "27542:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4591,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27558:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 4614,
												"src": "27551:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4590,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "27551:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27550:14:9"
									},
									"returnParameters": {
										"id": 4595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4594,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "27595:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 4614,
												"src": "27588:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int104",
													"typeString": "int104"
												},
												"typeName": {
													"id": 4593,
													"name": "int104",
													"nodeType": "ElementaryTypeName",
													"src": "27588:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int104",
														"typeString": "int104"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27587:19:9"
									},
									"scope": 4967,
									"src": "27533:224:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4639,
										"nodeType": "Block",
										"src": "28147:148:9",
										"statements": [
											{
												"expression": {
													"id": 4627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4622,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4620,
														"src": "28157:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int96",
															"typeString": "int96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4625,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4617,
																"src": "28176:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4624,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "28170:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int96_$",
																"typeString": "type(int96)"
															},
															"typeName": {
																"id": 4623,
																"name": "int96",
																"nodeType": "ElementaryTypeName",
																"src": "28170:5:9",
																"typeDescriptions": {}
															}
														},
														"id": 4626,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28170:12:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int96",
															"typeString": "int96"
														}
													},
													"src": "28157:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int96",
														"typeString": "int96"
													}
												},
												"id": 4628,
												"nodeType": "ExpressionStatement",
												"src": "28157:25:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4629,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4620,
														"src": "28196:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int96",
															"typeString": "int96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4630,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4617,
														"src": "28210:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "28196:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4638,
												"nodeType": "IfStatement",
												"src": "28192:97:9",
												"trueBody": {
													"id": 4637,
													"nodeType": "Block",
													"src": "28217:72:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3936",
																		"id": 4633,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "28268:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	{
																		"id": 4634,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4617,
																		"src": "28272:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4632,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3224,
																	"src": "28238:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4635,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28238:40:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4636,
															"nodeType": "RevertStatement",
															"src": "28231:47:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4615,
										"nodeType": "StructuredDocumentation",
										"src": "27763:307:9",
										"text": " @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"
									},
									"id": 4640,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt96",
									"nameLocation": "28084:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4617,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "28099:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 4640,
												"src": "28092:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4616,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "28092:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28091:14:9"
									},
									"returnParameters": {
										"id": 4621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4620,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "28135:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 4640,
												"src": "28129:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int96",
													"typeString": "int96"
												},
												"typeName": {
													"id": 4619,
													"name": "int96",
													"nodeType": "ElementaryTypeName",
													"src": "28129:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int96",
														"typeString": "int96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28128:18:9"
									},
									"scope": 4967,
									"src": "28075:220:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4665,
										"nodeType": "Block",
										"src": "28685:148:9",
										"statements": [
											{
												"expression": {
													"id": 4653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4648,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4646,
														"src": "28695:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int88",
															"typeString": "int88"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4651,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4643,
																"src": "28714:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4650,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "28708:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int88_$",
																"typeString": "type(int88)"
															},
															"typeName": {
																"id": 4649,
																"name": "int88",
																"nodeType": "ElementaryTypeName",
																"src": "28708:5:9",
																"typeDescriptions": {}
															}
														},
														"id": 4652,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28708:12:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int88",
															"typeString": "int88"
														}
													},
													"src": "28695:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int88",
														"typeString": "int88"
													}
												},
												"id": 4654,
												"nodeType": "ExpressionStatement",
												"src": "28695:25:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4655,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4646,
														"src": "28734:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int88",
															"typeString": "int88"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4656,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4643,
														"src": "28748:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "28734:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4664,
												"nodeType": "IfStatement",
												"src": "28730:97:9",
												"trueBody": {
													"id": 4663,
													"nodeType": "Block",
													"src": "28755:72:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3838",
																		"id": 4659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "28806:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		"value": "88"
																	},
																	{
																		"id": 4660,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4643,
																		"src": "28810:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4658,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3224,
																	"src": "28776:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4661,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28776:40:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4662,
															"nodeType": "RevertStatement",
															"src": "28769:47:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4641,
										"nodeType": "StructuredDocumentation",
										"src": "28301:307:9",
										"text": " @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"
									},
									"id": 4666,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt88",
									"nameLocation": "28622:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4643,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "28637:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 4666,
												"src": "28630:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4642,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "28630:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28629:14:9"
									},
									"returnParameters": {
										"id": 4647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4646,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "28673:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 4666,
												"src": "28667:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int88",
													"typeString": "int88"
												},
												"typeName": {
													"id": 4645,
													"name": "int88",
													"nodeType": "ElementaryTypeName",
													"src": "28667:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int88",
														"typeString": "int88"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28666:18:9"
									},
									"scope": 4967,
									"src": "28613:220:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4691,
										"nodeType": "Block",
										"src": "29223:148:9",
										"statements": [
											{
												"expression": {
													"id": 4679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4674,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4672,
														"src": "29233:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int80",
															"typeString": "int80"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4677,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4669,
																"src": "29252:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4676,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "29246:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int80_$",
																"typeString": "type(int80)"
															},
															"typeName": {
																"id": 4675,
																"name": "int80",
																"nodeType": "ElementaryTypeName",
																"src": "29246:5:9",
																"typeDescriptions": {}
															}
														},
														"id": 4678,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29246:12:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int80",
															"typeString": "int80"
														}
													},
													"src": "29233:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int80",
														"typeString": "int80"
													}
												},
												"id": 4680,
												"nodeType": "ExpressionStatement",
												"src": "29233:25:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4681,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4672,
														"src": "29272:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int80",
															"typeString": "int80"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4682,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4669,
														"src": "29286:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "29272:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4690,
												"nodeType": "IfStatement",
												"src": "29268:97:9",
												"trueBody": {
													"id": 4689,
													"nodeType": "Block",
													"src": "29293:72:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3830",
																		"id": 4685,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "29344:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		"value": "80"
																	},
																	{
																		"id": 4686,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4669,
																		"src": "29348:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4684,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3224,
																	"src": "29314:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4687,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29314:40:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4688,
															"nodeType": "RevertStatement",
															"src": "29307:47:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4667,
										"nodeType": "StructuredDocumentation",
										"src": "28839:307:9",
										"text": " @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"
									},
									"id": 4692,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt80",
									"nameLocation": "29160:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4669,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "29175:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 4692,
												"src": "29168:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4668,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "29168:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29167:14:9"
									},
									"returnParameters": {
										"id": 4673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4672,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "29211:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 4692,
												"src": "29205:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int80",
													"typeString": "int80"
												},
												"typeName": {
													"id": 4671,
													"name": "int80",
													"nodeType": "ElementaryTypeName",
													"src": "29205:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int80",
														"typeString": "int80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29204:18:9"
									},
									"scope": 4967,
									"src": "29151:220:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4717,
										"nodeType": "Block",
										"src": "29761:148:9",
										"statements": [
											{
												"expression": {
													"id": 4705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4700,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4698,
														"src": "29771:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int72",
															"typeString": "int72"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4703,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4695,
																"src": "29790:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4702,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "29784:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int72_$",
																"typeString": "type(int72)"
															},
															"typeName": {
																"id": 4701,
																"name": "int72",
																"nodeType": "ElementaryTypeName",
																"src": "29784:5:9",
																"typeDescriptions": {}
															}
														},
														"id": 4704,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29784:12:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int72",
															"typeString": "int72"
														}
													},
													"src": "29771:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int72",
														"typeString": "int72"
													}
												},
												"id": 4706,
												"nodeType": "ExpressionStatement",
												"src": "29771:25:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4707,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4698,
														"src": "29810:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int72",
															"typeString": "int72"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4708,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4695,
														"src": "29824:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "29810:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4716,
												"nodeType": "IfStatement",
												"src": "29806:97:9",
												"trueBody": {
													"id": 4715,
													"nodeType": "Block",
													"src": "29831:72:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3732",
																		"id": 4711,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "29882:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		"value": "72"
																	},
																	{
																		"id": 4712,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4695,
																		"src": "29886:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4710,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3224,
																	"src": "29852:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29852:40:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4714,
															"nodeType": "RevertStatement",
															"src": "29845:47:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4693,
										"nodeType": "StructuredDocumentation",
										"src": "29377:307:9",
										"text": " @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"
									},
									"id": 4718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt72",
									"nameLocation": "29698:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4695,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "29713:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 4718,
												"src": "29706:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4694,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "29706:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29705:14:9"
									},
									"returnParameters": {
										"id": 4699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4698,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "29749:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 4718,
												"src": "29743:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int72",
													"typeString": "int72"
												},
												"typeName": {
													"id": 4697,
													"name": "int72",
													"nodeType": "ElementaryTypeName",
													"src": "29743:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int72",
														"typeString": "int72"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29742:18:9"
									},
									"scope": 4967,
									"src": "29689:220:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4743,
										"nodeType": "Block",
										"src": "30299:148:9",
										"statements": [
											{
												"expression": {
													"id": 4731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4726,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4724,
														"src": "30309:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4729,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4721,
																"src": "30328:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4728,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "30322:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int64_$",
																"typeString": "type(int64)"
															},
															"typeName": {
																"id": 4727,
																"name": "int64",
																"nodeType": "ElementaryTypeName",
																"src": "30322:5:9",
																"typeDescriptions": {}
															}
														},
														"id": 4730,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30322:12:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"src": "30309:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"id": 4732,
												"nodeType": "ExpressionStatement",
												"src": "30309:25:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4733,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4724,
														"src": "30348:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4734,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4721,
														"src": "30362:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "30348:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4742,
												"nodeType": "IfStatement",
												"src": "30344:97:9",
												"trueBody": {
													"id": 4741,
													"nodeType": "Block",
													"src": "30369:72:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3634",
																		"id": 4737,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "30420:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		"value": "64"
																	},
																	{
																		"id": 4738,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4721,
																		"src": "30424:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4736,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3224,
																	"src": "30390:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4739,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30390:40:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4740,
															"nodeType": "RevertStatement",
															"src": "30383:47:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4719,
										"nodeType": "StructuredDocumentation",
										"src": "29915:307:9",
										"text": " @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"
									},
									"id": 4744,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt64",
									"nameLocation": "30236:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4721,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "30251:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 4744,
												"src": "30244:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4720,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "30244:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30243:14:9"
									},
									"returnParameters": {
										"id": 4725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4724,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "30287:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 4744,
												"src": "30281:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 4723,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "30281:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30280:18:9"
									},
									"scope": 4967,
									"src": "30227:220:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4769,
										"nodeType": "Block",
										"src": "30837:148:9",
										"statements": [
											{
												"expression": {
													"id": 4757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4752,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4750,
														"src": "30847:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4755,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4747,
																"src": "30866:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4754,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "30860:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int56_$",
																"typeString": "type(int56)"
															},
															"typeName": {
																"id": 4753,
																"name": "int56",
																"nodeType": "ElementaryTypeName",
																"src": "30860:5:9",
																"typeDescriptions": {}
															}
														},
														"id": 4756,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30860:12:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"src": "30847:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"id": 4758,
												"nodeType": "ExpressionStatement",
												"src": "30847:25:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4759,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4750,
														"src": "30886:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4760,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4747,
														"src": "30900:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "30886:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4768,
												"nodeType": "IfStatement",
												"src": "30882:97:9",
												"trueBody": {
													"id": 4767,
													"nodeType": "Block",
													"src": "30907:72:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3536",
																		"id": 4763,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "30958:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		"value": "56"
																	},
																	{
																		"id": 4764,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4747,
																		"src": "30962:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4762,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3224,
																	"src": "30928:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4765,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30928:40:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4766,
															"nodeType": "RevertStatement",
															"src": "30921:47:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4745,
										"nodeType": "StructuredDocumentation",
										"src": "30453:307:9",
										"text": " @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"
									},
									"id": 4770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt56",
									"nameLocation": "30774:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4747,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "30789:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 4770,
												"src": "30782:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4746,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "30782:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30781:14:9"
									},
									"returnParameters": {
										"id": 4751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4750,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "30825:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 4770,
												"src": "30819:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 4749,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "30819:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30818:18:9"
									},
									"scope": 4967,
									"src": "30765:220:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4795,
										"nodeType": "Block",
										"src": "31375:148:9",
										"statements": [
											{
												"expression": {
													"id": 4783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4778,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4776,
														"src": "31385:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int48",
															"typeString": "int48"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4781,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4773,
																"src": "31404:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4780,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "31398:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int48_$",
																"typeString": "type(int48)"
															},
															"typeName": {
																"id": 4779,
																"name": "int48",
																"nodeType": "ElementaryTypeName",
																"src": "31398:5:9",
																"typeDescriptions": {}
															}
														},
														"id": 4782,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31398:12:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int48",
															"typeString": "int48"
														}
													},
													"src": "31385:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int48",
														"typeString": "int48"
													}
												},
												"id": 4784,
												"nodeType": "ExpressionStatement",
												"src": "31385:25:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4785,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4776,
														"src": "31424:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int48",
															"typeString": "int48"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4786,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4773,
														"src": "31438:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "31424:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4794,
												"nodeType": "IfStatement",
												"src": "31420:97:9",
												"trueBody": {
													"id": 4793,
													"nodeType": "Block",
													"src": "31445:72:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3438",
																		"id": 4789,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "31496:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		"value": "48"
																	},
																	{
																		"id": 4790,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4773,
																		"src": "31500:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4788,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3224,
																	"src": "31466:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4791,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31466:40:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4792,
															"nodeType": "RevertStatement",
															"src": "31459:47:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4771,
										"nodeType": "StructuredDocumentation",
										"src": "30991:307:9",
										"text": " @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"
									},
									"id": 4796,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt48",
									"nameLocation": "31312:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4773,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "31327:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 4796,
												"src": "31320:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4772,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "31320:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31319:14:9"
									},
									"returnParameters": {
										"id": 4777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4776,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "31363:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 4796,
												"src": "31357:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int48",
													"typeString": "int48"
												},
												"typeName": {
													"id": 4775,
													"name": "int48",
													"nodeType": "ElementaryTypeName",
													"src": "31357:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int48",
														"typeString": "int48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31356:18:9"
									},
									"scope": 4967,
									"src": "31303:220:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4821,
										"nodeType": "Block",
										"src": "31913:148:9",
										"statements": [
											{
												"expression": {
													"id": 4809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4804,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4802,
														"src": "31923:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int40",
															"typeString": "int40"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4807,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4799,
																"src": "31942:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4806,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "31936:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int40_$",
																"typeString": "type(int40)"
															},
															"typeName": {
																"id": 4805,
																"name": "int40",
																"nodeType": "ElementaryTypeName",
																"src": "31936:5:9",
																"typeDescriptions": {}
															}
														},
														"id": 4808,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31936:12:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int40",
															"typeString": "int40"
														}
													},
													"src": "31923:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int40",
														"typeString": "int40"
													}
												},
												"id": 4810,
												"nodeType": "ExpressionStatement",
												"src": "31923:25:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4811,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4802,
														"src": "31962:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int40",
															"typeString": "int40"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4812,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4799,
														"src": "31976:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "31962:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4820,
												"nodeType": "IfStatement",
												"src": "31958:97:9",
												"trueBody": {
													"id": 4819,
													"nodeType": "Block",
													"src": "31983:72:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3430",
																		"id": 4815,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32034:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		"value": "40"
																	},
																	{
																		"id": 4816,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4799,
																		"src": "32038:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4814,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3224,
																	"src": "32004:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4817,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32004:40:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4818,
															"nodeType": "RevertStatement",
															"src": "31997:47:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4797,
										"nodeType": "StructuredDocumentation",
										"src": "31529:307:9",
										"text": " @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"
									},
									"id": 4822,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt40",
									"nameLocation": "31850:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4799,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "31865:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 4822,
												"src": "31858:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4798,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "31858:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31857:14:9"
									},
									"returnParameters": {
										"id": 4803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4802,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "31901:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 4822,
												"src": "31895:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int40",
													"typeString": "int40"
												},
												"typeName": {
													"id": 4801,
													"name": "int40",
													"nodeType": "ElementaryTypeName",
													"src": "31895:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int40",
														"typeString": "int40"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31894:18:9"
									},
									"scope": 4967,
									"src": "31841:220:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4847,
										"nodeType": "Block",
										"src": "32451:148:9",
										"statements": [
											{
												"expression": {
													"id": 4835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4830,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4828,
														"src": "32461:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4833,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4825,
																"src": "32480:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4832,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "32474:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int32_$",
																"typeString": "type(int32)"
															},
															"typeName": {
																"id": 4831,
																"name": "int32",
																"nodeType": "ElementaryTypeName",
																"src": "32474:5:9",
																"typeDescriptions": {}
															}
														},
														"id": 4834,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32474:12:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"src": "32461:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int32",
														"typeString": "int32"
													}
												},
												"id": 4836,
												"nodeType": "ExpressionStatement",
												"src": "32461:25:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4837,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4828,
														"src": "32500:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4838,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4825,
														"src": "32514:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "32500:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4846,
												"nodeType": "IfStatement",
												"src": "32496:97:9",
												"trueBody": {
													"id": 4845,
													"nodeType": "Block",
													"src": "32521:72:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3332",
																		"id": 4841,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32572:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		"value": "32"
																	},
																	{
																		"id": 4842,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4825,
																		"src": "32576:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4840,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3224,
																	"src": "32542:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4843,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32542:40:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4844,
															"nodeType": "RevertStatement",
															"src": "32535:47:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4823,
										"nodeType": "StructuredDocumentation",
										"src": "32067:307:9",
										"text": " @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"
									},
									"id": 4848,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt32",
									"nameLocation": "32388:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4825,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "32403:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 4848,
												"src": "32396:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4824,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "32396:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32395:14:9"
									},
									"returnParameters": {
										"id": 4829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4828,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "32439:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 4848,
												"src": "32433:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int32",
													"typeString": "int32"
												},
												"typeName": {
													"id": 4827,
													"name": "int32",
													"nodeType": "ElementaryTypeName",
													"src": "32433:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int32",
														"typeString": "int32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32432:18:9"
									},
									"scope": 4967,
									"src": "32379:220:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4873,
										"nodeType": "Block",
										"src": "32989:148:9",
										"statements": [
											{
												"expression": {
													"id": 4861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4856,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4854,
														"src": "32999:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4859,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4851,
																"src": "33018:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4858,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "33012:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int24_$",
																"typeString": "type(int24)"
															},
															"typeName": {
																"id": 4857,
																"name": "int24",
																"nodeType": "ElementaryTypeName",
																"src": "33012:5:9",
																"typeDescriptions": {}
															}
														},
														"id": 4860,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33012:12:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "32999:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"id": 4862,
												"nodeType": "ExpressionStatement",
												"src": "32999:25:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4863,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4854,
														"src": "33038:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4864,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4851,
														"src": "33052:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "33038:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4872,
												"nodeType": "IfStatement",
												"src": "33034:97:9",
												"trueBody": {
													"id": 4871,
													"nodeType": "Block",
													"src": "33059:72:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3234",
																		"id": 4867,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33110:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		"value": "24"
																	},
																	{
																		"id": 4868,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4851,
																		"src": "33114:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4866,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3224,
																	"src": "33080:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4869,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33080:40:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4870,
															"nodeType": "RevertStatement",
															"src": "33073:47:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4849,
										"nodeType": "StructuredDocumentation",
										"src": "32605:307:9",
										"text": " @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"
									},
									"id": 4874,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt24",
									"nameLocation": "32926:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4851,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "32941:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 4874,
												"src": "32934:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4850,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "32934:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32933:14:9"
									},
									"returnParameters": {
										"id": 4855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4854,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "32977:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 4874,
												"src": "32971:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 4853,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "32971:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32970:18:9"
									},
									"scope": 4967,
									"src": "32917:220:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4899,
										"nodeType": "Block",
										"src": "33527:148:9",
										"statements": [
											{
												"expression": {
													"id": 4887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4882,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4880,
														"src": "33537:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4885,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4877,
																"src": "33556:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4884,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "33550:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int16_$",
																"typeString": "type(int16)"
															},
															"typeName": {
																"id": 4883,
																"name": "int16",
																"nodeType": "ElementaryTypeName",
																"src": "33550:5:9",
																"typeDescriptions": {}
															}
														},
														"id": 4886,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33550:12:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"src": "33537:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"id": 4888,
												"nodeType": "ExpressionStatement",
												"src": "33537:25:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4889,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4880,
														"src": "33576:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4890,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4877,
														"src": "33590:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "33576:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4898,
												"nodeType": "IfStatement",
												"src": "33572:97:9",
												"trueBody": {
													"id": 4897,
													"nodeType": "Block",
													"src": "33597:72:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3136",
																		"id": 4893,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33648:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		"value": "16"
																	},
																	{
																		"id": 4894,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4877,
																		"src": "33652:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4892,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3224,
																	"src": "33618:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4895,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33618:40:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4896,
															"nodeType": "RevertStatement",
															"src": "33611:47:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4875,
										"nodeType": "StructuredDocumentation",
										"src": "33143:307:9",
										"text": " @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"
									},
									"id": 4900,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt16",
									"nameLocation": "33464:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4877,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "33479:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 4900,
												"src": "33472:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4876,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "33472:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33471:14:9"
									},
									"returnParameters": {
										"id": 4881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4880,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "33515:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 4900,
												"src": "33509:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int16",
													"typeString": "int16"
												},
												"typeName": {
													"id": 4879,
													"name": "int16",
													"nodeType": "ElementaryTypeName",
													"src": "33509:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33508:18:9"
									},
									"scope": 4967,
									"src": "33455:220:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4925,
										"nodeType": "Block",
										"src": "34058:146:9",
										"statements": [
											{
												"expression": {
													"id": 4913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4908,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4906,
														"src": "34068:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int8",
															"typeString": "int8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4911,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4903,
																"src": "34086:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4910,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "34081:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int8_$",
																"typeString": "type(int8)"
															},
															"typeName": {
																"id": 4909,
																"name": "int8",
																"nodeType": "ElementaryTypeName",
																"src": "34081:4:9",
																"typeDescriptions": {}
															}
														},
														"id": 4912,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "34081:11:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int8",
															"typeString": "int8"
														}
													},
													"src": "34068:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int8",
														"typeString": "int8"
													}
												},
												"id": 4914,
												"nodeType": "ExpressionStatement",
												"src": "34068:24:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4915,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4906,
														"src": "34106:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int8",
															"typeString": "int8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4916,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4903,
														"src": "34120:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "34106:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4924,
												"nodeType": "IfStatement",
												"src": "34102:96:9",
												"trueBody": {
													"id": 4923,
													"nodeType": "Block",
													"src": "34127:71:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "38",
																		"id": 4919,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "34178:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		"value": "8"
																	},
																	{
																		"id": 4920,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4903,
																		"src": "34181:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4918,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3224,
																	"src": "34148:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4921,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34148:39:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4922,
															"nodeType": "RevertStatement",
															"src": "34141:46:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4901,
										"nodeType": "StructuredDocumentation",
										"src": "33681:302:9",
										"text": " @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"
									},
									"id": 4926,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt8",
									"nameLocation": "33997:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4903,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "34011:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 4926,
												"src": "34004:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4902,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "34004:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34003:14:9"
									},
									"returnParameters": {
										"id": 4907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4906,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "34046:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 4926,
												"src": "34041:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int8",
													"typeString": "int8"
												},
												"typeName": {
													"id": 4905,
													"name": "int8",
													"nodeType": "ElementaryTypeName",
													"src": "34041:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int8",
														"typeString": "int8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34040:17:9"
									},
									"scope": 4967,
									"src": "33988:216:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4955,
										"nodeType": "Block",
										"src": "34444:250:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4934,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4929,
														"src": "34557:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"arguments": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 4939,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "34578:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_int256_$",
																				"typeString": "type(int256)"
																			},
																			"typeName": {
																				"id": 4938,
																				"name": "int256",
																				"nodeType": "ElementaryTypeName",
																				"src": "34578:6:9",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_int256_$",
																				"typeString": "type(int256)"
																			}
																		],
																		"id": 4937,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "34573:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 4940,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "34573:12:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_int256",
																		"typeString": "type(int256)"
																	}
																},
																"id": 4941,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "34586:3:9",
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "34573:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4936,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "34565:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 4935,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "34565:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 4942,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "34565:25:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34557:33:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4949,
												"nodeType": "IfStatement",
												"src": "34553:105:9",
												"trueBody": {
													"id": 4948,
													"nodeType": "Block",
													"src": "34592:66:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 4945,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4929,
																		"src": "34641:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4944,
																	"name": "SafeCastOverflowedUintToInt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3229,
																	"src": "34613:27:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 4946,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34613:34:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4947,
															"nodeType": "RevertStatement",
															"src": "34606:41:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4952,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4929,
															"src": "34681:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4951,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "34674:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int256_$",
															"typeString": "type(int256)"
														},
														"typeName": {
															"id": 4950,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "34674:6:9",
															"typeDescriptions": {}
														}
													},
													"id": 4953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34674:13:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 4933,
												"id": 4954,
												"nodeType": "Return",
												"src": "34667:20:9"
											}
										]
									},
									"documentation": {
										"id": 4927,
										"nodeType": "StructuredDocumentation",
										"src": "34210:165:9",
										"text": " @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."
									},
									"id": 4956,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt256",
									"nameLocation": "34389:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4929,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "34406:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 4956,
												"src": "34398:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4928,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34398:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34397:15:9"
									},
									"returnParameters": {
										"id": 4933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4932,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4956,
												"src": "34436:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4931,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "34436:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34435:8:9"
									},
									"scope": 4967,
									"src": "34380:314:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4965,
										"nodeType": "Block",
										"src": "34853:87:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "34888:46:9",
													"nodeType": "YulBlock",
													"src": "34888:46:9",
													"statements": [
														{
															"nativeSrc": "34902:22:9",
															"nodeType": "YulAssignment",
															"src": "34902:22:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "b",
																				"nativeSrc": "34921:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "34921:1:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "34914:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "34914:6:9"
																		},
																		"nativeSrc": "34914:9:9",
																		"nodeType": "YulFunctionCall",
																		"src": "34914:9:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "34907:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "34907:6:9"
																},
																"nativeSrc": "34907:17:9",
																"nodeType": "YulFunctionCall",
																"src": "34907:17:9"
															},
															"variableNames": [
																{
																	"name": "u",
																	"nativeSrc": "34902:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "34902:1:9"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 4959,
														"isOffset": false,
														"isSlot": false,
														"src": "34921:1:9",
														"valueSize": 1
													},
													{
														"declaration": 4962,
														"isOffset": false,
														"isSlot": false,
														"src": "34902:1:9",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 4964,
												"nodeType": "InlineAssembly",
												"src": "34863:71:9"
											}
										]
									},
									"documentation": {
										"id": 4957,
										"nodeType": "StructuredDocumentation",
										"src": "34700:90:9",
										"text": " @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."
									},
									"id": 4966,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint",
									"nameLocation": "34804:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4959,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "34816:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 4966,
												"src": "34811:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 4958,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "34811:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34810:8:9"
									},
									"returnParameters": {
										"id": 4963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4962,
												"mutability": "mutable",
												"name": "u",
												"nameLocation": "34850:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 4966,
												"src": "34842:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4961,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34842:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34841:11:9"
									},
									"scope": 4967,
									"src": "34795:145:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 4968,
							"src": "769:34173:9",
							"usedErrors": [
								3212,
								3217,
								3224,
								3229
							],
							"usedEvents": []
						}
					],
					"src": "192:34751:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SafeCast": [
							4967
						],
						"SignedMath": [
							5111
						]
					},
					"id": 5112,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 4969,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeCast.sol",
							"file": "./SafeCast.sol",
							"id": 4971,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 5112,
							"sourceUnit": 4968,
							"src": "135:40:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4970,
										"name": "SafeCast",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 4967,
										"src": "143:8:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 4972,
								"nodeType": "StructuredDocumentation",
								"src": "177:80:10",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 5111,
							"linearizedBaseContracts": [
								5111
							],
							"name": "SignedMath",
							"nameLocation": "266:10:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 5001,
										"nodeType": "Block",
										"src": "746:215:10",
										"statements": [
											{
												"id": 5000,
												"nodeType": "UncheckedBlock",
												"src": "756:199:10",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 4998,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4984,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4979,
																"src": "894:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 4996,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					},
																					"id": 4987,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 4985,
																						"name": "a",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4977,
																						"src": "900:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "^",
																					"rightExpression": {
																						"id": 4986,
																						"name": "b",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4979,
																						"src": "904:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					"src": "900:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"id": 4988,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "899:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 4993,
																							"name": "condition",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4975,
																							"src": "932:9:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						],
																						"expression": {
																							"id": 4991,
																							"name": "SafeCast",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4967,
																							"src": "916:8:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_SafeCast_$4967_$",
																								"typeString": "type(library SafeCast)"
																							}
																						},
																						"id": 4992,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "925:6:10",
																						"memberName": "toUint",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 4966,
																						"src": "916:15:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																							"typeString": "function (bool) pure returns (uint256)"
																						}
																					},
																					"id": 4994,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "916:26:10",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 4990,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "909:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int256_$",
																					"typeString": "type(int256)"
																				},
																				"typeName": {
																					"id": 4989,
																					"name": "int256",
																					"nodeType": "ElementaryTypeName",
																					"src": "909:6:10",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 4995,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "909:34:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"src": "899:44:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"id": 4997,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "898:46:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "894:50:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"functionReturnParameters": 4983,
														"id": 4999,
														"nodeType": "Return",
														"src": "887:57:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 4973,
										"nodeType": "StructuredDocumentation",
										"src": "283:374:10",
										"text": " @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."
									},
									"id": 5002,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ternary",
									"nameLocation": "671:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4975,
												"mutability": "mutable",
												"name": "condition",
												"nameLocation": "684:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 5002,
												"src": "679:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 4974,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "679:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4977,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "702:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 5002,
												"src": "695:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4976,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "695:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4979,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "712:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 5002,
												"src": "705:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4978,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "705:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "678:36:10"
									},
									"returnParameters": {
										"id": 4983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4982,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 5002,
												"src": "738:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4981,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "738:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:8:10"
									},
									"scope": 5111,
									"src": "662:299:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5020,
										"nodeType": "Block",
										"src": "1102:44:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 5015,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 5013,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5005,
																"src": "1127:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 5014,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5007,
																"src": "1131:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "1127:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 5016,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5005,
															"src": "1134:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"id": 5017,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5007,
															"src": "1137:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 5012,
														"name": "ternary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5002,
														"src": "1119:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$",
															"typeString": "function (bool,int256,int256) pure returns (int256)"
														}
													},
													"id": 5018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1119:20:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 5011,
												"id": 5019,
												"nodeType": "Return",
												"src": "1112:27:10"
											}
										]
									},
									"documentation": {
										"id": 5003,
										"nodeType": "StructuredDocumentation",
										"src": "967:66:10",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 5021,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "1047:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5005,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1058:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 5021,
												"src": "1051:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5004,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1051:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5007,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1068:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 5021,
												"src": "1061:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5006,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1050:20:10"
									},
									"returnParameters": {
										"id": 5011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5010,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 5021,
												"src": "1094:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5009,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:8:10"
									},
									"scope": 5111,
									"src": "1038:108:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5039,
										"nodeType": "Block",
										"src": "1288:44:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 5034,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 5032,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5024,
																"src": "1313:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 5033,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5026,
																"src": "1317:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "1313:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 5035,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5024,
															"src": "1320:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"id": 5036,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5026,
															"src": "1323:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 5031,
														"name": "ternary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5002,
														"src": "1305:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$",
															"typeString": "function (bool,int256,int256) pure returns (int256)"
														}
													},
													"id": 5037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1305:20:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 5030,
												"id": 5038,
												"nodeType": "Return",
												"src": "1298:27:10"
											}
										]
									},
									"documentation": {
										"id": 5022,
										"nodeType": "StructuredDocumentation",
										"src": "1152:67:10",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 5040,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "1233:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5024,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1244:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 5040,
												"src": "1237:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5023,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1237:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5026,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1254:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 5040,
												"src": "1247:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5025,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1247:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:20:10"
									},
									"returnParameters": {
										"id": 5030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5029,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 5040,
												"src": "1280:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5028,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1280:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1279:8:10"
									},
									"scope": 5111,
									"src": "1224:108:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5083,
										"nodeType": "Block",
										"src": "1537:162:10",
										"statements": [
											{
												"assignments": [
													5051
												],
												"declarations": [
													{
														"constant": false,
														"id": 5051,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "1606:1:10",
														"nodeType": "VariableDeclaration",
														"scope": 5083,
														"src": "1599:8:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 5050,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "1599:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 5064,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 5054,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 5052,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5043,
																	"src": "1611:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 5053,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5045,
																	"src": "1615:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "1611:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 5055,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1610:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 5061,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 5058,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 5056,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 5043,
																				"src": "1622:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 5057,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 5045,
																				"src": "1626:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "1622:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 5059,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1621:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 5060,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1632:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1621:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 5062,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1620:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "1610:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1599:35:10"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5065,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5051,
														"src": "1651:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 5079,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 5073,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 5070,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 5051,
																						"src": "1671:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 5069,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1663:7:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 5068,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "1663:7:10",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 5071,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1663:10:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 5072,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1677:3:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "1663:17:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 5067,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1656:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 5066,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "1656:6:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 5074,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1656:25:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 5077,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 5075,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 5043,
																				"src": "1685:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 5076,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 5045,
																				"src": "1689:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "1685:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 5078,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1684:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "1656:35:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 5080,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1655:37:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "1651:41:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 5049,
												"id": 5082,
												"nodeType": "Return",
												"src": "1644:48:10"
											}
										]
									},
									"documentation": {
										"id": 5041,
										"nodeType": "StructuredDocumentation",
										"src": "1338:126:10",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 5084,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "1478:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5043,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1493:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 5084,
												"src": "1486:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5042,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1486:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5045,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1503:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 5084,
												"src": "1496:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5044,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1485:20:10"
									},
									"returnParameters": {
										"id": 5049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5048,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 5084,
												"src": "1529:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5047,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1529:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1528:8:10"
									},
									"scope": 5111,
									"src": "1469:230:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5109,
										"nodeType": "Block",
										"src": "1843:767:10",
										"statements": [
											{
												"id": 5108,
												"nodeType": "UncheckedBlock",
												"src": "1853:751:10",
												"statements": [
													{
														"assignments": [
															5093
														],
														"declarations": [
															{
																"constant": false,
																"id": 5093,
																"mutability": "mutable",
																"name": "mask",
																"nameLocation": "2424:4:10",
																"nodeType": "VariableDeclaration",
																"scope": 5108,
																"src": "2417:11:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"typeName": {
																	"id": 5092,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2417:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 5097,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 5096,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 5094,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5087,
																"src": "2431:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "323535",
																"id": 5095,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2436:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_255_by_1",
																	"typeString": "int_const 255"
																},
																"value": "255"
															},
															"src": "2431:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2417:22:10"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 5105,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 5102,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 5100,
																					"name": "n",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 5087,
																					"src": "2576:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"id": 5101,
																					"name": "mask",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 5093,
																					"src": "2580:4:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"src": "2576:8:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"id": 5103,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2575:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 5104,
																		"name": "mask",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5093,
																		"src": "2588:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"src": "2575:17:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 5099,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2567:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 5098,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2567:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 5106,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2567:26:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 5091,
														"id": 5107,
														"nodeType": "Return",
														"src": "2560:33:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 5085,
										"nodeType": "StructuredDocumentation",
										"src": "1705:78:10",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 5110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1797:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5087,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1808:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 5110,
												"src": "1801:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5086,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1801:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1800:10:10"
									},
									"returnParameters": {
										"id": 5091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5090,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 5110,
												"src": "1834:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5089,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1834:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1833:9:10"
									},
									"scope": 5111,
									"src": "1788:822:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 5112,
							"src": "258:2354:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:2504:10"
				},
				"id": 10
			},
			"AIAirdrop.sol": {
				"ast": {
					"absolutePath": "AIAirdrop.sol",
					"exportedSymbols": {
						"AIAirdrop": [
							5393
						],
						"Claimed": [
							5415
						],
						"ClaimedAlready": [
							5403
						],
						"Context": [
							258
						],
						"Counters": [
							332
						],
						"ILSP7": [
							228
						],
						"Log": [
							5409
						],
						"Math": [
							3202
						],
						"Ownable": [
							5571
						],
						"Pausable": [
							5688
						],
						"SafeCast": [
							4967
						],
						"SignedMath": [
							5111
						],
						"Strings": [
							1584
						],
						"Unauthorized": [
							5397
						],
						"amountToClaimUpdated": [
							5419
						],
						"tokenToClaimUpdated": [
							5423
						]
					},
					"id": 5394,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 5113,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:11"
						},
						{
							"absolutePath": "@lukso/lsp-smart-contracts/contracts/LSP7DigitalAsset/ILSP7DigitalAsset.sol",
							"file": "@lukso/lsp-smart-contracts/contracts/LSP7DigitalAsset/ILSP7DigitalAsset.sol",
							"id": 5115,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 5394,
							"sourceUnit": 54,
							"src": "58:119:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 5114,
										"name": "ILSP7DigitalAsset",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 228,
										"src": "66:17:11",
										"typeDescriptions": {}
									},
									"local": "ILSP7",
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
							"file": "@openzeppelin/contracts/utils/Counters.sol",
							"id": 5116,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 5394,
							"sourceUnit": 333,
							"src": "178:52:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "@openzeppelin/contracts/utils/Strings.sol",
							"id": 5117,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 5394,
							"sourceUnit": 1585,
							"src": "231:51:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "_event.sol",
							"file": "./_event.sol",
							"id": 5118,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 5394,
							"sourceUnit": 5424,
							"src": "283:22:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "_error.sol",
							"file": "./_error.sol",
							"id": 5119,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 5394,
							"sourceUnit": 5404,
							"src": "306:22:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "_pausable.sol",
							"file": "./_pausable.sol",
							"id": 5120,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 5394,
							"sourceUnit": 5689,
							"src": "329:25:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "_ownable.sol",
							"file": "./_ownable.sol",
							"id": 5121,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 5394,
							"sourceUnit": 5572,
							"src": "355:24:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": [
										{
											"expression": {
												"id": 5124,
												"name": "msg",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967281,
												"src": "646:3:11",
												"typeDescriptions": {
													"typeIdentifier": "t_magic_message",
													"typeString": "msg"
												}
											},
											"id": 5125,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberLocation": "650:6:11",
											"memberName": "sender",
											"nodeType": "MemberAccess",
											"src": "646:10:11",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									],
									"baseName": {
										"id": 5123,
										"name": "Ownable",
										"nameLocations": [
											"638:7:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 5571,
										"src": "638:7:11"
									},
									"id": 5126,
									"nodeType": "InheritanceSpecifier",
									"src": "638:19:11"
								},
								{
									"baseName": {
										"id": 5127,
										"name": "Pausable",
										"nameLocations": [
											"659:8:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 5688,
										"src": "659:8:11"
									},
									"id": 5128,
									"nodeType": "InheritanceSpecifier",
									"src": "659:8:11"
								}
							],
							"canonicalName": "AIAirdrop",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 5122,
								"nodeType": "StructuredDocumentation",
								"src": "381:235:11",
								"text": "@title Airdrop\n @author Aratta Labs\n @notice Airdroping LSP7 token by AI agent on LUKSO\n @dev You will find the deployed contract addresses in the repo\n @custom:emoji 🤖\n @custom:security-contact atenyun@gmail.com"
							},
							"fullyImplemented": true,
							"id": 5393,
							"linearizedBaseContracts": [
								5393,
								5688,
								5571,
								258
							],
							"name": "AIAirdrop",
							"nameLocation": "625:9:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 5132,
									"libraryName": {
										"id": 5129,
										"name": "Counters",
										"nameLocations": [
											"680:8:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 332,
										"src": "680:8:11"
									},
									"nodeType": "UsingForDirective",
									"src": "674:36:11",
									"typeName": {
										"id": 5131,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 5130,
											"name": "Counters.Counter",
											"nameLocations": [
												"693:8:11",
												"702:7:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 264,
											"src": "693:16:11"
										},
										"referencedDeclaration": 264,
										"src": "693:16:11",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$264_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "fb2228fe",
									"id": 5135,
									"mutability": "mutable",
									"name": "_claimCounter",
									"nameLocation": "739:13:11",
									"nodeType": "VariableDeclaration",
									"scope": 5393,
									"src": "715:37:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$264_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 5134,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 5133,
											"name": "Counters.Counter",
											"nameLocations": [
												"715:8:11",
												"724:7:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 264,
											"src": "715:16:11"
										},
										"referencedDeclaration": 264,
										"src": "715:16:11",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$264_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4875590a",
									"id": 5137,
									"mutability": "mutable",
									"name": "tokenToClaim",
									"nameLocation": "773:12:11",
									"nodeType": "VariableDeclaration",
									"scope": 5393,
									"src": "758:27:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 5136,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "758:7:11",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "205306b4",
									"id": 5140,
									"mutability": "mutable",
									"name": "amountToClaim",
									"nameLocation": "806:13:11",
									"nodeType": "VariableDeclaration",
									"scope": 5393,
									"src": "791:42:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 5138,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "791:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "355f303030",
										"id": 5139,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "822:11:11",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5000000000000000000000_by_1",
											"typeString": "int_const 5000000000000000000000"
										},
										"value": "5_000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c884ef83",
									"id": 5144,
									"mutability": "mutable",
									"name": "claimed",
									"nameLocation": "875:7:11",
									"nodeType": "VariableDeclaration",
									"scope": 5393,
									"src": "840:42:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 5143,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 5141,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "848:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "840:27:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 5142,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "859:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 5157,
										"nodeType": "Block",
										"src": "924:94:11",
										"statements": [
											{
												"expression": {
													"id": 5151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5149,
														"name": "tokenToClaim",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5137,
														"src": "934:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 5150,
														"name": "_tokenToClaim",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5146,
														"src": "949:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "934:28:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 5152,
												"nodeType": "ExpressionStatement",
												"src": "934:28:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 5154,
															"name": "_tokenToClaim",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5146,
															"src": "997:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 5153,
														"name": "tokenToClaimUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5423,
														"src": "977:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 5155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "977:34:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 5156,
												"nodeType": "EmitStatement",
												"src": "972:39:11"
											}
										]
									},
									"id": 5158,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5146,
												"mutability": "mutable",
												"name": "_tokenToClaim",
												"nameLocation": "909:13:11",
												"nodeType": "VariableDeclaration",
												"scope": 5158,
												"src": "901:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "901:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "900:23:11"
									},
									"returnParameters": {
										"id": 5148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "924:0:11"
									},
									"scope": 5393,
									"src": "889:129:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 5222,
										"nodeType": "Block",
										"src": "1148:503:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 5174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 5170,
															"name": "claimed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5144,
															"src": "1162:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 5172,
														"indexExpression": {
															"id": 5171,
															"name": "_wallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5161,
															"src": "1170:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1162:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 5173,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1181:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1162:20:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5187,
												"nodeType": "IfStatement",
												"src": "1158:163:11",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"baseExpression": {
																	"id": 5176,
																	"name": "claimed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5144,
																	"src": "1235:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 5178,
																"indexExpression": {
																	"id": 5177,
																	"name": "_wallet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5161,
																	"src": "1243:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1235:16:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"arguments": [
																	{
																		"id": 5183,
																		"name": "_wallet",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5161,
																		"src": "1299:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 5180,
																				"name": "tokenToClaim",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 5137,
																				"src": "1275:12:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 5179,
																			"name": "ILSP7",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 228,
																			"src": "1269:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_ILSP7DigitalAsset_$228_$",
																				"typeString": "type(contract ILSP7DigitalAsset)"
																			}
																		},
																		"id": 5181,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1269:19:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ILSP7DigitalAsset_$228",
																			"typeString": "contract ILSP7DigitalAsset"
																		}
																	},
																	"id": 5182,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1289:9:11",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 121,
																	"src": "1269:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 5184,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1269:38:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 5175,
															"name": "ClaimedAlready",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5403,
															"src": "1203:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																"typeString": "function (uint256,uint256) pure returns (error)"
															}
														},
														"id": 5185,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1203:118:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 5186,
													"nodeType": "RevertStatement",
													"src": "1196:125:11"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 5194,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1382:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AIAirdrop_$5393",
																		"typeString": "contract AIAirdrop"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_AIAirdrop_$5393",
																		"typeString": "contract AIAirdrop"
																	}
																],
																"id": 5193,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1374:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 5192,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1374:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 5195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1374:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 5196,
															"name": "_wallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5161,
															"src": "1401:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 5197,
															"name": "amountToClaim",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5140,
															"src": "1422:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 5198,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1449:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"hexValue": "",
															"id": 5199,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1467:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 5189,
																	"name": "tokenToClaim",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5137,
																	"src": "1338:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 5188,
																"name": "ILSP7",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 228,
																"src": "1332:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ILSP7DigitalAsset_$228_$",
																	"typeString": "type(contract ILSP7DigitalAsset)"
																}
															},
															"id": 5190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1332:19:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ILSP7DigitalAsset_$228",
																"typeString": "contract ILSP7DigitalAsset"
															}
														},
														"id": 5191,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1352:8:11",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 198,
														"src": "1332:28:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bool,bytes memory) external"
														}
													},
													"id": 5200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1332:147:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 5201,
												"nodeType": "ExpressionStatement",
												"src": "1332:147:11"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 5202,
															"name": "_claimCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5135,
															"src": "1489:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$264_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 5204,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1503:9:11",
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 290,
														"src": "1489:23:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$264_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$264_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 5205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1489:25:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 5206,
												"nodeType": "ExpressionStatement",
												"src": "1489:25:11"
											},
											{
												"expression": {
													"id": 5212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 5207,
															"name": "claimed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5144,
															"src": "1524:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 5209,
														"indexExpression": {
															"id": 5208,
															"name": "_wallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5161,
															"src": "1532:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1524:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 5210,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1543:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 5211,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1549:9:11",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1543:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1524:34:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 5213,
												"nodeType": "ExpressionStatement",
												"src": "1524:34:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 5215,
															"name": "_wallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5161,
															"src": "1597:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 5216,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1606:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 5217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1612:9:11",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1606:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 5214,
														"name": "Claimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5415,
														"src": "1589:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 5218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1589:33:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 5219,
												"nodeType": "EmitStatement",
												"src": "1584:38:11"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 5220,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1640:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 5169,
												"id": 5221,
												"nodeType": "Return",
												"src": "1633:11:11"
											}
										]
									},
									"documentation": {
										"id": 5159,
										"nodeType": "StructuredDocumentation",
										"src": "1024:41:11",
										"text": "@notice Add wallet to the cliamed pool"
									},
									"functionSelector": "1e83409a",
									"id": 5223,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 5164,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 5163,
												"name": "onlyOwner",
												"nameLocations": [
													"1109:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 5482,
												"src": "1109:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1109:9:11"
										},
										{
											"id": 5166,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 5165,
												"name": "whenNotPaused",
												"nameLocations": [
													"1119:13:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 5613,
												"src": "1119:13:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1119:13:11"
										}
									],
									"name": "claim",
									"nameLocation": "1079:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5161,
												"mutability": "mutable",
												"name": "_wallet",
												"nameLocation": "1093:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 5223,
												"src": "1085:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1085:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1084:17:11"
									},
									"returnParameters": {
										"id": 5169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 5223,
												"src": "1142:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 5167,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1142:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1141:6:11"
									},
									"scope": 5393,
									"src": "1070:581:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 5243,
										"nodeType": "Block",
										"src": "1804:105:11",
										"statements": [
											{
												"expression": {
													"id": 5235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5233,
														"name": "amountToClaim",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5140,
														"src": "1814:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 5234,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5226,
														"src": "1830:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1814:23:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 5236,
												"nodeType": "ExpressionStatement",
												"src": "1814:23:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 5238,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5226,
															"src": "1873:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 5237,
														"name": "amountToClaimUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5419,
														"src": "1852:20:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 5239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1852:29:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 5240,
												"nodeType": "EmitStatement",
												"src": "1847:34:11"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 5241,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1898:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 5232,
												"id": 5242,
												"nodeType": "Return",
												"src": "1891:11:11"
											}
										]
									},
									"documentation": {
										"id": 5224,
										"nodeType": "StructuredDocumentation",
										"src": "1657:36:11",
										"text": "@notice Update token claim count"
									},
									"functionSelector": "53a4cff4",
									"id": 5244,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 5229,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 5228,
												"name": "onlyOwner",
												"nameLocations": [
													"1767:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 5482,
												"src": "1767:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1767:9:11"
										}
									],
									"name": "updateAmountToClaim",
									"nameLocation": "1707:19:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5226,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1735:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 5244,
												"src": "1727:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1727:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1726:17:11"
									},
									"returnParameters": {
										"id": 5232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 5244,
												"src": "1794:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 5230,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1794:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1793:6:11"
									},
									"scope": 5393,
									"src": "1698:211:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 5263,
										"nodeType": "Block",
										"src": "2019:101:11",
										"statements": [
											{
												"expression": {
													"id": 5255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5253,
														"name": "tokenToClaim",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5137,
														"src": "2029:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 5254,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5246,
														"src": "2044:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2029:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 5256,
												"nodeType": "ExpressionStatement",
												"src": "2029:21:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 5258,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5246,
															"src": "2085:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 5257,
														"name": "tokenToClaimUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5423,
														"src": "2065:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 5259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2065:27:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 5260,
												"nodeType": "EmitStatement",
												"src": "2060:32:11"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 5261,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2109:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 5252,
												"id": 5262,
												"nodeType": "Return",
												"src": "2102:11:11"
											}
										]
									},
									"functionSelector": "af66ef65",
									"id": 5264,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 5249,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 5248,
												"name": "onlyOwner",
												"nameLocations": [
													"1982:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 5482,
												"src": "1982:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1982:9:11"
										}
									],
									"name": "updateTokenToClaim",
									"nameLocation": "1924:18:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5246,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "1951:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 5264,
												"src": "1943:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1943:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1942:16:11"
									},
									"returnParameters": {
										"id": 5252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5251,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 5264,
												"src": "2009:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 5250,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2009:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:6:11"
									},
									"scope": 5393,
									"src": "1915:205:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 5294,
										"nodeType": "Block",
										"src": "2329:87:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 5286,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2374:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AIAirdrop_$5393",
																		"typeString": "contract AIAirdrop"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_AIAirdrop_$5393",
																		"typeString": "contract AIAirdrop"
																	}
																],
																"id": 5285,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2366:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 5284,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2366:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 5287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2366:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 5288,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5269,
															"src": "2381:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 5289,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5271,
															"src": "2386:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 5290,
															"name": "_force",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5273,
															"src": "2395:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 5291,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5275,
															"src": "2403:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 5281,
																	"name": "_LSP7Token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5267,
																	"src": "2345:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 5280,
																"name": "ILSP7",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 228,
																"src": "2339:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ILSP7DigitalAsset_$228_$",
																	"typeString": "type(contract ILSP7DigitalAsset)"
																}
															},
															"id": 5282,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2339:17:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ILSP7DigitalAsset_$228",
																"typeString": "contract ILSP7DigitalAsset"
															}
														},
														"id": 5283,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2357:8:11",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 198,
														"src": "2339:26:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bool,bytes memory) external"
														}
													},
													"id": 5292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2339:70:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 5293,
												"nodeType": "ExpressionStatement",
												"src": "2339:70:11"
											}
										]
									},
									"documentation": {
										"id": 5265,
										"nodeType": "StructuredDocumentation",
										"src": "2126:30:11",
										"text": "@notice Withdraw LSP7 token"
									},
									"functionSelector": "b8de4343",
									"id": 5295,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 5278,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 5277,
												"name": "onlyOwner",
												"nameLocations": [
													"2319:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 5482,
												"src": "2319:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2319:9:11"
										}
									],
									"name": "withdrawLSP7",
									"nameLocation": "2170:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5267,
												"mutability": "mutable",
												"name": "_LSP7Token",
												"nameLocation": "2200:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 5295,
												"src": "2192:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2192:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5269,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "2228:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 5295,
												"src": "2220:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2220:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5271,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2249:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 5295,
												"src": "2241:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2241:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5273,
												"mutability": "mutable",
												"name": "_force",
												"nameLocation": "2271:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 5295,
												"src": "2266:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 5272,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2266:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5275,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "2300:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 5295,
												"src": "2287:18:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 5274,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2287:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:129:11"
									},
									"returnParameters": {
										"id": 5279,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2329:0:11"
									},
									"scope": 5393,
									"src": "2161:255:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 5324,
										"nodeType": "Block",
										"src": "2553:151:11",
										"statements": [
											{
												"assignments": [
													5302
												],
												"declarations": [
													{
														"constant": false,
														"id": 5302,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "2571:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 5324,
														"src": "2563:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 5301,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2563:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 5308,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 5305,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "2588:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_AIAirdrop_$5393",
																	"typeString": "contract AIAirdrop"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_AIAirdrop_$5393",
																	"typeString": "contract AIAirdrop"
																}
															],
															"id": 5304,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2580:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 5303,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2580:7:11",
																"typeDescriptions": {}
															}
														},
														"id": 5306,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2580:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 5307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2594:7:11",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "2580:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2563:38:11"
											},
											{
												"assignments": [
													5310,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 5310,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2617:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 5324,
														"src": "2612:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 5309,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2612:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 5318,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 5316,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2658:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 5311,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5491,
																	"src": "2630:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 5312,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2630:7:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 5313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2638:4:11",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2630:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 5315,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 5314,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5302,
																"src": "2650:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2630:27:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 5317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2630:31:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2611:50:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 5320,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5310,
															"src": "2679:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4661696c6564",
															"id": 5321,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2688:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_329b6695cc078fec6f5eaa1763a4568ff856dfa63ebfa86719d6a43e911ffb23",
																"typeString": "literal_string \"Failed\""
															},
															"value": "Failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_329b6695cc078fec6f5eaa1763a4568ff856dfa63ebfa86719d6a43e911ffb23",
																"typeString": "literal_string \"Failed\""
															}
														],
														"id": 5319,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2671:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 5322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2671:26:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 5323,
												"nodeType": "ExpressionStatement",
												"src": "2671:26:11"
											}
										]
									},
									"documentation": {
										"id": 5296,
										"nodeType": "StructuredDocumentation",
										"src": "2422:89:11",
										"text": "@notice Withdraw the balance from this contract and transfer it to the owner's address"
									},
									"functionSelector": "3ccfd60b",
									"id": 5325,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 5299,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 5298,
												"name": "onlyOwner",
												"nameLocations": [
													"2543:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 5482,
												"src": "2543:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2543:9:11"
										}
									],
									"name": "withdraw",
									"nameLocation": "2525:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2533:2:11"
									},
									"returnParameters": {
										"id": 5300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2553:0:11"
									},
									"scope": 5393,
									"src": "2516:188:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 5349,
										"nodeType": "Block",
										"src": "2878:149:11",
										"statements": [
											{
												"assignments": [
													5336,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 5336,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2943:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 5349,
														"src": "2938:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 5335,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2938:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 5343,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 5341,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2981:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 5337,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5328,
																"src": "2956:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 5338,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2960:4:11",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2956:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 5340,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 5339,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5330,
																"src": "2972:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2956:24:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 5342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2956:28:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2937:47:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 5345,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5336,
															"src": "3002:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4661696c6564",
															"id": 5346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3011:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_329b6695cc078fec6f5eaa1763a4568ff856dfa63ebfa86719d6a43e911ffb23",
																"typeString": "literal_string \"Failed\""
															},
															"value": "Failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_329b6695cc078fec6f5eaa1763a4568ff856dfa63ebfa86719d6a43e911ffb23",
																"typeString": "literal_string \"Failed\""
															}
														],
														"id": 5344,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2994:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 5347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2994:26:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 5348,
												"nodeType": "ExpressionStatement",
												"src": "2994:26:11"
											}
										]
									},
									"documentation": {
										"id": 5326,
										"nodeType": "StructuredDocumentation",
										"src": "2710:63:11",
										"text": "@notice Transfer balance from this contract to input address"
									},
									"functionSelector": "56a6d9ef",
									"id": 5350,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 5333,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 5332,
												"name": "onlyOwner",
												"nameLocations": [
													"2864:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 5482,
												"src": "2864:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2864:9:11"
										}
									],
									"name": "transferBalance",
									"nameLocation": "2787:15:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5328,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "2819:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 5350,
												"src": "2803:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 5327,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2803:15:11",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5330,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2832:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 5350,
												"src": "2824:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2824:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2802:38:11"
									},
									"returnParameters": {
										"id": 5334,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2878:0:11"
									},
									"scope": 5393,
									"src": "2778:249:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 5362,
										"nodeType": "Block",
										"src": "3137:45:11",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 5358,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "3162:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_AIAirdrop_$5393",
																	"typeString": "contract AIAirdrop"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_AIAirdrop_$5393",
																	"typeString": "contract AIAirdrop"
																}
															],
															"id": 5357,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3154:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 5356,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3154:7:11",
																"typeDescriptions": {}
															}
														},
														"id": 5359,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3154:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 5360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3168:7:11",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "3154:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 5355,
												"id": 5361,
												"nodeType": "Return",
												"src": "3147:28:11"
											}
										]
									},
									"documentation": {
										"id": 5351,
										"nodeType": "StructuredDocumentation",
										"src": "3033:47:11",
										"text": "@notice Return the balance of this contract"
									},
									"functionSelector": "12065fe0",
									"id": 5363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nameLocation": "3094:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5352,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3104:2:11"
									},
									"returnParameters": {
										"id": 5355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5354,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 5363,
												"src": "3128:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3128:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3127:9:11"
									},
									"scope": 5393,
									"src": "3085:97:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 5372,
										"nodeType": "Block",
										"src": "3244:25:11",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 5369,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5671,
														"src": "3254:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 5370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3254:8:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 5371,
												"nodeType": "ExpressionStatement",
												"src": "3254:8:11"
											}
										]
									},
									"documentation": {
										"id": 5364,
										"nodeType": "StructuredDocumentation",
										"src": "3188:17:11",
										"text": "@notice Pause"
									},
									"functionSelector": "8456cb59",
									"id": 5373,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 5367,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 5366,
												"name": "onlyOwner",
												"nameLocations": [
													"3234:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 5482,
												"src": "3234:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "3234:9:11"
										}
									],
									"name": "pause",
									"nameLocation": "3219:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3224:2:11"
									},
									"returnParameters": {
										"id": 5368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3244:0:11"
									},
									"scope": 5393,
									"src": "3210:59:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 5382,
										"nodeType": "Block",
										"src": "3335:27:11",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 5379,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5687,
														"src": "3345:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 5380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3345:10:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 5381,
												"nodeType": "ExpressionStatement",
												"src": "3345:10:11"
											}
										]
									},
									"documentation": {
										"id": 5374,
										"nodeType": "StructuredDocumentation",
										"src": "3275:19:11",
										"text": "@notice Unpause"
									},
									"functionSelector": "3f4ba83a",
									"id": 5383,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 5377,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 5376,
												"name": "onlyOwner",
												"nameLocations": [
													"3325:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 5482,
												"src": "3325:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "3325:9:11"
										}
									],
									"name": "unpause",
									"nameLocation": "3308:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3315:2:11"
									},
									"returnParameters": {
										"id": 5378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3335:0:11"
									},
									"scope": 5393,
									"src": "3299:63:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 5391,
										"nodeType": "Block",
										"src": "3414:39:11",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 5388,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "3431:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 5389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3437:9:11",
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "3431:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 5387,
												"id": 5390,
												"nodeType": "Return",
												"src": "3424:22:11"
											}
										]
									},
									"functionSelector": "16ada547",
									"id": 5392,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "time",
									"nameLocation": "3377:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5384,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3381:2:11"
									},
									"returnParameters": {
										"id": 5387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5386,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 5392,
												"src": "3405:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3405:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3404:9:11"
									},
									"scope": 5393,
									"src": "3368:85:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 5394,
							"src": "616:2839:11",
							"usedErrors": [
								5403,
								5437,
								5442,
								5593,
								5596
							],
							"usedEvents": [
								5415,
								5419,
								5423,
								5448,
								5585,
								5590
							]
						}
					],
					"src": "32:3424:11"
				},
				"id": 11
			},
			"_error.sol": {
				"ast": {
					"absolutePath": "_error.sol",
					"exportedSymbols": {
						"ClaimedAlready": [
							5403
						],
						"Unauthorized": [
							5397
						]
					},
					"id": 5404,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 5395,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:12"
						},
						{
							"errorSelector": "82b42900",
							"id": 5397,
							"name": "Unauthorized",
							"nameLocation": "67:12:12",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 5396,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "79:2:12"
							},
							"src": "61:21:12"
						},
						{
							"errorSelector": "bbae19e6",
							"id": 5403,
							"name": "ClaimedAlready",
							"nameLocation": "90:14:12",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 5402,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 5399,
										"mutability": "mutable",
										"name": "lastTimeClaimed",
										"nameLocation": "113:15:12",
										"nodeType": "VariableDeclaration",
										"scope": 5403,
										"src": "105:23:12",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 5398,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "105:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 5401,
										"mutability": "mutable",
										"name": "userBalance",
										"nameLocation": "138:11:12",
										"nodeType": "VariableDeclaration",
										"scope": 5403,
										"src": "130:19:12",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 5400,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "130:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "104:46:12"
							},
							"src": "84:67:12"
						}
					],
					"src": "33:118:12"
				},
				"id": 12
			},
			"_event.sol": {
				"ast": {
					"absolutePath": "_event.sol",
					"exportedSymbols": {
						"Claimed": [
							5415
						],
						"Log": [
							5409
						],
						"amountToClaimUpdated": [
							5419
						],
						"tokenToClaimUpdated": [
							5423
						]
					},
					"id": 5424,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 5405,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:13"
						},
						{
							"anonymous": false,
							"eventSelector": "cf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab",
							"id": 5409,
							"name": "Log",
							"nameLocation": "67:3:13",
							"nodeType": "EventDefinition",
							"parameters": {
								"id": 5408,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 5407,
										"indexed": false,
										"mutability": "mutable",
										"name": "message",
										"nameLocation": "78:7:13",
										"nodeType": "VariableDeclaration",
										"scope": 5409,
										"src": "71:14:13",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_string_memory_ptr",
											"typeString": "string"
										},
										"typeName": {
											"id": 5406,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "71:6:13",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "70:16:13"
							},
							"src": "61:26:13"
						},
						{
							"anonymous": false,
							"eventSelector": "d8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a",
							"id": 5415,
							"name": "Claimed",
							"nameLocation": "95:7:13",
							"nodeType": "EventDefinition",
							"parameters": {
								"id": 5414,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 5411,
										"indexed": true,
										"mutability": "mutable",
										"name": "addr",
										"nameLocation": "119:4:13",
										"nodeType": "VariableDeclaration",
										"scope": 5415,
										"src": "103:20:13",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 5410,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "103:7:13",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 5413,
										"indexed": false,
										"mutability": "mutable",
										"name": "claimedTime",
										"nameLocation": "133:11:13",
										"nodeType": "VariableDeclaration",
										"scope": 5415,
										"src": "125:19:13",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 5412,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "125:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "102:43:13"
							},
							"src": "89:57:13"
						},
						{
							"anonymous": false,
							"eventSelector": "ccc2dc361dc3b02936a3d99c4cd064de1bbbb59a03aaad640d302e18f7aacdfb",
							"id": 5419,
							"name": "amountToClaimUpdated",
							"nameLocation": "154:20:13",
							"nodeType": "EventDefinition",
							"parameters": {
								"id": 5418,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 5417,
										"indexed": false,
										"mutability": "mutable",
										"name": "",
										"nameLocation": "-1:-1:-1",
										"nodeType": "VariableDeclaration",
										"scope": 5419,
										"src": "175:7:13",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 5416,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "175:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "174:9:13"
							},
							"src": "148:36:13"
						},
						{
							"anonymous": false,
							"eventSelector": "f9563f2ff8321c25ec4ee92f781a8d3ebc72f854daa4bf9177f3886b6ca1f7e1",
							"id": 5423,
							"name": "tokenToClaimUpdated",
							"nameLocation": "192:19:13",
							"nodeType": "EventDefinition",
							"parameters": {
								"id": 5422,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 5421,
										"indexed": false,
										"mutability": "mutable",
										"name": "",
										"nameLocation": "-1:-1:-1",
										"nodeType": "VariableDeclaration",
										"scope": 5423,
										"src": "212:7:13",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 5420,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "212:7:13",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "211:9:13"
							},
							"src": "186:35:13"
						}
					],
					"src": "33:188:13"
				},
				"id": 13
			},
			"_ownable.sol": {
				"ast": {
					"absolutePath": "_ownable.sol",
					"exportedSymbols": {
						"Context": [
							258
						],
						"Ownable": [
							5571
						]
					},
					"id": 5572,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 5425,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:14"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "@openzeppelin/contracts/utils/Context.sol",
							"id": 5427,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 5572,
							"sourceUnit": 259,
							"src": "128:66:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 5426,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 258,
										"src": "136:7:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5429,
										"name": "Context",
										"nameLocations": [
											"713:7:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 258,
										"src": "713:7:14"
									},
									"id": 5430,
									"nodeType": "InheritanceSpecifier",
									"src": "713:7:14"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 5428,
								"nodeType": "StructuredDocumentation",
								"src": "196:487:14",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 5571,
							"linearizedBaseContracts": [
								5571,
								258
							],
							"name": "Ownable",
							"nameLocation": "702:7:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 5432,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "743:6:14",
									"nodeType": "VariableDeclaration",
									"scope": 5571,
									"src": "727:22:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 5431,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "727:7:14",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 5433,
										"nodeType": "StructuredDocumentation",
										"src": "756:85:14",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 5437,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "852:26:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 5436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5435,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "887:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 5437,
												"src": "879:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5434,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "879:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "878:17:14"
									},
									"src": "846:50:14"
								},
								{
									"documentation": {
										"id": 5438,
										"nodeType": "StructuredDocumentation",
										"src": "902:82:14",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 5442,
									"name": "OwnableInvalidOwner",
									"nameLocation": "995:19:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 5441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5440,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1023:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 5442,
												"src": "1015:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1015:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1014:15:14"
									},
									"src": "989:41:14"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 5448,
									"name": "OwnershipTransferred",
									"nameLocation": "1042:20:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 5447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5444,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1079:13:14",
												"nodeType": "VariableDeclaration",
												"scope": 5448,
												"src": "1063:29:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1063:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5446,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1110:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 5448,
												"src": "1094:24:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:57:14"
									},
									"src": "1036:84:14"
								},
								{
									"body": {
										"id": 5473,
										"nodeType": "Block",
										"src": "1280:153:14",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 5459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5454,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5451,
														"src": "1294:12:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 5457,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1318:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 5456,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1310:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 5455,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1310:7:14",
																"typeDescriptions": {}
															}
														},
														"id": 5458,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1310:10:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1294:26:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5468,
												"nodeType": "IfStatement",
												"src": "1290:95:14",
												"trueBody": {
													"id": 5467,
													"nodeType": "Block",
													"src": "1322:63:14",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 5463,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1371:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 5462,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1363:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 5461,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1363:7:14",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 5464,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1363:10:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 5460,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5442,
																	"src": "1343:19:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 5465,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1343:31:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 5466,
															"nodeType": "RevertStatement",
															"src": "1336:38:14"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 5470,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5451,
															"src": "1413:12:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 5469,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5570,
														"src": "1394:18:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 5471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1394:32:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 5472,
												"nodeType": "ExpressionStatement",
												"src": "1394:32:14"
											}
										]
									},
									"documentation": {
										"id": 5449,
										"nodeType": "StructuredDocumentation",
										"src": "1126:115:14",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 5474,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5451,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1266:12:14",
												"nodeType": "VariableDeclaration",
												"scope": 5474,
												"src": "1258:20:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1258:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1257:22:14"
									},
									"returnParameters": {
										"id": 5453,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1280:0:14"
									},
									"scope": 5571,
									"src": "1246:187:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5481,
										"nodeType": "Block",
										"src": "1542:41:14",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 5477,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5508,
														"src": "1552:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 5478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1552:13:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 5479,
												"nodeType": "ExpressionStatement",
												"src": "1552:13:14"
											},
											{
												"id": 5480,
												"nodeType": "PlaceholderStatement",
												"src": "1575:1:14"
											}
										]
									},
									"documentation": {
										"id": 5475,
										"nodeType": "StructuredDocumentation",
										"src": "1439:77:14",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 5482,
									"name": "onlyOwner",
									"nameLocation": "1530:9:14",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 5476,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1539:2:14"
									},
									"src": "1521:62:14",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5490,
										"nodeType": "Block",
										"src": "1714:30:14",
										"statements": [
											{
												"expression": {
													"id": 5488,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 5432,
													"src": "1731:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 5487,
												"id": 5489,
												"nodeType": "Return",
												"src": "1724:13:14"
											}
										]
									},
									"documentation": {
										"id": 5483,
										"nodeType": "StructuredDocumentation",
										"src": "1589:65:14",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 5491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1668:5:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5484,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1673:2:14"
									},
									"returnParameters": {
										"id": 5487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5486,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 5491,
												"src": "1705:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1705:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1704:9:14"
									},
									"scope": 5571,
									"src": "1659:85:14",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 5507,
										"nodeType": "Block",
										"src": "1862:117:14",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 5499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 5495,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5491,
															"src": "1876:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 5496,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1876:7:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 5497,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "1887:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 5498,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1887:12:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1876:23:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5506,
												"nodeType": "IfStatement",
												"src": "1872:101:14",
												"trueBody": {
													"id": 5505,
													"nodeType": "Block",
													"src": "1901:72:14",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 5501,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 240,
																			"src": "1949:10:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 5502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1949:12:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 5500,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5437,
																	"src": "1922:26:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 5503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1922:40:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 5504,
															"nodeType": "RevertStatement",
															"src": "1915:47:14"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5492,
										"nodeType": "StructuredDocumentation",
										"src": "1750:62:14",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 5508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1826:11:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5493,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1837:2:14"
									},
									"returnParameters": {
										"id": 5494,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1862:0:14"
									},
									"scope": 5571,
									"src": "1817:162:14",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5521,
										"nodeType": "Block",
										"src": "2368:47:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 5517,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2405:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 5516,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2397:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 5515,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2397:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 5518,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2397:10:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 5514,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5570,
														"src": "2378:18:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 5519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2378:30:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 5520,
												"nodeType": "ExpressionStatement",
												"src": "2378:30:14"
											}
										]
									},
									"documentation": {
										"id": 5509,
										"nodeType": "StructuredDocumentation",
										"src": "1985:324:14",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 5522,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 5512,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 5511,
												"name": "onlyOwner",
												"nameLocations": [
													"2358:9:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 5482,
												"src": "2358:9:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "2358:9:14"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2323:17:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2340:2:14"
									},
									"returnParameters": {
										"id": 5513,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2368:0:14"
									},
									"scope": 5571,
									"src": "2314:101:14",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 5549,
										"nodeType": "Block",
										"src": "2634:145:14",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 5535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5530,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5525,
														"src": "2648:8:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 5533,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2668:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 5532,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2660:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 5531,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2660:7:14",
																"typeDescriptions": {}
															}
														},
														"id": 5534,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2660:10:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2648:22:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5544,
												"nodeType": "IfStatement",
												"src": "2644:91:14",
												"trueBody": {
													"id": 5543,
													"nodeType": "Block",
													"src": "2672:63:14",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 5539,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2721:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 5538,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2713:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 5537,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2713:7:14",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 5540,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2713:10:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 5536,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5442,
																	"src": "2693:19:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 5541,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2693:31:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 5542,
															"nodeType": "RevertStatement",
															"src": "2686:38:14"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 5546,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5525,
															"src": "2763:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 5545,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5570,
														"src": "2744:18:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 5547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2744:28:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 5548,
												"nodeType": "ExpressionStatement",
												"src": "2744:28:14"
											}
										]
									},
									"documentation": {
										"id": 5523,
										"nodeType": "StructuredDocumentation",
										"src": "2421:138:14",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 5550,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 5528,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 5527,
												"name": "onlyOwner",
												"nameLocations": [
													"2624:9:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 5482,
												"src": "2624:9:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "2624:9:14"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2573:17:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5525,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2599:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 5550,
												"src": "2591:16:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2591:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2590:18:14"
									},
									"returnParameters": {
										"id": 5529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2634:0:14"
									},
									"scope": 5571,
									"src": "2564:215:14",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 5569,
										"nodeType": "Block",
										"src": "2996:124:14",
										"statements": [
											{
												"assignments": [
													5557
												],
												"declarations": [
													{
														"constant": false,
														"id": 5557,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3014:8:14",
														"nodeType": "VariableDeclaration",
														"scope": 5569,
														"src": "3006:16:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 5556,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3006:7:14",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 5559,
												"initialValue": {
													"id": 5558,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 5432,
													"src": "3025:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3006:25:14"
											},
											{
												"expression": {
													"id": 5562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5560,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5432,
														"src": "3041:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 5561,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5553,
														"src": "3050:8:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3041:17:14",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 5563,
												"nodeType": "ExpressionStatement",
												"src": "3041:17:14"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 5565,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5557,
															"src": "3094:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 5566,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5553,
															"src": "3104:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 5564,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5448,
														"src": "3073:20:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 5567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3073:40:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 5568,
												"nodeType": "EmitStatement",
												"src": "3068:45:14"
											}
										]
									},
									"documentation": {
										"id": 5551,
										"nodeType": "StructuredDocumentation",
										"src": "2785:143:14",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 5570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2942:18:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5553,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2969:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 5570,
												"src": "2961:16:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5552,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2961:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2960:18:14"
									},
									"returnParameters": {
										"id": 5555,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2996:0:14"
									},
									"scope": 5571,
									"src": "2933:187:14",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 5572,
							"src": "684:2438:14",
							"usedErrors": [
								5437,
								5442
							],
							"usedEvents": [
								5448
							]
						}
					],
					"src": "102:3020:14"
				},
				"id": 14
			},
			"_pausable.sol": {
				"ast": {
					"absolutePath": "_pausable.sol",
					"exportedSymbols": {
						"Context": [
							258
						],
						"Pausable": [
							5688
						]
					},
					"id": 5689,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 5573,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:15"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "@openzeppelin/contracts/utils/Context.sol",
							"id": 5575,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 5689,
							"sourceUnit": 259,
							"src": "128:66:15",
							"symbolAliases": [
								{
									"foreign": {
										"id": 5574,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 258,
										"src": "136:7:15",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5577,
										"name": "Context",
										"nameLocations": [
											"666:7:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 258,
										"src": "666:7:15"
									},
									"id": 5578,
									"nodeType": "InheritanceSpecifier",
									"src": "666:7:15"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 5576,
								"nodeType": "StructuredDocumentation",
								"src": "196:439:15",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 5688,
							"linearizedBaseContracts": [
								5688,
								258
							],
							"name": "Pausable",
							"nameLocation": "654:8:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 5580,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "693:7:15",
									"nodeType": "VariableDeclaration",
									"scope": 5688,
									"src": "680:20:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 5579,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "680:4:15",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 5581,
										"nodeType": "StructuredDocumentation",
										"src": "707:73:15",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 5585,
									"name": "Paused",
									"nameLocation": "791:6:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 5584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5583,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "806:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 5585,
												"src": "798:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "798:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "797:17:15"
									},
									"src": "785:30:15"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 5586,
										"nodeType": "StructuredDocumentation",
										"src": "821:70:15",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 5590,
									"name": "Unpaused",
									"nameLocation": "902:8:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 5589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5588,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "919:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 5590,
												"src": "911:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "911:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "910:17:15"
									},
									"src": "896:32:15"
								},
								{
									"documentation": {
										"id": 5591,
										"nodeType": "StructuredDocumentation",
										"src": "934:76:15",
										"text": " @dev The operation failed because the contract is paused."
									},
									"errorSelector": "d93c0665",
									"id": 5593,
									"name": "EnforcedPause",
									"nameLocation": "1021:13:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 5592,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1034:2:15"
									},
									"src": "1015:22:15"
								},
								{
									"documentation": {
										"id": 5594,
										"nodeType": "StructuredDocumentation",
										"src": "1043:80:15",
										"text": " @dev The operation failed because the contract is not paused."
									},
									"errorSelector": "8dfc202b",
									"id": 5596,
									"name": "ExpectedPause",
									"nameLocation": "1134:13:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 5595,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1147:2:15"
									},
									"src": "1128:22:15"
								},
								{
									"body": {
										"id": 5604,
										"nodeType": "Block",
										"src": "1242:32:15",
										"statements": [
											{
												"expression": {
													"id": 5602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5600,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5580,
														"src": "1252:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 5601,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1262:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1252:15:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5603,
												"nodeType": "ExpressionStatement",
												"src": "1252:15:15"
											}
										]
									},
									"documentation": {
										"id": 5597,
										"nodeType": "StructuredDocumentation",
										"src": "1156:67:15",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 5605,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5598,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1239:2:15"
									},
									"returnParameters": {
										"id": 5599,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1242:0:15"
									},
									"scope": 5688,
									"src": "1228:46:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5612,
										"nodeType": "Block",
										"src": "1485:47:15",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 5608,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5642,
														"src": "1495:17:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 5609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1495:19:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 5610,
												"nodeType": "ExpressionStatement",
												"src": "1495:19:15"
											},
											{
												"id": 5611,
												"nodeType": "PlaceholderStatement",
												"src": "1524:1:15"
											}
										]
									},
									"documentation": {
										"id": 5606,
										"nodeType": "StructuredDocumentation",
										"src": "1280:175:15",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 5613,
									"name": "whenNotPaused",
									"nameLocation": "1469:13:15",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 5607,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1482:2:15"
									},
									"src": "1460:72:15",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5620,
										"nodeType": "Block",
										"src": "1732:44:15",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 5616,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5655,
														"src": "1742:14:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 5617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1742:16:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 5618,
												"nodeType": "ExpressionStatement",
												"src": "1742:16:15"
											},
											{
												"id": 5619,
												"nodeType": "PlaceholderStatement",
												"src": "1768:1:15"
											}
										]
									},
									"documentation": {
										"id": 5614,
										"nodeType": "StructuredDocumentation",
										"src": "1538:167:15",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 5621,
									"name": "whenPaused",
									"nameLocation": "1719:10:15",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 5615,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1729:2:15"
									},
									"src": "1710:66:15",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5629,
										"nodeType": "Block",
										"src": "1924:31:15",
										"statements": [
											{
												"expression": {
													"id": 5627,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 5580,
													"src": "1941:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 5626,
												"id": 5628,
												"nodeType": "Return",
												"src": "1934:14:15"
											}
										]
									},
									"documentation": {
										"id": 5622,
										"nodeType": "StructuredDocumentation",
										"src": "1782:84:15",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 5630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1880:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5623,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1886:2:15"
									},
									"returnParameters": {
										"id": 5626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5625,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 5630,
												"src": "1918:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 5624,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1918:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1917:6:15"
									},
									"scope": 5688,
									"src": "1871:84:15",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 5641,
										"nodeType": "Block",
										"src": "2074:77:15",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 5634,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5630,
														"src": "2088:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 5635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2088:8:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5640,
												"nodeType": "IfStatement",
												"src": "2084:61:15",
												"trueBody": {
													"id": 5639,
													"nodeType": "Block",
													"src": "2098:47:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 5636,
																	"name": "EnforcedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5593,
																	"src": "2119:13:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 5637,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2119:15:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 5638,
															"nodeType": "RevertStatement",
															"src": "2112:22:15"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5631,
										"nodeType": "StructuredDocumentation",
										"src": "1961:57:15",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 5642,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "2032:17:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5632,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2049:2:15"
									},
									"returnParameters": {
										"id": 5633,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2074:0:15"
									},
									"scope": 5688,
									"src": "2023:128:15",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5654,
										"nodeType": "Block",
										"src": "2271:78:15",
										"statements": [
											{
												"condition": {
													"id": 5648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2285:9:15",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 5646,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5630,
															"src": "2286:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 5647,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2286:8:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5653,
												"nodeType": "IfStatement",
												"src": "2281:62:15",
												"trueBody": {
													"id": 5652,
													"nodeType": "Block",
													"src": "2296:47:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 5649,
																	"name": "ExpectedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5596,
																	"src": "2317:13:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 5650,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2317:15:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 5651,
															"nodeType": "RevertStatement",
															"src": "2310:22:15"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5643,
										"nodeType": "StructuredDocumentation",
										"src": "2157:61:15",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 5655,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "2232:14:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5644,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2246:2:15"
									},
									"returnParameters": {
										"id": 5645,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2271:0:15"
									},
									"scope": 5688,
									"src": "2223:126:15",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5670,
										"nodeType": "Block",
										"src": "2533:66:15",
										"statements": [
											{
												"expression": {
													"id": 5663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5661,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5580,
														"src": "2543:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 5662,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2553:4:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2543:14:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5664,
												"nodeType": "ExpressionStatement",
												"src": "2543:14:15"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 5666,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 240,
																"src": "2579:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 5667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2579:12:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 5665,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5585,
														"src": "2572:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 5668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2572:20:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 5669,
												"nodeType": "EmitStatement",
												"src": "2567:25:15"
											}
										]
									},
									"documentation": {
										"id": 5656,
										"nodeType": "StructuredDocumentation",
										"src": "2355:124:15",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 5671,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 5659,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 5658,
												"name": "whenNotPaused",
												"nameLocations": [
													"2519:13:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 5613,
												"src": "2519:13:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "2519:13:15"
										}
									],
									"name": "_pause",
									"nameLocation": "2493:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5657,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2499:2:15"
									},
									"returnParameters": {
										"id": 5660,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2533:0:15"
									},
									"scope": 5688,
									"src": "2484:115:15",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5686,
										"nodeType": "Block",
										"src": "2779:69:15",
										"statements": [
											{
												"expression": {
													"id": 5679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5677,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5580,
														"src": "2789:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 5678,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2799:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2789:15:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5680,
												"nodeType": "ExpressionStatement",
												"src": "2789:15:15"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 5682,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 240,
																"src": "2828:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 5683,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2828:12:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 5681,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5590,
														"src": "2819:8:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 5684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2819:22:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 5685,
												"nodeType": "EmitStatement",
												"src": "2814:27:15"
											}
										]
									},
									"documentation": {
										"id": 5672,
										"nodeType": "StructuredDocumentation",
										"src": "2605:121:15",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 5687,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 5675,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 5674,
												"name": "whenPaused",
												"nameLocations": [
													"2768:10:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 5621,
												"src": "2768:10:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "2768:10:15"
										}
									],
									"name": "_unpause",
									"nameLocation": "2740:8:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5673,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2748:2:15"
									},
									"returnParameters": {
										"id": 5676,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2779:0:15"
									},
									"scope": 5688,
									"src": "2731:117:15",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 5689,
							"src": "636:2214:15",
							"usedErrors": [
								5593,
								5596
							],
							"usedEvents": [
								5585,
								5590
							]
						}
					],
					"src": "102:2748:15"
				},
				"id": 15
			}
		}
	}
}